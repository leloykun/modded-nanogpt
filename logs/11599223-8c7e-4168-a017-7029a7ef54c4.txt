import os
import sys
with open(sys.argv[0]) as f:
    code = f.read() # read the code of this file ASAP, for logging
import uuid
import time
import copy
import glob
from dataclasses import dataclass
from functools import lru_cache
from pathlib import Path

os.environ["PYTORCH_CUDA_ALLOC_CONF"] = "expandable_segments:True"
import torch
torch.empty(1, device="cuda", requires_grad=True).backward() # prevents a bug on some systems
from torch import Tensor, nn
import torch.nn.functional as F
import torch.distributed as dist
# use of FlexAttention contributed by @KoszarskyB
from torch.nn.attention.flex_attention import BlockMask, flex_attention
#torch._inductor.config.coordinate_descent_tuning = True # we have banned this flag for new records because it causes compilation to take 30min

# -----------------------------------------------------------------------------
# Custom operators: FP8 matmul by @YouJiacheng

@torch.library.custom_op("nanogpt::mm", mutates_args=())
def mm_op(x: Tensor, w: Tensor, x_s: float, w_s: float, grad_s: float) -> tuple[Tensor, Tensor, Tensor]:
    @torch.compile
    def impl(x: Tensor, w: Tensor):
        assert x.is_contiguous() and w.is_contiguous()
        x_f8 = x.div(x_s).to(torch.float8_e4m3fn)
        w_f8 = w.div(w_s).to(torch.float8_e4m3fn)
        out = torch._scaled_mm(
            x_f8,
            w_f8.T,
            out_dtype=torch.bfloat16,
            scale_a=x.new_tensor(x_s, dtype=torch.float32),
            scale_b=x.new_tensor(w_s, dtype=torch.float32),
            use_fast_accum=True,
        )
        return out, x_f8, w_f8

    return impl(x, w)

@mm_op.register_fake
def _(x: Tensor, w: Tensor, *_):
    assert x.ndim == w.ndim == 2
    assert x.shape[1] == w.shape[1]
    assert x.device == w.device
    assert x.is_contiguous() and w.is_contiguous()
    return x @ w.T, x.to(torch.float8_e4m3fn), w.to(torch.float8_e4m3fn)

@torch.library.custom_op("nanogpt::mm_backward", mutates_args=())
def mm_backward_op(g: Tensor, x_f8: Tensor, w_f8: Tensor, x_s: float, w_s: float, grad_s: float) -> tuple[Tensor, Tensor]:
    @torch.compile
    def impl(grad: Tensor, x_f8: Tensor, w_f8: Tensor):
        assert grad.is_contiguous()
        x_inv_s = grad.new_tensor(x_s, dtype=torch.float32)
        w_inv_s = grad.new_tensor(w_s, dtype=torch.float32)
        grad_inv_s = grad.new_tensor(grad_s, dtype=torch.float32)
        grad_f8 = grad.div(grad_s).to(torch.float8_e5m2)
        grad_x = torch._scaled_mm(
            grad_f8,
            w_f8.T.contiguous().T,
            out_dtype=torch.bfloat16,
            scale_a=grad_inv_s,
            scale_b=w_inv_s,
            use_fast_accum=False,
        )
        # faster than grad_f8_t @ x_f8, for (d_out, d_in) == (50304, 768)
        grad_w = torch._scaled_mm(
            x_f8.T.contiguous(),
            grad_f8.T.contiguous().T,
            out_dtype=torch.float32,
            scale_a=x_inv_s,
            scale_b=grad_inv_s,
            use_fast_accum=False,
        ).T
        return grad_x, grad_w

    return impl(g, x_f8, w_f8)

@mm_backward_op.register_fake
def _(g: Tensor, x_f8: Tensor, w_f8: Tensor, *_):
    return x_f8.to(torch.bfloat16), w_f8.T.contiguous().T.to(torch.float32)

def backward(ctx, grad_out: Tensor, *_):
    x_f8, w_f8 = ctx.saved_tensors
    x_s, w_s, grad_s = ctx.scales
    grad_x, grad_w = torch.ops.nanogpt.mm_backward(
        grad_out, x_f8, w_f8, x_s, w_s, grad_s
    )
    return grad_x, grad_w, None, None, None

def setup_context(ctx: torch.autograd.function.FunctionCtx, inputs, output):
    *_, x_s, w_s, grad_s = inputs
    _, x_f8, w_f8 = output
    ctx.save_for_backward(x_f8, w_f8)
    ctx.scales = x_s, w_s, grad_s
    ctx.set_materialize_grads(False)

mm_op.register_autograd(backward, setup_context=setup_context)

# -----------------------------------------------------------------------------
# Muon optimizer

@torch.compile
def zeropower_via_newtonschulz5(G: Tensor, steps: int) -> Tensor:
    """
    Newton-Schulz iteration to compute the zeroth power / orthogonalization of G. We opt to use a
    quintic iteration whose coefficients are selected to maximize the slope at zero. For the purpose
    of minimizing steps, it turns out to be empirically effective to keep increasing the slope at
    zero even beyond the point where the iteration no longer converges all the way to one everywhere
    on the interval. This iteration therefore does not produce UV^T but rather something like US'V^T
    where S' is diagonal with S_{ii}' ~ Uniform(0.5, 1.5), which turns out not to hurt model
    performance at all relative to UV^T, where USV^T = G is the SVD.
    """
    assert G.ndim >= 2 # batched Muon implementation by @scottjmaddox, and put into practice in the record by @YouJiacheng
    a, b, c = (3.4445, -4.7750,  2.0315)
    X = G.bfloat16()
    if G.size(-2) > G.size(-1):
        X = X.mT

    # Ensure spectral norm is at most 1
    X = X / (X.norm(dim=(-2, -1), keepdim=True) + 1e-7)
    # Perform the NS iterations
    for _ in range(steps):
        A = X @ X.mT
        B = b * A + c * A @ A # quintic computation strategy adapted from suggestion by @jxbz, @leloykun, and @YouJiacheng
        X = a * X + B @ X
    
    if G.size(-2) > G.size(-1):
        X = X.mT
    return X

class Muon(torch.optim.Optimizer):
    """
    Muon - MomentUm Orthogonalized by Newton-schulz

    https://kellerjordan.github.io/posts/muon/

    Muon internally runs standard SGD-momentum, and then performs an orthogonalization post-
    processing step, in which each 2D parameter's update is replaced with the nearest orthogonal
    matrix. To efficiently orthogonalize each update, we use a Newton-Schulz iteration, which has
    the advantage that it can be stably run in bfloat16 on the GPU.

    Some warnings:
    - This optimizer should not be used for the embedding layer, the final fully connected layer,
    or any {0,1}-D parameters; those should all be optimized by a standard method (e.g., AdamW).
    - To use it with 4D convolutional filters, it works well to just flatten their last 3 dimensions.

    Arguments:
        lr: The learning rate used by the internal SGD.
        momentum: The momentum used by the internal SGD.
        nesterov: Whether to use Nesterov-style momentum in the internal SGD. (recommended)
        ns_steps: The number of Newton-Schulz iteration steps to use.
    """
    def __init__(self, params, lr=0.02, momentum=0.95, nesterov=True, ns_steps=5, rank=0, world_size=1):
        self.rank = rank
        self.world_size = world_size
        defaults = dict(lr=lr, momentum=momentum, nesterov=nesterov, ns_steps=ns_steps)
        params: list[Tensor] = [*params]
        param_groups = []
        for size in {p.numel() for p in params}:
            b = torch.empty(world_size, size, dtype=torch.bfloat16, device="cuda")
            group = dict(params=[p for p in params if p.numel() == size],
                         update_buffer=b, update_buffer_views=[b[i] for i in range(world_size)])
            param_groups.append(group)
        super().__init__(param_groups, defaults)

    @torch.no_grad()
    def step(self):
        for group in self.param_groups:
            update_buffer: Tensor = group["update_buffer"]
            update_buffer_views: list[Tensor] = group["update_buffer_views"]
            # generate weight updates in distributed fashion
            params: list[Tensor] = group["params"]
            handle = None
            params_world = None
            def update_prev(): # optimized Muon implementation contributed by @YouJiacheng
                handle.wait()
                for p_world, g_world in zip(params_world, update_buffer_views):
                    p_world.add_(g_world.view_as(p_world),
                                 alpha=-group["lr"] * max(1, p_world.size(-2) / p_world.size(-1))**0.5)
            for base_i in range(len(params))[::self.world_size]:
                if base_i + self.rank < len(params):
                    p = params[base_i + self.rank]
                    g = p.grad
                    assert g is not None
                    state = self.state[p]
                    if "momentum_buffer" not in state:
                        state["momentum_buffer"] = torch.zeros_like(g)
                    buf: Tensor = state["momentum_buffer"]
                    buf.lerp_(g, 1 - group["momentum"])
                    g = g.lerp_(buf, group["momentum"]) if group["nesterov"] else buf
                    g = zeropower_via_newtonschulz5(g, steps=group["ns_steps"]).flatten()
                else:
                    g = update_buffer_views[self.rank]
                if base_i > 0:
                    update_prev() # async all_gather instead of sync all_reduce by @YouJiacheng
                handle = dist.all_gather_into_tensor(update_buffer, g, async_op=True)
                params_world = params[base_i : base_i + self.world_size]
            update_prev()

# -----------------------------------------------------------------------------
# PyTorch nn.Module definitions for the model

def norm(x: Tensor):
    return F.rms_norm(x, (x.size(-1),))

class CastedLinear(nn.Linear):
    def __init__(self, in_features: int, out_features: int, use_fp8=False, x_s=1.0, w_s=1.0, grad_s=1.0):
        super().__init__(in_features, out_features, bias=False)
        self.use_fp8 = use_fp8
        self.x_s = x_s
        self.w_s = w_s
        self.grad_s = grad_s

    def reset_parameters(self) -> None:
        std = 0.5 * (self.in_features ** -0.5) # 0.5 is a bit better than the default 1/sqrt(3)
        bound = (3 ** 0.5) * std
        with torch.no_grad():
            self.weight.uniform_(-bound, bound)

    def forward(self, x: Tensor):
        if self.use_fp8 and self.training:
            _x = x.flatten(0, -2)
            out: Tensor = torch.ops.nanogpt.mm(_x, self.weight, x_s=self.x_s, w_s=self.w_s, grad_s=self.grad_s)[0]
            return out.reshape(*x.shape[:-1], -1)
        else:
            return F.linear(x, self.weight.type_as(x))

class Rotary(nn.Module):
    def __init__(self, dim: int, max_seq_len: int):
        super().__init__()
        # half-truncate RoPE by @YouJiacheng (w/ base freq tuning)
        angular_freq = (1 / 1024) ** torch.linspace(0, 1, steps=dim//4, dtype=torch.float32)
        angular_freq = torch.cat([angular_freq, angular_freq.new_zeros(dim//4)])
        t = torch.arange(max_seq_len, dtype=torch.float32)
        theta = torch.einsum("i,j -> ij", t, angular_freq)
        self.cos = nn.Buffer(theta.cos(), persistent=False)
        self.sin = nn.Buffer(theta.sin(), persistent=False)

    def forward(self, x_BTHD: Tensor):
        assert self.cos.size(0) >= x_BTHD.size(-3)
        cos, sin = self.cos[None, :x_BTHD.size(-3), None, :], self.sin[None, :x_BTHD.size(-3), None, :]
        x1, x2 = x_BTHD.to(dtype=torch.float32).chunk(2, dim=-1)
        y1 = x1 * cos + x2 * sin
        y2 = x1 * (-sin) + x2 * cos
        return torch.cat((y1, y2), 3).type_as(x_BTHD)

class CausalSelfAttention(nn.Module):
    def __init__(self, dim: int, num_heads: int, max_seq_len: int, head_dim=128):
        super().__init__()
        self.num_heads = num_heads
        self.head_dim = head_dim
        hdim = num_heads * head_dim
        std = 0.5 * (dim ** -0.5)
        bound = (3 ** 0.5) * std # improved init scale by @YouJiacheng
        # merged QKV weights: suggested by many, implemented by @fernbear.bsky.social, and further improved by @YouJiacheng
        # https://x.com/hi_tysam/status/1879699187107033311
        self.qkv_w = nn.Parameter(torch.empty(3, hdim, dim).uniform_(-bound, bound))
        self.lambdas = nn.Parameter(torch.tensor([0.5, 0.5]))
        self.rotary = Rotary(head_dim, max_seq_len)
        self.c_proj = CastedLinear(hdim, dim)
        self.c_proj.weight.detach().zero_() # zero init suggested by @Grad62304977

    def forward(self, x: Tensor, ve: Tensor | None, block_mask: BlockMask):
        B, T = x.size(0), x.size(1) # batch size, sequence length
        assert B == 1, "Must use batch size = 1 for FlexAttention"
        q, k, v = F.linear(x, self.qkv_w.flatten(end_dim=1).type_as(x)).view(B, T, 3 * self.num_heads, self.head_dim).chunk(3, dim=-2)
        q, k = norm(q), norm(k) # QK norm @Grad62304977
        q, k = self.rotary(q), self.rotary(k)
        if ve is not None:
            v = self.lambdas[0] * v + self.lambdas[1] * ve.view_as(v) # @KoszarskyB & @Grad62304977
        else: # skip mid-layers token value embeddings by @YouJiacheng
            v = self.lambdas[0] * v
        # scale the attention logits by given constant, instead of the default head_dim**-0.5, by @leloykun
        # inspired by learnable scalars used by @brendanh0gan https://x.com/hi_tysam/status/1879693583898591283
        y = flex_attention(q.transpose(1, 2), k.transpose(1, 2), v.transpose(1, 2), block_mask=block_mask, scale=0.12).transpose(1, 2)
        y = y.contiguous().view(B, T, self.num_heads * self.head_dim) # re-assemble all head outputs side by side
        y = self.c_proj(y)
        return y

class MLP(nn.Module):
    def __init__(self, dim: int):
        super().__init__()
        hdim = 4 * dim
        self.c_fc = CastedLinear(dim, hdim)
        self.c_proj = CastedLinear(hdim, dim)
        self.c_proj.weight.detach().zero_() # zero init suggested by @Grad62304977

    def forward(self, x: Tensor):
        x = self.c_fc(x)
        x = F.relu6(x).square() # https://arxiv.org/abs/2109.08668v2; ~1-2% better than GELU; suggested by @SKYLINEZ007 and @Grad62304977
        x = self.c_proj(x)
        return x

class Block(nn.Module):
    def __init__(self, dim: int, num_heads: int, max_seq_len: int, layer_idx: int):
        super().__init__()
        # skip attention of blocks.7 (the 8th layer) by @YouJiacheng
        self.attn = CausalSelfAttention(dim, num_heads, max_seq_len) if layer_idx != 7 else None
        self.mlp = MLP(dim)
        self.lambdas = nn.Parameter(torch.tensor([1., 0.]))

    def forward(self, x: Tensor, ve: Tensor | None, x0: Tensor, block_mask: BlockMask):
        x = self.lambdas[0] * x + self.lambdas[1] * x0
        if self.attn is not None:
            x = x + self.attn(norm(x), ve, block_mask)
        x = x + self.mlp(norm(x))
        return x

# -----------------------------------------------------------------------------
# The main model

def next_multiple_of_n(v: float | int, *, n: int):
    return next(x for x in range(n, int(v) + 1 + n, n) if x >= v)

class GPT(nn.Module):
    def __init__(self, vocab_size: int, num_layers: int, num_heads: int, model_dim: int, max_seq_len: int):
        super().__init__()
        self.embed = nn.Embedding(vocab_size, model_dim)
        # token value embeddings by @KoszarskyB - inspired by @Grad62304977's value residual implementation following https://arxiv.org/abs/2410.17897
        # value embedding code simplification inspired by @ragulpr https://github.com/KellerJordan/modded-nanogpt/pull/78
        self.value_embeds = nn.ModuleList([nn.Embedding(vocab_size, model_dim) for _ in range(3)])
        self.blocks = nn.ModuleList([Block(model_dim, num_heads, max_seq_len, i) for i in range(num_layers)])
        # there are only 50257 unique GPT-2 tokens; we extend to nearest multiple of 128 for efficiency.
        # suggested to me by @Grad62304977. this originates from Karpathy's experiments.
        self.lm_head = CastedLinear(model_dim, next_multiple_of_n(vocab_size, n=128),
                                    use_fp8=True, x_s=(model_dim**0.5)/448, w_s=24/448, grad_s=1/448)
        self.lm_head.weight.detach().zero_() # @Grad62304977
        # Add learnable skip connection weights for decoder layers
        assert num_layers % 2 == 0
        self.skip_weights = nn.Parameter(torch.ones(num_layers//2))

    def create_blockmasks(self, input_seq: Tensor, sliding_window_num_blocks: Tensor):
        BLOCK_SIZE = 128
        docs = (input_seq == 50256).cumsum(0)

        def document_causal(b, h, q_idx, kv_idx):
            causal_mask = q_idx >= kv_idx
            document_mask = docs[q_idx] == docs[kv_idx]
            return causal_mask & document_mask

        def dense_to_ordered(dense_blockmask: Tensor):
            num_blocks = dense_blockmask.sum(dim=-1, dtype=torch.int32)
            indices = dense_blockmask.argsort(dim=-1, descending=False, stable=True).flip(-1).to(torch.int32)
            return num_blocks[None, None].contiguous(), indices[None, None].contiguous()

        # manual block mask creation by @YouJiacheng
        assert len(input_seq) % BLOCK_SIZE == 0
        NUM_BLOCKS = len(input_seq) // BLOCK_SIZE
        block_idx = torch.arange(NUM_BLOCKS, dtype=torch.int32, device="cuda")
        causal_blockmask_any = block_idx[:, None] >= block_idx
        causal_blockmask_all = block_idx[:, None] > block_idx
        docs_low = docs.view(-1, BLOCK_SIZE)[:, 0].contiguous()
        docs_high = docs.view(-1, BLOCK_SIZE)[:, -1].contiguous()
        document_blockmask_any = (docs_low[:, None] <= docs_high) & (docs_high[:, None] >= docs_low)
        document_blockmask_all = (docs_low[:, None] == docs_high) & (docs_high[:, None] == docs_low)
        blockmask_any = causal_blockmask_any & document_blockmask_any
        blockmask_all = causal_blockmask_all & document_blockmask_all
        partial_kv_num_blocks, partial_kv_indices = dense_to_ordered(blockmask_any & ~blockmask_all)
        full_kv_num_blocks, full_kv_indices = dense_to_ordered(blockmask_all)
        def build_bm(window_size_blocks: Tensor) -> BlockMask:
            return BlockMask.from_kv_blocks(
                torch.clamp_max(partial_kv_num_blocks, torch.clamp_min(window_size_blocks - full_kv_num_blocks, 1)),
                partial_kv_indices,
                torch.clamp_max(full_kv_num_blocks, window_size_blocks - 1),
                full_kv_indices,
                BLOCK_SIZE=BLOCK_SIZE,
                mask_mod=document_causal,
            )
        # Long-short SWA block masks by @leloykun & @YouJiacheng, adapated from suggestion by @Grad62304977, following Gemma 2 paper
        return build_bm(sliding_window_num_blocks), build_bm(sliding_window_num_blocks // 2)

    def forward(self, input_seq: Tensor, target_seq: Tensor, sliding_window_num_blocks: Tensor):
        assert input_seq.ndim == 1

        ve = [value_embed(input_seq) for value_embed in self.value_embeds]
        # 012 ... 012 structure on token value embeddings by @YouJiacheng, improved on @leloykun's U-net structure
        ve = [ve[0], ve[1], ve[2]] + [None] * (len(self.blocks) - 6) + [ve[0], ve[1], ve[2]]
        assert len(ve) == len(self.blocks)

        long_bm, short_bm = self.create_blockmasks(input_seq, sliding_window_num_blocks)
        block_masks = [long_bm, short_bm, short_bm, short_bm, long_bm, short_bm, short_bm, long_bm, short_bm, short_bm, short_bm, long_bm]
        assert len(block_masks) == len(self.blocks)

        x = x0 = norm(self.embed(input_seq)[None]) # use of norm here by @Grad62304977

        # U-net design by @brendanh0gan
        skip_connections = []
        n = len(self.skip_weights)
        for i in range(len(self.blocks)):
            if i >= n:
                x = x + self.skip_weights[i - n] * skip_connections.pop()
            x = self.blocks[i](x, ve[i], x0, block_masks[i])
            if i < n:
                skip_connections.append(x)

        x = norm(x)
        logits = self.lm_head(x).float()
        # @Grad62304977 added tanh softcapping following Gemma 2 paper, @KoszarskyB reduced it from 30 to 15, @YouJiacheng shifted it by +15 (2*sigmoid(2*x)=tanh(x)+1)
        logits = 30 * torch.sigmoid(logits / (7.5 * x.size(-1)**0.5))
        loss = F.cross_entropy(logits.view(-1, logits.size(-1)), target_seq, reduction='sum' if self.training else 'mean')
        return loss

# -----------------------------------------------------------------------------
# Our own simple Distributed Data Loader

def _load_data_shard(file: Path):
    header = torch.from_file(str(file), False, 256, dtype=torch.int32) # header is 256 int32
    assert header[0] == 20240520, "magic number mismatch in the data .bin file"
    assert header[1] == 1, "unsupported version"
    num_tokens = int(header[2]) # number of tokens (claimed)
    with file.open("rb", buffering=0) as f:
        tokens = torch.empty(num_tokens, dtype=torch.uint16, pin_memory=True) # avoid pin_memory copy by @YouJiacheng
        f.seek(256 * 4)
        nbytes = f.readinto(tokens.numpy()) # avoid bytes->array copy by @YouJiacheng
        assert nbytes == 2 * num_tokens, "number of tokens read does not match header"
    return tokens

def distributed_data_generator(filename_pattern: str, batch_size: int, rank : int, world_size : int):
    files = [Path(file) for file in sorted(glob.glob(filename_pattern))]
    assert batch_size % world_size == 0
    local_batch_size = batch_size // world_size
    file_iter = iter(files) # use itertools.cycle(files) instead if you want to do multi-epoch training
    tokens, pos = _load_data_shard(next(file_iter)), 0
    while True:
        if pos + batch_size + 1 >= len(tokens):
            tokens, pos = _load_data_shard(next(file_iter)), 0
        buf = tokens[pos + rank * local_batch_size:][:local_batch_size + 1]
        inputs = buf[:-1].to(device="cuda", dtype=torch.int32, non_blocking=True) # no sync on host side;
        targets = buf[1:].to(device="cuda", dtype=torch.int64, non_blocking=True) # H2D in another stream isn't helpful.
        pos += batch_size
        yield inputs, targets

# -----------------------------------------------------------------------------
# int main

@dataclass
class Hyperparameters:
    # data
    train_files = "data/fineweb10B/fineweb_train_*.bin" # input .bin to train on
    val_files = "data/fineweb10B/fineweb_val_*.bin" # input .bin to eval validation loss on
    val_tokens = 10485760 # how many tokens of validation data? it's important to keep this fixed for consistent comparisons
    train_seq_len = 48*1024 # FlexAttention sequence length
    val_seq_len = 4*64*1024 # FlexAttention sequence length for validation
    # optimization
    num_iterations = 1770 # number of iterations to run
    cooldown_frac = 0.4 # fraction of training spent cooling down the learning rate
    # architecture
    vocab_size = 50257
    # evaluation and logging
    val_loss_every = 125 # every how many steps to evaluate val loss? 0 for only at the end
    save_checkpoint = False
args = Hyperparameters()

# torchrun sets these env variables
rank = int(os.environ["RANK"])
world_size = int(os.environ["WORLD_SIZE"])
assert world_size == 8 # this code is designed for 8xH100
assert torch.cuda.is_available()
device = torch.device("cuda", int(os.environ["LOCAL_RANK"]))
torch.cuda.set_device(device)
dist.init_process_group(backend="nccl", device_id=device)
dist.barrier()
master_process = (rank == 0) # this process will do logging, checkpointing etc.

# begin logging
logfile = None
if master_process:
    run_id = uuid.uuid4()
    os.makedirs("logs", exist_ok=True)
    logfile = f"logs/{run_id}.txt"
    print(logfile)
def print0(s, console=False):
    if master_process:
        with open(logfile, "a") as f:
            if console:
                print(s)
            print(s, file=f)

# begin by printing this file (the Python code)
print0(code)
print0("="*100)
# log information about the hardware/software environment this is running on
print0(f"Running Python {sys.version}")
print0(f"Running PyTorch {torch.version.__version__} compiled for CUDA {torch.version.cuda}")
def nvidia_smi():
    import subprocess  # avoid top level import
    return subprocess.run(["nvidia-smi"], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True).stdout
print0(nvidia_smi())
print0("="*100)

########################################
#    Construct model and optimizer     #
########################################

model: nn.Module = GPT(vocab_size=args.vocab_size, num_layers=12, num_heads=6, model_dim=768,
                       max_seq_len=max(args.train_seq_len, args.val_seq_len)).cuda()
for m in model.modules():
    if isinstance(m, nn.Embedding):
        m.bfloat16()
for param in model.parameters():
    dist.broadcast(param.detach(), 0)

# collect the parameters to optimize
hidden_matrix_params = [p for n, p in model.blocks.named_parameters() if p.ndim >= 2 and "embed" not in n]
embed_params = [p for n, p in model.named_parameters() if "embed" in n]
scalar_params = [p for p in model.parameters() if p.ndim < 2]
head_params = [model.lm_head.weight]

# init the optimizer(s)
adam_params = [dict(params=head_params, lr=0.22), dict(params=embed_params, lr=0.6), dict(params=scalar_params, lr=0.04)]
# small adam epsilon by @YouJiacheng. this is an alternate method of fixing the world_size dependence
# discovered by @fernbear.bsky.social https://x.com/hi_tysam/status/1879692937589875094
optimizer1 = torch.optim.Adam(adam_params, betas=(0.8, 0.95), eps=1e-10, fused=True)
optimizer2 = Muon(hidden_matrix_params, lr=0.05, momentum=0.95, rank=rank, world_size=world_size)
optimizers = [optimizer1, optimizer2]
for opt in optimizers:
    for group in opt.param_groups:
        group["initial_lr"] = group["lr"]

# learning rate schedule: stable then decay
def get_lr(step: int):
    x = step / args.num_iterations # progress in training
    assert 0 <= x < 1
    if x < 1 - args.cooldown_frac:
        return 1.0
    else:
        w = (1 - x) / args.cooldown_frac
        return w * 1.0 + (1 - w) * 0.1

# attention window size schedule: linearly increase
@lru_cache(1)
def get_window_size_blocks_helper(window_size: int):
    return torch.tensor(window_size // 128, dtype=torch.int32, pin_memory=True).cuda(non_blocking=True)
def get_window_size_blocks(step: int):
    x = step / args.num_iterations # progress in training
    assert 0 <= x <= 1
    # Linearly increase the block-wise sliding window size over training 128 -> 1792
    # increase by @fernbear.bsky.social; block-wise by @YouJiacheng
    window_size = next_multiple_of_n(1728 * x, n=128)
    return get_window_size_blocks_helper(window_size)

model: nn.Module = torch.compile(model, dynamic=False)

########################################
#            Warmup kernels            #
########################################

# Warmup the training kernels, then re-initialize the state so we aren't cheating
warmup_steps = 10
initial_state = dict(model=copy.deepcopy(model.state_dict()),
                     optimizers=[copy.deepcopy(opt.state_dict()) for opt in optimizers]) # save the initial state
for _ in range(warmup_steps):
    inputs = targets = torch.randint(0, args.vocab_size, size=(args.train_seq_len,), device="cuda")
    model(inputs.to(torch.int32), targets, get_window_size_blocks(0)).backward()
    for param in model.parameters():
        dist.all_reduce(param.grad, op=dist.ReduceOp.AVG)
    for opt in optimizers:
        opt.step()
    model.zero_grad(set_to_none=True)
model.load_state_dict(initial_state["model"])
for opt, opt_state in zip(optimizers, initial_state["optimizers"]):
    opt.load_state_dict(opt_state)
del initial_state

########################################
#        Training and validation       #
########################################

train_loader = distributed_data_generator(args.train_files, world_size * args.train_seq_len, rank, world_size)
training_time_ms = 0
# start the clock
torch.cuda.synchronize()
t0 = time.perf_counter()
# begin training
train_steps = args.num_iterations
for step in range(train_steps + 1):
    last_step = (step == train_steps)

    # --------------- VALIDATION SECTION -----------------
    if last_step or (args.val_loss_every > 0 and step % args.val_loss_every == 0):
        # stop the clock
        torch.cuda.synchronize()
        training_time_ms += 1000 * (time.perf_counter() - t0)
        model.eval()
        val_batch_size = world_size * args.val_seq_len
        assert args.val_tokens % val_batch_size == 0
        val_steps = args.val_tokens // val_batch_size
        val_loader = distributed_data_generator(args.val_files, val_batch_size, rank, world_size)
        val_loss = 0
        with torch.no_grad():
            for _ in range(val_steps):
                inputs, targets = next(val_loader)
                val_loss += model(inputs, targets, get_window_size_blocks(step))
        val_loss /= val_steps
        del val_loader
        dist.all_reduce(val_loss, op=dist.ReduceOp.AVG)
        print0(f"step:{step}/{train_steps} val_loss:{val_loss:.4f} train_time:{training_time_ms:.0f}ms step_avg:{training_time_ms/max(step, 1):.2f}ms", console=True)
        model.train()
        # start the clock again
        torch.cuda.synchronize()
        t0 = time.perf_counter()

    if last_step:
        if master_process and args.save_checkpoint:
            log = dict(step=step, code=code, model=model.state_dict(), optimizers=[opt.state_dict() for opt in optimizers])
            os.makedirs(f"logs/{run_id}", exist_ok=True)
            torch.save(log, f"logs/{run_id}/state_step{step:06d}.pt")
        # the last step only has the validation loop, so break to avoid training
        break

    # --------------- TRAINING SECTION -----------------
    inputs, targets = next(train_loader)
    model(inputs, targets, get_window_size_blocks(step)).backward()
    for param in model.parameters():
        dist.all_reduce(param.grad, op=dist.ReduceOp.AVG)
    # set optimization hyperparameters
    for opt in optimizers:
        for group in opt.param_groups:
            group["lr"] = group["initial_lr"] * get_lr(step)
    for group in optimizer2.param_groups:
        frac = min(step / 300, 1) # momentum warmup for muon
        group["momentum"] = (1 - frac) * 0.85 + frac * 0.95
    # step the optimizers
    for opt in optimizers:
        opt.step()
    # null the gradients
    model.zero_grad(set_to_none=True)
    # logging
    approx_training_time_ms = training_time_ms + 1000 * (time.perf_counter() - t0)
    print0(f"step:{step+1}/{train_steps} train_time:{approx_training_time_ms:.0f}ms step_avg:{approx_training_time_ms/(step + 1):.2f}ms", console=True)

print0(f"peak memory allocated: {torch.cuda.max_memory_allocated() // 1024 // 1024} MiB "
       f"reserved: {torch.cuda.max_memory_reserved() // 1024 // 1024} MiB", console=True)
dist.destroy_process_group()

====================================================================================================
Running Python 3.10.12 (main, Nov  6 2024, 20:22:13) [GCC 11.4.0]
Running PyTorch 2.7.0.dev20250210+cu126 compiled for CUDA 12.6
Wed Apr  9 14:02:26 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 550.90.07              Driver Version: 550.90.07      CUDA Version: 12.4     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA H100 80GB HBM3          On  |   00000000:19:00.0 Off |                    0 |
| N/A   28C    P0            111W /  700W |    7714MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   1  NVIDIA H100 80GB HBM3          On  |   00000000:3B:00.0 Off |                    0 |
| N/A   26C    P0            117W /  700W |    3452MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   2  NVIDIA H100 80GB HBM3          On  |   00000000:4C:00.0 Off |                    0 |
| N/A   25C    P0            111W /  700W |    3452MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   3  NVIDIA H100 80GB HBM3          On  |   00000000:5D:00.0 Off |                    0 |
| N/A   27C    P0            110W /  700W |    3452MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   4  NVIDIA H100 80GB HBM3          On  |   00000000:9B:00.0 Off |                    0 |
| N/A   27C    P0            108W /  700W |    3452MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   5  NVIDIA H100 80GB HBM3          On  |   00000000:BB:00.0 Off |                    0 |
| N/A   26C    P0            110W /  700W |    3452MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   6  NVIDIA H100 80GB HBM3          On  |   00000000:CB:00.0 Off |                    0 |
| N/A   26C    P0            110W /  700W |    3452MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   7  NVIDIA H100 80GB HBM3          On  |   00000000:DB:00.0 Off |                    0 |
| N/A   25C    P0            111W /  700W |    3212MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
+-----------------------------------------------------------------------------------------+

====================================================================================================
step:0/1770 val_loss:10.8258 train_time:0ms step_avg:0.02ms
step:1/1770 train_time:118ms step_avg:117.93ms
step:2/1770 train_time:194ms step_avg:96.93ms
step:3/1770 train_time:283ms step_avg:94.46ms
step:4/1770 train_time:379ms step_avg:94.86ms
step:5/1770 train_time:476ms step_avg:95.22ms
step:6/1770 train_time:573ms step_avg:95.48ms
step:7/1770 train_time:670ms step_avg:95.68ms
step:8/1770 train_time:767ms step_avg:95.90ms
step:9/1770 train_time:863ms step_avg:95.91ms
step:10/1770 train_time:959ms step_avg:95.95ms
step:11/1770 train_time:1056ms step_avg:96.00ms
step:12/1770 train_time:1153ms step_avg:96.12ms
step:13/1770 train_time:1251ms step_avg:96.25ms
step:14/1770 train_time:1348ms step_avg:96.32ms
step:15/1770 train_time:1445ms step_avg:96.36ms
step:16/1770 train_time:1543ms step_avg:96.43ms
step:17/1770 train_time:1639ms step_avg:96.42ms
step:18/1770 train_time:1736ms step_avg:96.46ms
step:19/1770 train_time:1834ms step_avg:96.51ms
step:20/1770 train_time:1931ms step_avg:96.55ms
step:21/1770 train_time:2027ms step_avg:96.55ms
step:22/1770 train_time:2125ms step_avg:96.57ms
step:23/1770 train_time:2222ms step_avg:96.59ms
step:24/1770 train_time:2321ms step_avg:96.69ms
step:25/1770 train_time:2417ms step_avg:96.69ms
step:26/1770 train_time:2515ms step_avg:96.72ms
step:27/1770 train_time:2612ms step_avg:96.72ms
step:28/1770 train_time:2709ms step_avg:96.74ms
step:29/1770 train_time:2805ms step_avg:96.74ms
step:30/1770 train_time:2902ms step_avg:96.75ms
step:31/1770 train_time:2999ms step_avg:96.75ms
step:32/1770 train_time:3096ms step_avg:96.76ms
step:33/1770 train_time:3194ms step_avg:96.78ms
step:34/1770 train_time:3291ms step_avg:96.81ms
step:35/1770 train_time:3389ms step_avg:96.82ms
step:36/1770 train_time:3485ms step_avg:96.82ms
step:37/1770 train_time:3582ms step_avg:96.82ms
step:38/1770 train_time:3679ms step_avg:96.82ms
step:39/1770 train_time:3776ms step_avg:96.81ms
step:40/1770 train_time:3873ms step_avg:96.82ms
step:41/1770 train_time:3970ms step_avg:96.84ms
step:42/1770 train_time:4068ms step_avg:96.85ms
step:43/1770 train_time:4164ms step_avg:96.85ms
step:44/1770 train_time:4262ms step_avg:96.86ms
step:45/1770 train_time:4359ms step_avg:96.86ms
step:46/1770 train_time:4456ms step_avg:96.87ms
step:47/1770 train_time:4554ms step_avg:96.89ms
step:48/1770 train_time:4651ms step_avg:96.90ms
step:49/1770 train_time:4748ms step_avg:96.90ms
step:50/1770 train_time:4844ms step_avg:96.88ms
step:51/1770 train_time:4941ms step_avg:96.88ms
step:52/1770 train_time:5038ms step_avg:96.88ms
step:53/1770 train_time:5134ms step_avg:96.87ms
step:54/1770 train_time:5231ms step_avg:96.88ms
step:55/1770 train_time:5329ms step_avg:96.89ms
step:56/1770 train_time:5425ms step_avg:96.88ms
step:57/1770 train_time:5522ms step_avg:96.87ms
step:58/1770 train_time:5619ms step_avg:96.88ms
step:59/1770 train_time:5716ms step_avg:96.88ms
step:60/1770 train_time:5813ms step_avg:96.88ms
step:61/1770 train_time:5911ms step_avg:96.89ms
step:62/1770 train_time:6008ms step_avg:96.90ms
step:63/1770 train_time:6104ms step_avg:96.89ms
step:64/1770 train_time:6201ms step_avg:96.89ms
step:65/1770 train_time:6298ms step_avg:96.89ms
step:66/1770 train_time:6395ms step_avg:96.89ms
step:67/1770 train_time:6492ms step_avg:96.90ms
step:68/1770 train_time:6590ms step_avg:96.92ms
step:69/1770 train_time:6687ms step_avg:96.91ms
step:70/1770 train_time:6784ms step_avg:96.91ms
step:71/1770 train_time:6881ms step_avg:96.92ms
step:72/1770 train_time:6978ms step_avg:96.92ms
step:73/1770 train_time:7075ms step_avg:96.91ms
step:74/1770 train_time:7172ms step_avg:96.92ms
step:75/1770 train_time:7269ms step_avg:96.93ms
step:76/1770 train_time:7366ms step_avg:96.92ms
step:77/1770 train_time:7463ms step_avg:96.92ms
step:78/1770 train_time:7560ms step_avg:96.92ms
step:79/1770 train_time:7657ms step_avg:96.92ms
step:80/1770 train_time:7753ms step_avg:96.92ms
step:81/1770 train_time:7851ms step_avg:96.92ms
step:82/1770 train_time:7947ms step_avg:96.92ms
step:83/1770 train_time:8044ms step_avg:96.91ms
step:84/1770 train_time:8141ms step_avg:96.91ms
step:85/1770 train_time:8238ms step_avg:96.91ms
step:86/1770 train_time:8335ms step_avg:96.92ms
step:87/1770 train_time:8432ms step_avg:96.92ms
step:88/1770 train_time:8530ms step_avg:96.93ms
step:89/1770 train_time:8626ms step_avg:96.93ms
step:90/1770 train_time:8724ms step_avg:96.93ms
step:91/1770 train_time:8820ms step_avg:96.92ms
step:92/1770 train_time:8916ms step_avg:96.92ms
step:93/1770 train_time:9014ms step_avg:96.92ms
step:94/1770 train_time:9111ms step_avg:96.93ms
step:95/1770 train_time:9208ms step_avg:96.93ms
step:96/1770 train_time:9305ms step_avg:96.93ms
step:97/1770 train_time:9402ms step_avg:96.93ms
step:98/1770 train_time:9498ms step_avg:96.92ms
step:99/1770 train_time:9595ms step_avg:96.92ms
step:100/1770 train_time:9693ms step_avg:96.93ms
step:101/1770 train_time:9789ms step_avg:96.92ms
step:102/1770 train_time:9886ms step_avg:96.92ms
step:103/1770 train_time:9983ms step_avg:96.92ms
step:104/1770 train_time:10080ms step_avg:96.92ms
step:105/1770 train_time:10176ms step_avg:96.92ms
step:106/1770 train_time:10273ms step_avg:96.92ms
step:107/1770 train_time:10370ms step_avg:96.92ms
step:108/1770 train_time:10467ms step_avg:96.91ms
step:109/1770 train_time:10564ms step_avg:96.91ms
step:110/1770 train_time:10660ms step_avg:96.91ms
step:111/1770 train_time:10757ms step_avg:96.91ms
step:112/1770 train_time:10854ms step_avg:96.91ms
step:113/1770 train_time:10951ms step_avg:96.91ms
step:114/1770 train_time:11048ms step_avg:96.91ms
step:115/1770 train_time:11145ms step_avg:96.91ms
step:116/1770 train_time:11242ms step_avg:96.91ms
step:117/1770 train_time:11339ms step_avg:96.91ms
step:118/1770 train_time:11436ms step_avg:96.91ms
step:119/1770 train_time:11533ms step_avg:96.91ms
step:120/1770 train_time:11631ms step_avg:96.92ms
step:121/1770 train_time:11727ms step_avg:96.91ms
step:122/1770 train_time:11823ms step_avg:96.91ms
step:123/1770 train_time:11919ms step_avg:96.91ms
step:124/1770 train_time:12016ms step_avg:96.90ms
step:125/1770 train_time:12112ms step_avg:96.90ms
step:125/1770 val_loss:4.6351 train_time:12208ms step_avg:97.67ms
step:126/1770 train_time:12230ms step_avg:97.06ms
step:127/1770 train_time:12313ms step_avg:96.95ms
step:128/1770 train_time:12413ms step_avg:96.98ms
step:129/1770 train_time:12510ms step_avg:96.98ms
step:130/1770 train_time:12607ms step_avg:96.98ms
step:131/1770 train_time:12704ms step_avg:96.98ms
step:132/1770 train_time:12801ms step_avg:96.97ms
step:133/1770 train_time:12897ms step_avg:96.97ms
step:134/1770 train_time:12994ms step_avg:96.97ms
step:135/1770 train_time:13092ms step_avg:96.98ms
step:136/1770 train_time:13188ms step_avg:96.97ms
step:137/1770 train_time:13286ms step_avg:96.98ms
step:138/1770 train_time:13385ms step_avg:96.99ms
step:139/1770 train_time:13484ms step_avg:97.01ms
step:140/1770 train_time:13582ms step_avg:97.01ms
step:141/1770 train_time:13679ms step_avg:97.01ms
step:142/1770 train_time:13776ms step_avg:97.02ms
step:143/1770 train_time:13873ms step_avg:97.02ms
step:144/1770 train_time:13970ms step_avg:97.02ms
step:145/1770 train_time:14068ms step_avg:97.02ms
step:146/1770 train_time:14166ms step_avg:97.02ms
step:147/1770 train_time:14263ms step_avg:97.03ms
step:148/1770 train_time:14360ms step_avg:97.03ms
step:149/1770 train_time:14458ms step_avg:97.03ms
step:150/1770 train_time:14555ms step_avg:97.04ms
step:151/1770 train_time:14653ms step_avg:97.04ms
step:152/1770 train_time:14751ms step_avg:97.04ms
step:153/1770 train_time:14848ms step_avg:97.05ms
step:154/1770 train_time:14946ms step_avg:97.05ms
step:155/1770 train_time:15043ms step_avg:97.05ms
step:156/1770 train_time:15141ms step_avg:97.05ms
step:157/1770 train_time:15238ms step_avg:97.06ms
step:158/1770 train_time:15335ms step_avg:97.05ms
step:159/1770 train_time:15432ms step_avg:97.06ms
step:160/1770 train_time:15529ms step_avg:97.05ms
step:161/1770 train_time:15626ms step_avg:97.06ms
step:162/1770 train_time:15725ms step_avg:97.07ms
step:163/1770 train_time:15823ms step_avg:97.07ms
step:164/1770 train_time:15920ms step_avg:97.07ms
step:165/1770 train_time:16018ms step_avg:97.08ms
step:166/1770 train_time:16115ms step_avg:97.08ms
step:167/1770 train_time:16213ms step_avg:97.08ms
step:168/1770 train_time:16309ms step_avg:97.08ms
step:169/1770 train_time:16406ms step_avg:97.08ms
step:170/1770 train_time:16504ms step_avg:97.08ms
step:171/1770 train_time:16602ms step_avg:97.09ms
step:172/1770 train_time:16698ms step_avg:97.08ms
step:173/1770 train_time:16796ms step_avg:97.09ms
step:174/1770 train_time:16893ms step_avg:97.09ms
step:175/1770 train_time:16990ms step_avg:97.09ms
step:176/1770 train_time:17088ms step_avg:97.09ms
step:177/1770 train_time:17186ms step_avg:97.10ms
step:178/1770 train_time:17285ms step_avg:97.11ms
step:179/1770 train_time:17383ms step_avg:97.11ms
step:180/1770 train_time:17480ms step_avg:97.11ms
step:181/1770 train_time:17577ms step_avg:97.11ms
step:182/1770 train_time:17674ms step_avg:97.11ms
step:183/1770 train_time:17772ms step_avg:97.11ms
step:184/1770 train_time:17869ms step_avg:97.12ms
step:185/1770 train_time:17967ms step_avg:97.12ms
step:186/1770 train_time:18065ms step_avg:97.12ms
step:187/1770 train_time:18163ms step_avg:97.13ms
step:188/1770 train_time:18261ms step_avg:97.13ms
step:189/1770 train_time:18358ms step_avg:97.13ms
step:190/1770 train_time:18455ms step_avg:97.13ms
step:191/1770 train_time:18554ms step_avg:97.14ms
step:192/1770 train_time:18650ms step_avg:97.14ms
step:193/1770 train_time:18748ms step_avg:97.14ms
step:194/1770 train_time:18845ms step_avg:97.14ms
step:195/1770 train_time:18943ms step_avg:97.14ms
step:196/1770 train_time:19040ms step_avg:97.14ms
step:197/1770 train_time:19137ms step_avg:97.14ms
step:198/1770 train_time:19235ms step_avg:97.15ms
step:199/1770 train_time:19333ms step_avg:97.15ms
step:200/1770 train_time:19430ms step_avg:97.15ms
step:201/1770 train_time:19527ms step_avg:97.15ms
step:202/1770 train_time:19625ms step_avg:97.15ms
step:203/1770 train_time:19722ms step_avg:97.15ms
step:204/1770 train_time:19820ms step_avg:97.16ms
step:205/1770 train_time:19917ms step_avg:97.16ms
step:206/1770 train_time:20015ms step_avg:97.16ms
step:207/1770 train_time:20112ms step_avg:97.16ms
step:208/1770 train_time:20209ms step_avg:97.16ms
step:209/1770 train_time:20307ms step_avg:97.16ms
step:210/1770 train_time:20404ms step_avg:97.16ms
step:211/1770 train_time:20502ms step_avg:97.17ms
step:212/1770 train_time:20599ms step_avg:97.17ms
step:213/1770 train_time:20697ms step_avg:97.17ms
step:214/1770 train_time:20794ms step_avg:97.17ms
step:215/1770 train_time:20892ms step_avg:97.17ms
step:216/1770 train_time:20989ms step_avg:97.17ms
step:217/1770 train_time:21088ms step_avg:97.18ms
step:218/1770 train_time:21185ms step_avg:97.18ms
step:219/1770 train_time:21284ms step_avg:97.19ms
step:220/1770 train_time:21381ms step_avg:97.19ms
step:221/1770 train_time:21478ms step_avg:97.19ms
step:222/1770 train_time:21575ms step_avg:97.19ms
step:223/1770 train_time:21673ms step_avg:97.19ms
step:224/1770 train_time:21770ms step_avg:97.19ms
step:225/1770 train_time:21867ms step_avg:97.19ms
step:226/1770 train_time:21966ms step_avg:97.19ms
step:227/1770 train_time:22064ms step_avg:97.20ms
step:228/1770 train_time:22162ms step_avg:97.20ms
step:229/1770 train_time:22260ms step_avg:97.20ms
step:230/1770 train_time:22357ms step_avg:97.21ms
step:231/1770 train_time:22455ms step_avg:97.21ms
step:232/1770 train_time:22551ms step_avg:97.20ms
step:233/1770 train_time:22648ms step_avg:97.20ms
step:234/1770 train_time:22746ms step_avg:97.21ms
step:235/1770 train_time:22844ms step_avg:97.21ms
step:236/1770 train_time:22941ms step_avg:97.21ms
step:237/1770 train_time:23039ms step_avg:97.21ms
step:238/1770 train_time:23137ms step_avg:97.21ms
step:239/1770 train_time:23235ms step_avg:97.22ms
step:240/1770 train_time:23332ms step_avg:97.21ms
step:241/1770 train_time:23429ms step_avg:97.21ms
step:242/1770 train_time:23525ms step_avg:97.21ms
step:243/1770 train_time:23623ms step_avg:97.21ms
step:244/1770 train_time:23720ms step_avg:97.21ms
step:245/1770 train_time:23817ms step_avg:97.21ms
step:246/1770 train_time:23915ms step_avg:97.21ms
step:247/1770 train_time:24012ms step_avg:97.21ms
step:248/1770 train_time:24109ms step_avg:97.21ms
step:249/1770 train_time:24207ms step_avg:97.22ms
step:250/1770 train_time:24305ms step_avg:97.22ms
step:250/1770 val_loss:4.1121 train_time:24401ms step_avg:97.61ms
step:251/1770 train_time:24423ms step_avg:97.30ms
step:252/1770 train_time:24506ms step_avg:97.25ms
step:253/1770 train_time:24607ms step_avg:97.26ms
step:254/1770 train_time:24705ms step_avg:97.26ms
step:255/1770 train_time:24802ms step_avg:97.26ms
step:256/1770 train_time:24900ms step_avg:97.26ms
step:257/1770 train_time:24997ms step_avg:97.26ms
step:258/1770 train_time:25093ms step_avg:97.26ms
step:259/1770 train_time:25190ms step_avg:97.26ms
step:260/1770 train_time:25286ms step_avg:97.26ms
step:261/1770 train_time:25384ms step_avg:97.26ms
step:262/1770 train_time:25482ms step_avg:97.26ms
step:263/1770 train_time:25581ms step_avg:97.26ms
step:264/1770 train_time:25679ms step_avg:97.27ms
step:265/1770 train_time:25777ms step_avg:97.27ms
step:266/1770 train_time:25875ms step_avg:97.27ms
step:267/1770 train_time:25972ms step_avg:97.27ms
step:268/1770 train_time:26070ms step_avg:97.28ms
step:269/1770 train_time:26168ms step_avg:97.28ms
step:270/1770 train_time:26265ms step_avg:97.28ms
step:271/1770 train_time:26363ms step_avg:97.28ms
step:272/1770 train_time:26461ms step_avg:97.28ms
step:273/1770 train_time:26558ms step_avg:97.28ms
step:274/1770 train_time:26656ms step_avg:97.28ms
step:275/1770 train_time:26753ms step_avg:97.29ms
step:276/1770 train_time:26851ms step_avg:97.29ms
step:277/1770 train_time:26949ms step_avg:97.29ms
step:278/1770 train_time:27047ms step_avg:97.29ms
step:279/1770 train_time:27145ms step_avg:97.29ms
step:280/1770 train_time:27243ms step_avg:97.30ms
step:281/1770 train_time:27341ms step_avg:97.30ms
step:282/1770 train_time:27439ms step_avg:97.30ms
step:283/1770 train_time:27537ms step_avg:97.30ms
step:284/1770 train_time:27635ms step_avg:97.31ms
step:285/1770 train_time:27733ms step_avg:97.31ms
step:286/1770 train_time:27831ms step_avg:97.31ms
step:287/1770 train_time:27928ms step_avg:97.31ms
step:288/1770 train_time:28026ms step_avg:97.31ms
step:289/1770 train_time:28124ms step_avg:97.31ms
step:290/1770 train_time:28222ms step_avg:97.32ms
step:291/1770 train_time:28320ms step_avg:97.32ms
step:292/1770 train_time:28418ms step_avg:97.32ms
step:293/1770 train_time:28515ms step_avg:97.32ms
step:294/1770 train_time:28613ms step_avg:97.32ms
step:295/1770 train_time:28711ms step_avg:97.32ms
step:296/1770 train_time:28808ms step_avg:97.32ms
step:297/1770 train_time:28906ms step_avg:97.33ms
step:298/1770 train_time:29003ms step_avg:97.33ms
step:299/1770 train_time:29102ms step_avg:97.33ms
step:300/1770 train_time:29200ms step_avg:97.33ms
step:301/1770 train_time:29298ms step_avg:97.34ms
step:302/1770 train_time:29395ms step_avg:97.34ms
step:303/1770 train_time:29493ms step_avg:97.34ms
step:304/1770 train_time:29590ms step_avg:97.34ms
step:305/1770 train_time:29688ms step_avg:97.34ms
step:306/1770 train_time:29786ms step_avg:97.34ms
step:307/1770 train_time:29884ms step_avg:97.34ms
step:308/1770 train_time:29982ms step_avg:97.34ms
step:309/1770 train_time:30079ms step_avg:97.34ms
step:310/1770 train_time:30177ms step_avg:97.34ms
step:311/1770 train_time:30274ms step_avg:97.34ms
step:312/1770 train_time:30371ms step_avg:97.34ms
step:313/1770 train_time:30469ms step_avg:97.34ms
step:314/1770 train_time:30567ms step_avg:97.35ms
step:315/1770 train_time:30665ms step_avg:97.35ms
step:316/1770 train_time:30764ms step_avg:97.35ms
step:317/1770 train_time:30863ms step_avg:97.36ms
step:318/1770 train_time:30962ms step_avg:97.37ms
step:319/1770 train_time:31061ms step_avg:97.37ms
step:320/1770 train_time:31159ms step_avg:97.37ms
step:321/1770 train_time:31257ms step_avg:97.37ms
step:322/1770 train_time:31355ms step_avg:97.37ms
step:323/1770 train_time:31452ms step_avg:97.37ms
step:324/1770 train_time:31549ms step_avg:97.37ms
step:325/1770 train_time:31647ms step_avg:97.38ms
step:326/1770 train_time:31745ms step_avg:97.38ms
step:327/1770 train_time:31843ms step_avg:97.38ms
step:328/1770 train_time:31941ms step_avg:97.38ms
step:329/1770 train_time:32038ms step_avg:97.38ms
step:330/1770 train_time:32136ms step_avg:97.38ms
step:331/1770 train_time:32234ms step_avg:97.38ms
step:332/1770 train_time:32332ms step_avg:97.39ms
step:333/1770 train_time:32429ms step_avg:97.38ms
step:334/1770 train_time:32527ms step_avg:97.39ms
step:335/1770 train_time:32625ms step_avg:97.39ms
step:336/1770 train_time:32723ms step_avg:97.39ms
step:337/1770 train_time:32821ms step_avg:97.39ms
step:338/1770 train_time:32919ms step_avg:97.39ms
step:339/1770 train_time:33016ms step_avg:97.39ms
step:340/1770 train_time:33114ms step_avg:97.39ms
step:341/1770 train_time:33213ms step_avg:97.40ms
step:342/1770 train_time:33310ms step_avg:97.40ms
step:343/1770 train_time:33407ms step_avg:97.40ms
step:344/1770 train_time:33505ms step_avg:97.40ms
step:345/1770 train_time:33603ms step_avg:97.40ms
step:346/1770 train_time:33701ms step_avg:97.40ms
step:347/1770 train_time:33798ms step_avg:97.40ms
step:348/1770 train_time:33896ms step_avg:97.40ms
step:349/1770 train_time:33994ms step_avg:97.40ms
step:350/1770 train_time:34091ms step_avg:97.40ms
step:351/1770 train_time:34189ms step_avg:97.40ms
step:352/1770 train_time:34287ms step_avg:97.41ms
step:353/1770 train_time:34385ms step_avg:97.41ms
step:354/1770 train_time:34484ms step_avg:97.41ms
step:355/1770 train_time:34583ms step_avg:97.42ms
step:356/1770 train_time:34681ms step_avg:97.42ms
step:357/1770 train_time:34779ms step_avg:97.42ms
step:358/1770 train_time:34876ms step_avg:97.42ms
step:359/1770 train_time:34974ms step_avg:97.42ms
step:360/1770 train_time:35072ms step_avg:97.42ms
step:361/1770 train_time:35169ms step_avg:97.42ms
step:362/1770 train_time:35266ms step_avg:97.42ms
step:363/1770 train_time:35364ms step_avg:97.42ms
step:364/1770 train_time:35462ms step_avg:97.42ms
step:365/1770 train_time:35560ms step_avg:97.42ms
step:366/1770 train_time:35658ms step_avg:97.43ms
step:367/1770 train_time:35755ms step_avg:97.43ms
step:368/1770 train_time:35853ms step_avg:97.43ms
step:369/1770 train_time:35951ms step_avg:97.43ms
step:370/1770 train_time:36049ms step_avg:97.43ms
step:371/1770 train_time:36146ms step_avg:97.43ms
step:372/1770 train_time:36244ms step_avg:97.43ms
step:373/1770 train_time:36343ms step_avg:97.43ms
step:374/1770 train_time:36441ms step_avg:97.44ms
step:375/1770 train_time:36539ms step_avg:97.44ms
step:375/1770 val_loss:3.9198 train_time:36635ms step_avg:97.69ms
step:376/1770 train_time:36654ms step_avg:97.48ms
step:377/1770 train_time:36742ms step_avg:97.46ms
step:378/1770 train_time:36843ms step_avg:97.47ms
step:379/1770 train_time:36942ms step_avg:97.47ms
step:380/1770 train_time:37040ms step_avg:97.47ms
step:381/1770 train_time:37138ms step_avg:97.48ms
step:382/1770 train_time:37236ms step_avg:97.48ms
step:383/1770 train_time:37333ms step_avg:97.48ms
step:384/1770 train_time:37431ms step_avg:97.48ms
step:385/1770 train_time:37528ms step_avg:97.47ms
step:386/1770 train_time:37625ms step_avg:97.47ms
step:387/1770 train_time:37722ms step_avg:97.47ms
step:388/1770 train_time:37821ms step_avg:97.48ms
step:389/1770 train_time:37919ms step_avg:97.48ms
step:390/1770 train_time:38018ms step_avg:97.48ms
step:391/1770 train_time:38116ms step_avg:97.48ms
step:392/1770 train_time:38213ms step_avg:97.48ms
step:393/1770 train_time:38311ms step_avg:97.48ms
step:394/1770 train_time:38408ms step_avg:97.48ms
step:395/1770 train_time:38505ms step_avg:97.48ms
step:396/1770 train_time:38605ms step_avg:97.49ms
step:397/1770 train_time:38704ms step_avg:97.49ms
step:398/1770 train_time:38804ms step_avg:97.50ms
step:399/1770 train_time:38904ms step_avg:97.50ms
step:400/1770 train_time:39004ms step_avg:97.51ms
step:401/1770 train_time:39104ms step_avg:97.52ms
step:402/1770 train_time:39204ms step_avg:97.52ms
step:403/1770 train_time:39305ms step_avg:97.53ms
step:404/1770 train_time:39405ms step_avg:97.54ms
step:405/1770 train_time:39505ms step_avg:97.54ms
step:406/1770 train_time:39606ms step_avg:97.55ms
step:407/1770 train_time:39705ms step_avg:97.56ms
step:408/1770 train_time:39804ms step_avg:97.56ms
step:409/1770 train_time:39904ms step_avg:97.56ms
step:410/1770 train_time:40003ms step_avg:97.57ms
step:411/1770 train_time:40103ms step_avg:97.57ms
step:412/1770 train_time:40203ms step_avg:97.58ms
step:413/1770 train_time:40303ms step_avg:97.59ms
step:414/1770 train_time:40403ms step_avg:97.59ms
step:415/1770 train_time:40503ms step_avg:97.60ms
step:416/1770 train_time:40603ms step_avg:97.60ms
step:417/1770 train_time:40703ms step_avg:97.61ms
step:418/1770 train_time:40803ms step_avg:97.62ms
step:419/1770 train_time:40903ms step_avg:97.62ms
step:420/1770 train_time:41002ms step_avg:97.62ms
step:421/1770 train_time:41102ms step_avg:97.63ms
step:422/1770 train_time:41202ms step_avg:97.64ms
step:423/1770 train_time:41302ms step_avg:97.64ms
step:424/1770 train_time:41402ms step_avg:97.65ms
step:425/1770 train_time:41503ms step_avg:97.66ms
step:426/1770 train_time:41604ms step_avg:97.66ms
step:427/1770 train_time:41704ms step_avg:97.67ms
step:428/1770 train_time:41804ms step_avg:97.67ms
step:429/1770 train_time:41904ms step_avg:97.68ms
step:430/1770 train_time:42003ms step_avg:97.68ms
step:431/1770 train_time:42103ms step_avg:97.69ms
step:432/1770 train_time:42203ms step_avg:97.69ms
step:433/1770 train_time:42303ms step_avg:97.70ms
step:434/1770 train_time:42403ms step_avg:97.70ms
step:435/1770 train_time:42503ms step_avg:97.71ms
step:436/1770 train_time:42603ms step_avg:97.71ms
step:437/1770 train_time:42703ms step_avg:97.72ms
step:438/1770 train_time:42803ms step_avg:97.72ms
step:439/1770 train_time:42903ms step_avg:97.73ms
step:440/1770 train_time:43004ms step_avg:97.74ms
step:441/1770 train_time:43104ms step_avg:97.74ms
step:442/1770 train_time:43204ms step_avg:97.75ms
step:443/1770 train_time:43304ms step_avg:97.75ms
step:444/1770 train_time:43404ms step_avg:97.76ms
step:445/1770 train_time:43503ms step_avg:97.76ms
step:446/1770 train_time:43603ms step_avg:97.77ms
step:447/1770 train_time:43703ms step_avg:97.77ms
step:448/1770 train_time:43803ms step_avg:97.77ms
step:449/1770 train_time:43903ms step_avg:97.78ms
step:450/1770 train_time:44003ms step_avg:97.78ms
step:451/1770 train_time:44103ms step_avg:97.79ms
step:452/1770 train_time:44203ms step_avg:97.79ms
step:453/1770 train_time:44302ms step_avg:97.80ms
step:454/1770 train_time:44402ms step_avg:97.80ms
step:455/1770 train_time:44502ms step_avg:97.81ms
step:456/1770 train_time:44601ms step_avg:97.81ms
step:457/1770 train_time:44702ms step_avg:97.82ms
step:458/1770 train_time:44802ms step_avg:97.82ms
step:459/1770 train_time:44902ms step_avg:97.83ms
step:460/1770 train_time:45001ms step_avg:97.83ms
step:461/1770 train_time:45101ms step_avg:97.83ms
step:462/1770 train_time:45202ms step_avg:97.84ms
step:463/1770 train_time:45301ms step_avg:97.84ms
step:464/1770 train_time:45401ms step_avg:97.85ms
step:465/1770 train_time:45502ms step_avg:97.85ms
step:466/1770 train_time:45601ms step_avg:97.86ms
step:467/1770 train_time:45701ms step_avg:97.86ms
step:468/1770 train_time:45801ms step_avg:97.87ms
step:469/1770 train_time:45902ms step_avg:97.87ms
step:470/1770 train_time:46002ms step_avg:97.88ms
step:471/1770 train_time:46103ms step_avg:97.88ms
step:472/1770 train_time:46203ms step_avg:97.89ms
step:473/1770 train_time:46302ms step_avg:97.89ms
step:474/1770 train_time:46402ms step_avg:97.89ms
step:475/1770 train_time:46503ms step_avg:97.90ms
step:476/1770 train_time:46603ms step_avg:97.90ms
step:477/1770 train_time:46703ms step_avg:97.91ms
step:478/1770 train_time:46802ms step_avg:97.91ms
step:479/1770 train_time:46903ms step_avg:97.92ms
step:480/1770 train_time:47003ms step_avg:97.92ms
step:481/1770 train_time:47103ms step_avg:97.93ms
step:482/1770 train_time:47203ms step_avg:97.93ms
step:483/1770 train_time:47303ms step_avg:97.94ms
step:484/1770 train_time:47403ms step_avg:97.94ms
step:485/1770 train_time:47503ms step_avg:97.95ms
step:486/1770 train_time:47603ms step_avg:97.95ms
step:487/1770 train_time:47703ms step_avg:97.95ms
step:488/1770 train_time:47802ms step_avg:97.95ms
step:489/1770 train_time:47902ms step_avg:97.96ms
step:490/1770 train_time:48002ms step_avg:97.96ms
step:491/1770 train_time:48101ms step_avg:97.97ms
step:492/1770 train_time:48201ms step_avg:97.97ms
step:493/1770 train_time:48302ms step_avg:97.97ms
step:494/1770 train_time:48402ms step_avg:97.98ms
step:495/1770 train_time:48501ms step_avg:97.98ms
step:496/1770 train_time:48601ms step_avg:97.99ms
step:497/1770 train_time:48701ms step_avg:97.99ms
step:498/1770 train_time:48801ms step_avg:97.99ms
step:499/1770 train_time:48901ms step_avg:98.00ms
step:500/1770 train_time:49002ms step_avg:98.00ms
step:500/1770 val_loss:3.7831 train_time:49100ms step_avg:98.20ms
step:501/1770 train_time:49120ms step_avg:98.04ms
step:502/1770 train_time:49208ms step_avg:98.02ms
step:503/1770 train_time:49308ms step_avg:98.03ms
step:504/1770 train_time:49409ms step_avg:98.03ms
step:505/1770 train_time:49509ms step_avg:98.04ms
step:506/1770 train_time:49609ms step_avg:98.04ms
step:507/1770 train_time:49707ms step_avg:98.04ms
step:508/1770 train_time:49807ms step_avg:98.04ms
step:509/1770 train_time:49906ms step_avg:98.05ms
step:510/1770 train_time:50005ms step_avg:98.05ms
step:511/1770 train_time:50105ms step_avg:98.05ms
step:512/1770 train_time:50205ms step_avg:98.06ms
step:513/1770 train_time:50305ms step_avg:98.06ms
step:514/1770 train_time:50405ms step_avg:98.06ms
step:515/1770 train_time:50505ms step_avg:98.07ms
step:516/1770 train_time:50605ms step_avg:98.07ms
step:517/1770 train_time:50704ms step_avg:98.07ms
step:518/1770 train_time:50805ms step_avg:98.08ms
step:519/1770 train_time:50904ms step_avg:98.08ms
step:520/1770 train_time:51003ms step_avg:98.08ms
step:521/1770 train_time:51103ms step_avg:98.09ms
step:522/1770 train_time:51203ms step_avg:98.09ms
step:523/1770 train_time:51303ms step_avg:98.09ms
step:524/1770 train_time:51403ms step_avg:98.10ms
step:525/1770 train_time:51504ms step_avg:98.10ms
step:526/1770 train_time:51603ms step_avg:98.11ms
step:527/1770 train_time:51704ms step_avg:98.11ms
step:528/1770 train_time:51804ms step_avg:98.11ms
step:529/1770 train_time:51904ms step_avg:98.12ms
step:530/1770 train_time:52004ms step_avg:98.12ms
step:531/1770 train_time:52104ms step_avg:98.12ms
step:532/1770 train_time:52204ms step_avg:98.13ms
step:533/1770 train_time:52304ms step_avg:98.13ms
step:534/1770 train_time:52404ms step_avg:98.14ms
step:535/1770 train_time:52504ms step_avg:98.14ms
step:536/1770 train_time:52604ms step_avg:98.14ms
step:537/1770 train_time:52705ms step_avg:98.15ms
step:538/1770 train_time:52805ms step_avg:98.15ms
step:539/1770 train_time:52906ms step_avg:98.16ms
step:540/1770 train_time:53006ms step_avg:98.16ms
step:541/1770 train_time:53105ms step_avg:98.16ms
step:542/1770 train_time:53204ms step_avg:98.16ms
step:543/1770 train_time:53305ms step_avg:98.17ms
step:544/1770 train_time:53405ms step_avg:98.17ms
step:545/1770 train_time:53504ms step_avg:98.17ms
step:546/1770 train_time:53603ms step_avg:98.17ms
step:547/1770 train_time:53703ms step_avg:98.18ms
step:548/1770 train_time:53804ms step_avg:98.18ms
step:549/1770 train_time:53905ms step_avg:98.19ms
step:550/1770 train_time:54005ms step_avg:98.19ms
step:551/1770 train_time:54105ms step_avg:98.19ms
step:552/1770 train_time:54205ms step_avg:98.20ms
step:553/1770 train_time:54305ms step_avg:98.20ms
step:554/1770 train_time:54405ms step_avg:98.20ms
step:555/1770 train_time:54505ms step_avg:98.21ms
step:556/1770 train_time:54605ms step_avg:98.21ms
step:557/1770 train_time:54705ms step_avg:98.21ms
step:558/1770 train_time:54806ms step_avg:98.22ms
step:559/1770 train_time:54906ms step_avg:98.22ms
step:560/1770 train_time:55007ms step_avg:98.23ms
step:561/1770 train_time:55107ms step_avg:98.23ms
step:562/1770 train_time:55208ms step_avg:98.23ms
step:563/1770 train_time:55308ms step_avg:98.24ms
step:564/1770 train_time:55408ms step_avg:98.24ms
step:565/1770 train_time:55509ms step_avg:98.25ms
step:566/1770 train_time:55610ms step_avg:98.25ms
step:567/1770 train_time:55709ms step_avg:98.25ms
step:568/1770 train_time:55808ms step_avg:98.25ms
step:569/1770 train_time:55907ms step_avg:98.26ms
step:570/1770 train_time:56007ms step_avg:98.26ms
step:571/1770 train_time:56107ms step_avg:98.26ms
step:572/1770 train_time:56207ms step_avg:98.26ms
step:573/1770 train_time:56308ms step_avg:98.27ms
step:574/1770 train_time:56408ms step_avg:98.27ms
step:575/1770 train_time:56509ms step_avg:98.28ms
step:576/1770 train_time:56609ms step_avg:98.28ms
step:577/1770 train_time:56710ms step_avg:98.28ms
step:578/1770 train_time:56809ms step_avg:98.29ms
step:579/1770 train_time:56908ms step_avg:98.29ms
step:580/1770 train_time:57008ms step_avg:98.29ms
step:581/1770 train_time:57107ms step_avg:98.29ms
step:582/1770 train_time:57207ms step_avg:98.29ms
step:583/1770 train_time:57306ms step_avg:98.30ms
step:584/1770 train_time:57406ms step_avg:98.30ms
step:585/1770 train_time:57506ms step_avg:98.30ms
step:586/1770 train_time:57606ms step_avg:98.30ms
step:587/1770 train_time:57707ms step_avg:98.31ms
step:588/1770 train_time:57808ms step_avg:98.31ms
step:589/1770 train_time:57907ms step_avg:98.31ms
step:590/1770 train_time:58006ms step_avg:98.32ms
step:591/1770 train_time:58106ms step_avg:98.32ms
step:592/1770 train_time:58207ms step_avg:98.32ms
step:593/1770 train_time:58307ms step_avg:98.33ms
step:594/1770 train_time:58407ms step_avg:98.33ms
step:595/1770 train_time:58508ms step_avg:98.33ms
step:596/1770 train_time:58608ms step_avg:98.34ms
step:597/1770 train_time:58708ms step_avg:98.34ms
step:598/1770 train_time:58809ms step_avg:98.34ms
step:599/1770 train_time:58909ms step_avg:98.35ms
step:600/1770 train_time:59009ms step_avg:98.35ms
step:601/1770 train_time:59109ms step_avg:98.35ms
step:602/1770 train_time:59209ms step_avg:98.35ms
step:603/1770 train_time:59309ms step_avg:98.36ms
step:604/1770 train_time:59409ms step_avg:98.36ms
step:605/1770 train_time:59509ms step_avg:98.36ms
step:606/1770 train_time:59609ms step_avg:98.37ms
step:607/1770 train_time:59710ms step_avg:98.37ms
step:608/1770 train_time:59810ms step_avg:98.37ms
step:609/1770 train_time:59911ms step_avg:98.38ms
step:610/1770 train_time:60011ms step_avg:98.38ms
step:611/1770 train_time:60111ms step_avg:98.38ms
step:612/1770 train_time:60211ms step_avg:98.38ms
step:613/1770 train_time:60311ms step_avg:98.39ms
step:614/1770 train_time:60411ms step_avg:98.39ms
step:615/1770 train_time:60511ms step_avg:98.39ms
step:616/1770 train_time:60610ms step_avg:98.39ms
step:617/1770 train_time:60710ms step_avg:98.40ms
step:618/1770 train_time:60811ms step_avg:98.40ms
step:619/1770 train_time:60912ms step_avg:98.40ms
step:620/1770 train_time:61013ms step_avg:98.41ms
step:621/1770 train_time:61113ms step_avg:98.41ms
step:622/1770 train_time:61213ms step_avg:98.41ms
step:623/1770 train_time:61312ms step_avg:98.41ms
step:624/1770 train_time:61412ms step_avg:98.42ms
step:625/1770 train_time:61512ms step_avg:98.42ms
step:625/1770 val_loss:3.7040 train_time:61610ms step_avg:98.58ms
step:626/1770 train_time:61631ms step_avg:98.45ms
step:627/1770 train_time:61719ms step_avg:98.44ms
step:628/1770 train_time:61820ms step_avg:98.44ms
step:629/1770 train_time:61922ms step_avg:98.44ms
step:630/1770 train_time:62021ms step_avg:98.45ms
step:631/1770 train_time:62121ms step_avg:98.45ms
step:632/1770 train_time:62221ms step_avg:98.45ms
step:633/1770 train_time:62320ms step_avg:98.45ms
step:634/1770 train_time:62420ms step_avg:98.45ms
step:635/1770 train_time:62519ms step_avg:98.46ms
step:636/1770 train_time:62619ms step_avg:98.46ms
step:637/1770 train_time:62721ms step_avg:98.46ms
step:638/1770 train_time:62822ms step_avg:98.47ms
step:639/1770 train_time:62924ms step_avg:98.47ms
step:640/1770 train_time:63025ms step_avg:98.48ms
step:641/1770 train_time:63125ms step_avg:98.48ms
step:642/1770 train_time:63225ms step_avg:98.48ms
step:643/1770 train_time:63325ms step_avg:98.48ms
step:644/1770 train_time:63425ms step_avg:98.49ms
step:645/1770 train_time:63525ms step_avg:98.49ms
step:646/1770 train_time:63625ms step_avg:98.49ms
step:647/1770 train_time:63726ms step_avg:98.49ms
step:648/1770 train_time:63826ms step_avg:98.50ms
step:649/1770 train_time:63926ms step_avg:98.50ms
step:650/1770 train_time:64026ms step_avg:98.50ms
step:651/1770 train_time:64126ms step_avg:98.50ms
step:652/1770 train_time:64227ms step_avg:98.51ms
step:653/1770 train_time:64327ms step_avg:98.51ms
step:654/1770 train_time:64427ms step_avg:98.51ms
step:655/1770 train_time:64527ms step_avg:98.51ms
step:656/1770 train_time:64627ms step_avg:98.52ms
step:657/1770 train_time:64727ms step_avg:98.52ms
step:658/1770 train_time:64829ms step_avg:98.52ms
step:659/1770 train_time:64930ms step_avg:98.53ms
step:660/1770 train_time:65033ms step_avg:98.53ms
step:661/1770 train_time:65135ms step_avg:98.54ms
step:662/1770 train_time:65237ms step_avg:98.54ms
step:663/1770 train_time:65338ms step_avg:98.55ms
step:664/1770 train_time:65440ms step_avg:98.55ms
step:665/1770 train_time:65542ms step_avg:98.56ms
step:666/1770 train_time:65644ms step_avg:98.56ms
step:667/1770 train_time:65746ms step_avg:98.57ms
step:668/1770 train_time:65848ms step_avg:98.57ms
step:669/1770 train_time:65949ms step_avg:98.58ms
step:670/1770 train_time:66050ms step_avg:98.58ms
step:671/1770 train_time:66151ms step_avg:98.59ms
step:672/1770 train_time:66254ms step_avg:98.59ms
step:673/1770 train_time:66356ms step_avg:98.60ms
step:674/1770 train_time:66457ms step_avg:98.60ms
step:675/1770 train_time:66559ms step_avg:98.61ms
step:676/1770 train_time:66661ms step_avg:98.61ms
step:677/1770 train_time:66762ms step_avg:98.62ms
step:678/1770 train_time:66865ms step_avg:98.62ms
step:679/1770 train_time:66967ms step_avg:98.63ms
step:680/1770 train_time:67069ms step_avg:98.63ms
step:681/1770 train_time:67170ms step_avg:98.63ms
step:682/1770 train_time:67272ms step_avg:98.64ms
step:683/1770 train_time:67374ms step_avg:98.64ms
step:684/1770 train_time:67476ms step_avg:98.65ms
step:685/1770 train_time:67578ms step_avg:98.65ms
step:686/1770 train_time:67680ms step_avg:98.66ms
step:687/1770 train_time:67782ms step_avg:98.66ms
step:688/1770 train_time:67884ms step_avg:98.67ms
step:689/1770 train_time:67986ms step_avg:98.67ms
step:690/1770 train_time:68089ms step_avg:98.68ms
step:691/1770 train_time:68190ms step_avg:98.68ms
step:692/1770 train_time:68291ms step_avg:98.69ms
step:693/1770 train_time:68392ms step_avg:98.69ms
step:694/1770 train_time:68494ms step_avg:98.69ms
step:695/1770 train_time:68595ms step_avg:98.70ms
step:696/1770 train_time:68697ms step_avg:98.70ms
step:697/1770 train_time:68799ms step_avg:98.71ms
step:698/1770 train_time:68900ms step_avg:98.71ms
step:699/1770 train_time:69002ms step_avg:98.72ms
step:700/1770 train_time:69105ms step_avg:98.72ms
step:701/1770 train_time:69207ms step_avg:98.73ms
step:702/1770 train_time:69309ms step_avg:98.73ms
step:703/1770 train_time:69410ms step_avg:98.73ms
step:704/1770 train_time:69511ms step_avg:98.74ms
step:705/1770 train_time:69612ms step_avg:98.74ms
step:706/1770 train_time:69714ms step_avg:98.74ms
step:707/1770 train_time:69816ms step_avg:98.75ms
step:708/1770 train_time:69918ms step_avg:98.75ms
step:709/1770 train_time:70020ms step_avg:98.76ms
step:710/1770 train_time:70122ms step_avg:98.76ms
step:711/1770 train_time:70224ms step_avg:98.77ms
step:712/1770 train_time:70326ms step_avg:98.77ms
step:713/1770 train_time:70428ms step_avg:98.78ms
step:714/1770 train_time:70530ms step_avg:98.78ms
step:715/1770 train_time:70631ms step_avg:98.78ms
step:716/1770 train_time:70732ms step_avg:98.79ms
step:717/1770 train_time:70834ms step_avg:98.79ms
step:718/1770 train_time:70935ms step_avg:98.80ms
step:719/1770 train_time:71037ms step_avg:98.80ms
step:720/1770 train_time:71139ms step_avg:98.80ms
step:721/1770 train_time:71240ms step_avg:98.81ms
step:722/1770 train_time:71342ms step_avg:98.81ms
step:723/1770 train_time:71445ms step_avg:98.82ms
step:724/1770 train_time:71547ms step_avg:98.82ms
step:725/1770 train_time:71648ms step_avg:98.83ms
step:726/1770 train_time:71750ms step_avg:98.83ms
step:727/1770 train_time:71851ms step_avg:98.83ms
step:728/1770 train_time:71952ms step_avg:98.84ms
step:729/1770 train_time:72053ms step_avg:98.84ms
step:730/1770 train_time:72155ms step_avg:98.84ms
step:731/1770 train_time:72257ms step_avg:98.85ms
step:732/1770 train_time:72357ms step_avg:98.85ms
step:733/1770 train_time:72459ms step_avg:98.85ms
step:734/1770 train_time:72560ms step_avg:98.86ms
step:735/1770 train_time:72663ms step_avg:98.86ms
step:736/1770 train_time:72765ms step_avg:98.87ms
step:737/1770 train_time:72868ms step_avg:98.87ms
step:738/1770 train_time:72970ms step_avg:98.88ms
step:739/1770 train_time:73071ms step_avg:98.88ms
step:740/1770 train_time:73173ms step_avg:98.88ms
step:741/1770 train_time:73274ms step_avg:98.89ms
step:742/1770 train_time:73375ms step_avg:98.89ms
step:743/1770 train_time:73476ms step_avg:98.89ms
step:744/1770 train_time:73577ms step_avg:98.89ms
step:745/1770 train_time:73678ms step_avg:98.90ms
step:746/1770 train_time:73780ms step_avg:98.90ms
step:747/1770 train_time:73883ms step_avg:98.91ms
step:748/1770 train_time:73986ms step_avg:98.91ms
step:749/1770 train_time:74088ms step_avg:98.92ms
step:750/1770 train_time:74190ms step_avg:98.92ms
step:750/1770 val_loss:3.6458 train_time:74289ms step_avg:99.05ms
step:751/1770 train_time:74308ms step_avg:98.95ms
step:752/1770 train_time:74398ms step_avg:98.93ms
step:753/1770 train_time:74500ms step_avg:98.94ms
step:754/1770 train_time:74602ms step_avg:98.94ms
step:755/1770 train_time:74703ms step_avg:98.94ms
step:756/1770 train_time:74804ms step_avg:98.95ms
step:757/1770 train_time:74904ms step_avg:98.95ms
step:758/1770 train_time:75005ms step_avg:98.95ms
step:759/1770 train_time:75106ms step_avg:98.95ms
step:760/1770 train_time:75206ms step_avg:98.96ms
step:761/1770 train_time:75308ms step_avg:98.96ms
step:762/1770 train_time:75410ms step_avg:98.96ms
step:763/1770 train_time:75513ms step_avg:98.97ms
step:764/1770 train_time:75615ms step_avg:98.97ms
step:765/1770 train_time:75717ms step_avg:98.98ms
step:766/1770 train_time:75818ms step_avg:98.98ms
step:767/1770 train_time:75920ms step_avg:98.98ms
step:768/1770 train_time:76022ms step_avg:98.99ms
step:769/1770 train_time:76123ms step_avg:98.99ms
step:770/1770 train_time:76224ms step_avg:98.99ms
step:771/1770 train_time:76325ms step_avg:99.00ms
step:772/1770 train_time:76427ms step_avg:99.00ms
step:773/1770 train_time:76529ms step_avg:99.00ms
step:774/1770 train_time:76630ms step_avg:99.01ms
step:775/1770 train_time:76732ms step_avg:99.01ms
step:776/1770 train_time:76834ms step_avg:99.01ms
step:777/1770 train_time:76936ms step_avg:99.02ms
step:778/1770 train_time:77038ms step_avg:99.02ms
step:779/1770 train_time:77139ms step_avg:99.02ms
step:780/1770 train_time:77240ms step_avg:99.03ms
step:781/1770 train_time:77341ms step_avg:99.03ms
step:782/1770 train_time:77444ms step_avg:99.03ms
step:783/1770 train_time:77545ms step_avg:99.04ms
step:784/1770 train_time:77646ms step_avg:99.04ms
step:785/1770 train_time:77748ms step_avg:99.04ms
step:786/1770 train_time:77850ms step_avg:99.05ms
step:787/1770 train_time:77952ms step_avg:99.05ms
step:788/1770 train_time:78055ms step_avg:99.05ms
step:789/1770 train_time:78157ms step_avg:99.06ms
step:790/1770 train_time:78259ms step_avg:99.06ms
step:791/1770 train_time:78360ms step_avg:99.06ms
step:792/1770 train_time:78462ms step_avg:99.07ms
step:793/1770 train_time:78563ms step_avg:99.07ms
step:794/1770 train_time:78665ms step_avg:99.07ms
step:795/1770 train_time:78766ms step_avg:99.08ms
step:796/1770 train_time:78868ms step_avg:99.08ms
step:797/1770 train_time:78969ms step_avg:99.08ms
step:798/1770 train_time:79072ms step_avg:99.09ms
step:799/1770 train_time:79176ms step_avg:99.09ms
step:800/1770 train_time:79278ms step_avg:99.10ms
step:801/1770 train_time:79379ms step_avg:99.10ms
step:802/1770 train_time:79481ms step_avg:99.10ms
step:803/1770 train_time:79583ms step_avg:99.11ms
step:804/1770 train_time:79684ms step_avg:99.11ms
step:805/1770 train_time:79785ms step_avg:99.11ms
step:806/1770 train_time:79887ms step_avg:99.12ms
step:807/1770 train_time:79989ms step_avg:99.12ms
step:808/1770 train_time:80092ms step_avg:99.12ms
step:809/1770 train_time:80194ms step_avg:99.13ms
step:810/1770 train_time:80297ms step_avg:99.13ms
step:811/1770 train_time:80399ms step_avg:99.14ms
step:812/1770 train_time:80501ms step_avg:99.14ms
step:813/1770 train_time:80603ms step_avg:99.14ms
step:814/1770 train_time:80704ms step_avg:99.14ms
step:815/1770 train_time:80805ms step_avg:99.15ms
step:816/1770 train_time:80906ms step_avg:99.15ms
step:817/1770 train_time:81007ms step_avg:99.15ms
step:818/1770 train_time:81109ms step_avg:99.16ms
step:819/1770 train_time:81211ms step_avg:99.16ms
step:820/1770 train_time:81313ms step_avg:99.16ms
step:821/1770 train_time:81416ms step_avg:99.17ms
step:822/1770 train_time:81518ms step_avg:99.17ms
step:823/1770 train_time:81620ms step_avg:99.17ms
step:824/1770 train_time:81721ms step_avg:99.18ms
step:825/1770 train_time:81823ms step_avg:99.18ms
step:826/1770 train_time:81924ms step_avg:99.18ms
step:827/1770 train_time:82025ms step_avg:99.18ms
step:828/1770 train_time:82127ms step_avg:99.19ms
step:829/1770 train_time:82228ms step_avg:99.19ms
step:830/1770 train_time:82330ms step_avg:99.19ms
step:831/1770 train_time:82432ms step_avg:99.20ms
step:832/1770 train_time:82534ms step_avg:99.20ms
step:833/1770 train_time:82636ms step_avg:99.20ms
step:834/1770 train_time:82738ms step_avg:99.21ms
step:835/1770 train_time:82840ms step_avg:99.21ms
step:836/1770 train_time:82942ms step_avg:99.21ms
step:837/1770 train_time:83044ms step_avg:99.22ms
step:838/1770 train_time:83145ms step_avg:99.22ms
step:839/1770 train_time:83247ms step_avg:99.22ms
step:840/1770 train_time:83348ms step_avg:99.22ms
step:841/1770 train_time:83450ms step_avg:99.23ms
step:842/1770 train_time:83552ms step_avg:99.23ms
step:843/1770 train_time:83655ms step_avg:99.24ms
step:844/1770 train_time:83757ms step_avg:99.24ms
step:845/1770 train_time:83859ms step_avg:99.24ms
step:846/1770 train_time:83961ms step_avg:99.24ms
step:847/1770 train_time:84062ms step_avg:99.25ms
step:848/1770 train_time:84164ms step_avg:99.25ms
step:849/1770 train_time:84266ms step_avg:99.25ms
step:850/1770 train_time:84367ms step_avg:99.26ms
step:851/1770 train_time:84469ms step_avg:99.26ms
step:852/1770 train_time:84571ms step_avg:99.26ms
step:853/1770 train_time:84673ms step_avg:99.27ms
step:854/1770 train_time:84776ms step_avg:99.27ms
step:855/1770 train_time:84879ms step_avg:99.27ms
step:856/1770 train_time:84981ms step_avg:99.28ms
step:857/1770 train_time:85083ms step_avg:99.28ms
step:858/1770 train_time:85185ms step_avg:99.28ms
step:859/1770 train_time:85286ms step_avg:99.28ms
step:860/1770 train_time:85388ms step_avg:99.29ms
step:861/1770 train_time:85489ms step_avg:99.29ms
step:862/1770 train_time:85591ms step_avg:99.29ms
step:863/1770 train_time:85694ms step_avg:99.30ms
step:864/1770 train_time:85797ms step_avg:99.30ms
step:865/1770 train_time:85898ms step_avg:99.30ms
step:866/1770 train_time:86000ms step_avg:99.31ms
step:867/1770 train_time:86103ms step_avg:99.31ms
step:868/1770 train_time:86205ms step_avg:99.31ms
step:869/1770 train_time:86306ms step_avg:99.32ms
step:870/1770 train_time:86408ms step_avg:99.32ms
step:871/1770 train_time:86509ms step_avg:99.32ms
step:872/1770 train_time:86611ms step_avg:99.32ms
step:873/1770 train_time:86712ms step_avg:99.33ms
step:874/1770 train_time:86815ms step_avg:99.33ms
step:875/1770 train_time:86917ms step_avg:99.33ms
step:875/1770 val_loss:3.5981 train_time:87017ms step_avg:99.45ms
step:876/1770 train_time:87036ms step_avg:99.36ms
step:877/1770 train_time:87127ms step_avg:99.35ms
step:878/1770 train_time:87232ms step_avg:99.35ms
step:879/1770 train_time:87334ms step_avg:99.36ms
step:880/1770 train_time:87436ms step_avg:99.36ms
step:881/1770 train_time:87538ms step_avg:99.36ms
step:882/1770 train_time:87640ms step_avg:99.37ms
step:883/1770 train_time:87742ms step_avg:99.37ms
step:884/1770 train_time:87843ms step_avg:99.37ms
step:885/1770 train_time:87944ms step_avg:99.37ms
step:886/1770 train_time:88046ms step_avg:99.37ms
step:887/1770 train_time:88148ms step_avg:99.38ms
step:888/1770 train_time:88250ms step_avg:99.38ms
step:889/1770 train_time:88352ms step_avg:99.38ms
step:890/1770 train_time:88453ms step_avg:99.39ms
step:891/1770 train_time:88554ms step_avg:99.39ms
step:892/1770 train_time:88656ms step_avg:99.39ms
step:893/1770 train_time:88758ms step_avg:99.39ms
step:894/1770 train_time:88862ms step_avg:99.40ms
step:895/1770 train_time:88965ms step_avg:99.40ms
step:896/1770 train_time:89066ms step_avg:99.40ms
step:897/1770 train_time:89167ms step_avg:99.41ms
step:898/1770 train_time:89269ms step_avg:99.41ms
step:899/1770 train_time:89370ms step_avg:99.41ms
step:900/1770 train_time:89472ms step_avg:99.41ms
step:901/1770 train_time:89573ms step_avg:99.41ms
step:902/1770 train_time:89675ms step_avg:99.42ms
step:903/1770 train_time:89776ms step_avg:99.42ms
step:904/1770 train_time:89879ms step_avg:99.42ms
step:905/1770 train_time:89982ms step_avg:99.43ms
step:906/1770 train_time:90084ms step_avg:99.43ms
step:907/1770 train_time:90186ms step_avg:99.43ms
step:908/1770 train_time:90287ms step_avg:99.44ms
step:909/1770 train_time:90389ms step_avg:99.44ms
step:910/1770 train_time:90490ms step_avg:99.44ms
step:911/1770 train_time:90591ms step_avg:99.44ms
step:912/1770 train_time:90692ms step_avg:99.44ms
step:913/1770 train_time:90794ms step_avg:99.45ms
step:914/1770 train_time:90896ms step_avg:99.45ms
step:915/1770 train_time:90999ms step_avg:99.45ms
step:916/1770 train_time:91101ms step_avg:99.46ms
step:917/1770 train_time:91204ms step_avg:99.46ms
step:918/1770 train_time:91305ms step_avg:99.46ms
step:919/1770 train_time:91406ms step_avg:99.46ms
step:920/1770 train_time:91509ms step_avg:99.47ms
step:921/1770 train_time:91612ms step_avg:99.47ms
step:922/1770 train_time:91715ms step_avg:99.47ms
step:923/1770 train_time:91818ms step_avg:99.48ms
step:924/1770 train_time:91921ms step_avg:99.48ms
step:925/1770 train_time:92023ms step_avg:99.48ms
step:926/1770 train_time:92126ms step_avg:99.49ms
step:927/1770 train_time:92230ms step_avg:99.49ms
step:928/1770 train_time:92333ms step_avg:99.50ms
step:929/1770 train_time:92436ms step_avg:99.50ms
step:930/1770 train_time:92539ms step_avg:99.50ms
step:931/1770 train_time:92642ms step_avg:99.51ms
step:932/1770 train_time:92745ms step_avg:99.51ms
step:933/1770 train_time:92848ms step_avg:99.52ms
step:934/1770 train_time:92951ms step_avg:99.52ms
step:935/1770 train_time:93054ms step_avg:99.52ms
step:936/1770 train_time:93156ms step_avg:99.53ms
step:937/1770 train_time:93260ms step_avg:99.53ms
step:938/1770 train_time:93363ms step_avg:99.53ms
step:939/1770 train_time:93467ms step_avg:99.54ms
step:940/1770 train_time:93569ms step_avg:99.54ms
step:941/1770 train_time:93673ms step_avg:99.55ms
step:942/1770 train_time:93776ms step_avg:99.55ms
step:943/1770 train_time:93882ms step_avg:99.56ms
step:944/1770 train_time:93984ms step_avg:99.56ms
step:945/1770 train_time:94087ms step_avg:99.56ms
step:946/1770 train_time:94190ms step_avg:99.57ms
step:947/1770 train_time:94293ms step_avg:99.57ms
step:948/1770 train_time:94396ms step_avg:99.57ms
step:949/1770 train_time:94499ms step_avg:99.58ms
step:950/1770 train_time:94603ms step_avg:99.58ms
step:951/1770 train_time:94706ms step_avg:99.59ms
step:952/1770 train_time:94810ms step_avg:99.59ms
step:953/1770 train_time:94912ms step_avg:99.59ms
step:954/1770 train_time:95016ms step_avg:99.60ms
step:955/1770 train_time:95119ms step_avg:99.60ms
step:956/1770 train_time:95222ms step_avg:99.60ms
step:957/1770 train_time:95325ms step_avg:99.61ms
step:958/1770 train_time:95428ms step_avg:99.61ms
step:959/1770 train_time:95531ms step_avg:99.62ms
step:960/1770 train_time:95633ms step_avg:99.62ms
step:961/1770 train_time:95736ms step_avg:99.62ms
step:962/1770 train_time:95840ms step_avg:99.63ms
step:963/1770 train_time:95943ms step_avg:99.63ms
step:964/1770 train_time:96046ms step_avg:99.63ms
step:965/1770 train_time:96149ms step_avg:99.64ms
step:966/1770 train_time:96252ms step_avg:99.64ms
step:967/1770 train_time:96355ms step_avg:99.64ms
step:968/1770 train_time:96459ms step_avg:99.65ms
step:969/1770 train_time:96562ms step_avg:99.65ms
step:970/1770 train_time:96666ms step_avg:99.66ms
step:971/1770 train_time:96769ms step_avg:99.66ms
step:972/1770 train_time:96872ms step_avg:99.66ms
step:973/1770 train_time:96975ms step_avg:99.67ms
step:974/1770 train_time:97079ms step_avg:99.67ms
step:975/1770 train_time:97182ms step_avg:99.67ms
step:976/1770 train_time:97285ms step_avg:99.68ms
step:977/1770 train_time:97388ms step_avg:99.68ms
step:978/1770 train_time:97491ms step_avg:99.68ms
step:979/1770 train_time:97595ms step_avg:99.69ms
step:980/1770 train_time:97698ms step_avg:99.69ms
step:981/1770 train_time:97801ms step_avg:99.70ms
step:982/1770 train_time:97905ms step_avg:99.70ms
step:983/1770 train_time:98008ms step_avg:99.70ms
step:984/1770 train_time:98111ms step_avg:99.71ms
step:985/1770 train_time:98215ms step_avg:99.71ms
step:986/1770 train_time:98318ms step_avg:99.71ms
step:987/1770 train_time:98422ms step_avg:99.72ms
step:988/1770 train_time:98524ms step_avg:99.72ms
step:989/1770 train_time:98628ms step_avg:99.73ms
step:990/1770 train_time:98730ms step_avg:99.73ms
step:991/1770 train_time:98834ms step_avg:99.73ms
step:992/1770 train_time:98936ms step_avg:99.73ms
step:993/1770 train_time:99041ms step_avg:99.74ms
step:994/1770 train_time:99144ms step_avg:99.74ms
step:995/1770 train_time:99248ms step_avg:99.75ms
step:996/1770 train_time:99350ms step_avg:99.75ms
step:997/1770 train_time:99453ms step_avg:99.75ms
step:998/1770 train_time:99555ms step_avg:99.75ms
step:999/1770 train_time:99659ms step_avg:99.76ms
step:1000/1770 train_time:99763ms step_avg:99.76ms
step:1000/1770 val_loss:3.5637 train_time:99865ms step_avg:99.86ms
step:1001/1770 train_time:99883ms step_avg:99.78ms
step:1002/1770 train_time:99975ms step_avg:99.78ms
step:1003/1770 train_time:100079ms step_avg:99.78ms
step:1004/1770 train_time:100182ms step_avg:99.78ms
step:1005/1770 train_time:100284ms step_avg:99.79ms
step:1006/1770 train_time:100387ms step_avg:99.79ms
step:1007/1770 train_time:100490ms step_avg:99.79ms
step:1008/1770 train_time:100593ms step_avg:99.79ms
step:1009/1770 train_time:100695ms step_avg:99.80ms
step:1010/1770 train_time:100798ms step_avg:99.80ms
step:1011/1770 train_time:100901ms step_avg:99.80ms
step:1012/1770 train_time:101005ms step_avg:99.81ms
step:1013/1770 train_time:101109ms step_avg:99.81ms
step:1014/1770 train_time:101213ms step_avg:99.82ms
step:1015/1770 train_time:101316ms step_avg:99.82ms
step:1016/1770 train_time:101419ms step_avg:99.82ms
step:1017/1770 train_time:101523ms step_avg:99.83ms
step:1018/1770 train_time:101626ms step_avg:99.83ms
step:1019/1770 train_time:101730ms step_avg:99.83ms
step:1020/1770 train_time:101833ms step_avg:99.84ms
step:1021/1770 train_time:101935ms step_avg:99.84ms
step:1022/1770 train_time:102038ms step_avg:99.84ms
step:1023/1770 train_time:102141ms step_avg:99.84ms
step:1024/1770 train_time:102244ms step_avg:99.85ms
step:1025/1770 train_time:102348ms step_avg:99.85ms
step:1026/1770 train_time:102452ms step_avg:99.86ms
step:1027/1770 train_time:102555ms step_avg:99.86ms
step:1028/1770 train_time:102658ms step_avg:99.86ms
step:1029/1770 train_time:102761ms step_avg:99.86ms
step:1030/1770 train_time:102864ms step_avg:99.87ms
step:1031/1770 train_time:102968ms step_avg:99.87ms
step:1032/1770 train_time:103072ms step_avg:99.88ms
step:1033/1770 train_time:103175ms step_avg:99.88ms
step:1034/1770 train_time:103277ms step_avg:99.88ms
step:1035/1770 train_time:103380ms step_avg:99.88ms
step:1036/1770 train_time:103483ms step_avg:99.89ms
step:1037/1770 train_time:103586ms step_avg:99.89ms
step:1038/1770 train_time:103690ms step_avg:99.89ms
step:1039/1770 train_time:103793ms step_avg:99.90ms
step:1040/1770 train_time:103896ms step_avg:99.90ms
step:1041/1770 train_time:103999ms step_avg:99.90ms
step:1042/1770 train_time:104102ms step_avg:99.91ms
step:1043/1770 train_time:104206ms step_avg:99.91ms
step:1044/1770 train_time:104310ms step_avg:99.91ms
step:1045/1770 train_time:104413ms step_avg:99.92ms
step:1046/1770 train_time:104516ms step_avg:99.92ms
step:1047/1770 train_time:104619ms step_avg:99.92ms
step:1048/1770 train_time:104723ms step_avg:99.93ms
step:1049/1770 train_time:104827ms step_avg:99.93ms
step:1050/1770 train_time:104930ms step_avg:99.93ms
step:1051/1770 train_time:105033ms step_avg:99.94ms
step:1052/1770 train_time:105136ms step_avg:99.94ms
step:1053/1770 train_time:105240ms step_avg:99.94ms
step:1054/1770 train_time:105343ms step_avg:99.95ms
step:1055/1770 train_time:105447ms step_avg:99.95ms
step:1056/1770 train_time:105551ms step_avg:99.95ms
step:1057/1770 train_time:105654ms step_avg:99.96ms
step:1058/1770 train_time:105758ms step_avg:99.96ms
step:1059/1770 train_time:105862ms step_avg:99.96ms
step:1060/1770 train_time:105965ms step_avg:99.97ms
step:1061/1770 train_time:106069ms step_avg:99.97ms
step:1062/1770 train_time:106173ms step_avg:99.97ms
step:1063/1770 train_time:106278ms step_avg:99.98ms
step:1064/1770 train_time:106382ms step_avg:99.98ms
step:1065/1770 train_time:106484ms step_avg:99.99ms
step:1066/1770 train_time:106588ms step_avg:99.99ms
step:1067/1770 train_time:106692ms step_avg:99.99ms
step:1068/1770 train_time:106797ms step_avg:100.00ms
step:1069/1770 train_time:106900ms step_avg:100.00ms
step:1070/1770 train_time:107003ms step_avg:100.00ms
step:1071/1770 train_time:107106ms step_avg:100.01ms
step:1072/1770 train_time:107210ms step_avg:100.01ms
step:1073/1770 train_time:107313ms step_avg:100.01ms
step:1074/1770 train_time:107416ms step_avg:100.01ms
step:1075/1770 train_time:107519ms step_avg:100.02ms
step:1076/1770 train_time:107622ms step_avg:100.02ms
step:1077/1770 train_time:107725ms step_avg:100.02ms
step:1078/1770 train_time:107828ms step_avg:100.03ms
step:1079/1770 train_time:107933ms step_avg:100.03ms
step:1080/1770 train_time:108037ms step_avg:100.03ms
step:1081/1770 train_time:108139ms step_avg:100.04ms
step:1082/1770 train_time:108243ms step_avg:100.04ms
step:1083/1770 train_time:108346ms step_avg:100.04ms
step:1084/1770 train_time:108450ms step_avg:100.05ms
step:1085/1770 train_time:108553ms step_avg:100.05ms
step:1086/1770 train_time:108656ms step_avg:100.05ms
step:1087/1770 train_time:108759ms step_avg:100.05ms
step:1088/1770 train_time:108861ms step_avg:100.06ms
step:1089/1770 train_time:108965ms step_avg:100.06ms
step:1090/1770 train_time:109068ms step_avg:100.06ms
step:1091/1770 train_time:109171ms step_avg:100.07ms
step:1092/1770 train_time:109275ms step_avg:100.07ms
step:1093/1770 train_time:109378ms step_avg:100.07ms
step:1094/1770 train_time:109481ms step_avg:100.07ms
step:1095/1770 train_time:109585ms step_avg:100.08ms
step:1096/1770 train_time:109689ms step_avg:100.08ms
step:1097/1770 train_time:109793ms step_avg:100.08ms
step:1098/1770 train_time:109896ms step_avg:100.09ms
step:1099/1770 train_time:109999ms step_avg:100.09ms
step:1100/1770 train_time:110102ms step_avg:100.09ms
step:1101/1770 train_time:110205ms step_avg:100.10ms
step:1102/1770 train_time:110309ms step_avg:100.10ms
step:1103/1770 train_time:110413ms step_avg:100.10ms
step:1104/1770 train_time:110517ms step_avg:100.11ms
step:1105/1770 train_time:110619ms step_avg:100.11ms
step:1106/1770 train_time:110723ms step_avg:100.11ms
step:1107/1770 train_time:110827ms step_avg:100.11ms
step:1108/1770 train_time:110930ms step_avg:100.12ms
step:1109/1770 train_time:111033ms step_avg:100.12ms
step:1110/1770 train_time:111137ms step_avg:100.12ms
step:1111/1770 train_time:111243ms step_avg:100.13ms
step:1112/1770 train_time:111348ms step_avg:100.13ms
step:1113/1770 train_time:111451ms step_avg:100.14ms
step:1114/1770 train_time:111554ms step_avg:100.14ms
step:1115/1770 train_time:111657ms step_avg:100.14ms
step:1116/1770 train_time:111760ms step_avg:100.14ms
step:1117/1770 train_time:111863ms step_avg:100.15ms
step:1118/1770 train_time:111967ms step_avg:100.15ms
step:1119/1770 train_time:112071ms step_avg:100.15ms
step:1120/1770 train_time:112174ms step_avg:100.16ms
step:1121/1770 train_time:112277ms step_avg:100.16ms
step:1122/1770 train_time:112380ms step_avg:100.16ms
step:1123/1770 train_time:112483ms step_avg:100.16ms
step:1124/1770 train_time:112587ms step_avg:100.17ms
step:1125/1770 train_time:112690ms step_avg:100.17ms
step:1125/1770 val_loss:3.5243 train_time:112792ms step_avg:100.26ms
step:1126/1770 train_time:112811ms step_avg:100.19ms
step:1127/1770 train_time:112906ms step_avg:100.18ms
step:1128/1770 train_time:113009ms step_avg:100.19ms
step:1129/1770 train_time:113113ms step_avg:100.19ms
step:1130/1770 train_time:113216ms step_avg:100.19ms
step:1131/1770 train_time:113320ms step_avg:100.19ms
step:1132/1770 train_time:113422ms step_avg:100.20ms
step:1133/1770 train_time:113525ms step_avg:100.20ms
step:1134/1770 train_time:113628ms step_avg:100.20ms
step:1135/1770 train_time:113731ms step_avg:100.20ms
step:1136/1770 train_time:113836ms step_avg:100.21ms
step:1137/1770 train_time:113940ms step_avg:100.21ms
step:1138/1770 train_time:114043ms step_avg:100.21ms
step:1139/1770 train_time:114148ms step_avg:100.22ms
step:1140/1770 train_time:114251ms step_avg:100.22ms
step:1141/1770 train_time:114354ms step_avg:100.22ms
step:1142/1770 train_time:114458ms step_avg:100.23ms
step:1143/1770 train_time:114561ms step_avg:100.23ms
step:1144/1770 train_time:114664ms step_avg:100.23ms
step:1145/1770 train_time:114767ms step_avg:100.23ms
step:1146/1770 train_time:114871ms step_avg:100.24ms
step:1147/1770 train_time:114975ms step_avg:100.24ms
step:1148/1770 train_time:115080ms step_avg:100.24ms
step:1149/1770 train_time:115184ms step_avg:100.25ms
step:1150/1770 train_time:115287ms step_avg:100.25ms
step:1151/1770 train_time:115390ms step_avg:100.25ms
step:1152/1770 train_time:115494ms step_avg:100.26ms
step:1153/1770 train_time:115598ms step_avg:100.26ms
step:1154/1770 train_time:115701ms step_avg:100.26ms
step:1155/1770 train_time:115805ms step_avg:100.26ms
step:1156/1770 train_time:115908ms step_avg:100.27ms
step:1157/1770 train_time:116012ms step_avg:100.27ms
step:1158/1770 train_time:116116ms step_avg:100.27ms
step:1159/1770 train_time:116220ms step_avg:100.28ms
step:1160/1770 train_time:116323ms step_avg:100.28ms
step:1161/1770 train_time:116426ms step_avg:100.28ms
step:1162/1770 train_time:116529ms step_avg:100.28ms
step:1163/1770 train_time:116633ms step_avg:100.29ms
step:1164/1770 train_time:116737ms step_avg:100.29ms
step:1165/1770 train_time:116840ms step_avg:100.29ms
step:1166/1770 train_time:116943ms step_avg:100.29ms
step:1167/1770 train_time:117046ms step_avg:100.30ms
step:1168/1770 train_time:117150ms step_avg:100.30ms
step:1169/1770 train_time:117252ms step_avg:100.30ms
step:1170/1770 train_time:117356ms step_avg:100.30ms
step:1171/1770 train_time:117459ms step_avg:100.31ms
step:1172/1770 train_time:117563ms step_avg:100.31ms
step:1173/1770 train_time:117666ms step_avg:100.31ms
step:1174/1770 train_time:117770ms step_avg:100.31ms
step:1175/1770 train_time:117873ms step_avg:100.32ms
step:1176/1770 train_time:117977ms step_avg:100.32ms
step:1177/1770 train_time:118080ms step_avg:100.32ms
step:1178/1770 train_time:118183ms step_avg:100.32ms
step:1179/1770 train_time:118287ms step_avg:100.33ms
step:1180/1770 train_time:118390ms step_avg:100.33ms
step:1181/1770 train_time:118494ms step_avg:100.33ms
step:1182/1770 train_time:118598ms step_avg:100.34ms
step:1183/1770 train_time:118702ms step_avg:100.34ms
step:1184/1770 train_time:118807ms step_avg:100.34ms
step:1185/1770 train_time:118911ms step_avg:100.35ms
step:1186/1770 train_time:119018ms step_avg:100.35ms
step:1187/1770 train_time:119124ms step_avg:100.36ms
step:1188/1770 train_time:119227ms step_avg:100.36ms
step:1189/1770 train_time:119331ms step_avg:100.36ms
step:1190/1770 train_time:119436ms step_avg:100.37ms
step:1191/1770 train_time:119542ms step_avg:100.37ms
step:1192/1770 train_time:119646ms step_avg:100.37ms
step:1193/1770 train_time:119750ms step_avg:100.38ms
step:1194/1770 train_time:119854ms step_avg:100.38ms
step:1195/1770 train_time:119959ms step_avg:100.38ms
step:1196/1770 train_time:120063ms step_avg:100.39ms
step:1197/1770 train_time:120168ms step_avg:100.39ms
step:1198/1770 train_time:120271ms step_avg:100.39ms
step:1199/1770 train_time:120376ms step_avg:100.40ms
step:1200/1770 train_time:120481ms step_avg:100.40ms
step:1201/1770 train_time:120585ms step_avg:100.40ms
step:1202/1770 train_time:120689ms step_avg:100.41ms
step:1203/1770 train_time:120792ms step_avg:100.41ms
step:1204/1770 train_time:120898ms step_avg:100.41ms
step:1205/1770 train_time:121002ms step_avg:100.42ms
step:1206/1770 train_time:121108ms step_avg:100.42ms
step:1207/1770 train_time:121212ms step_avg:100.42ms
step:1208/1770 train_time:121317ms step_avg:100.43ms
step:1209/1770 train_time:121422ms step_avg:100.43ms
step:1210/1770 train_time:121527ms step_avg:100.44ms
step:1211/1770 train_time:121631ms step_avg:100.44ms
step:1212/1770 train_time:121738ms step_avg:100.44ms
step:1213/1770 train_time:121842ms step_avg:100.45ms
step:1214/1770 train_time:121946ms step_avg:100.45ms
step:1215/1770 train_time:122051ms step_avg:100.45ms
step:1216/1770 train_time:122157ms step_avg:100.46ms
step:1217/1770 train_time:122262ms step_avg:100.46ms
step:1218/1770 train_time:122366ms step_avg:100.46ms
step:1219/1770 train_time:122471ms step_avg:100.47ms
step:1220/1770 train_time:122576ms step_avg:100.47ms
step:1221/1770 train_time:122680ms step_avg:100.48ms
step:1222/1770 train_time:122785ms step_avg:100.48ms
step:1223/1770 train_time:122889ms step_avg:100.48ms
step:1224/1770 train_time:122994ms step_avg:100.49ms
step:1225/1770 train_time:123099ms step_avg:100.49ms
step:1226/1770 train_time:123203ms step_avg:100.49ms
step:1227/1770 train_time:123309ms step_avg:100.50ms
step:1228/1770 train_time:123414ms step_avg:100.50ms
step:1229/1770 train_time:123519ms step_avg:100.50ms
step:1230/1770 train_time:123624ms step_avg:100.51ms
step:1231/1770 train_time:123728ms step_avg:100.51ms
step:1232/1770 train_time:123831ms step_avg:100.51ms
step:1233/1770 train_time:123936ms step_avg:100.52ms
step:1234/1770 train_time:124040ms step_avg:100.52ms
step:1235/1770 train_time:124145ms step_avg:100.52ms
step:1236/1770 train_time:124251ms step_avg:100.53ms
step:1237/1770 train_time:124356ms step_avg:100.53ms
step:1238/1770 train_time:124461ms step_avg:100.53ms
step:1239/1770 train_time:124565ms step_avg:100.54ms
step:1240/1770 train_time:124669ms step_avg:100.54ms
step:1241/1770 train_time:124775ms step_avg:100.54ms
step:1242/1770 train_time:124879ms step_avg:100.55ms
step:1243/1770 train_time:124984ms step_avg:100.55ms
step:1244/1770 train_time:125088ms step_avg:100.55ms
step:1245/1770 train_time:125192ms step_avg:100.56ms
step:1246/1770 train_time:125299ms step_avg:100.56ms
step:1247/1770 train_time:125403ms step_avg:100.56ms
step:1248/1770 train_time:125507ms step_avg:100.57ms
step:1249/1770 train_time:125610ms step_avg:100.57ms
step:1250/1770 train_time:125714ms step_avg:100.57ms
step:1250/1770 val_loss:3.4749 train_time:125820ms step_avg:100.66ms
step:1251/1770 train_time:125838ms step_avg:100.59ms
step:1252/1770 train_time:125929ms step_avg:100.58ms
step:1253/1770 train_time:126034ms step_avg:100.59ms
step:1254/1770 train_time:126138ms step_avg:100.59ms
step:1255/1770 train_time:126245ms step_avg:100.59ms
step:1256/1770 train_time:126348ms step_avg:100.60ms
step:1257/1770 train_time:126453ms step_avg:100.60ms
step:1258/1770 train_time:126558ms step_avg:100.60ms
step:1259/1770 train_time:126662ms step_avg:100.61ms
step:1260/1770 train_time:126766ms step_avg:100.61ms
step:1261/1770 train_time:126872ms step_avg:100.61ms
step:1262/1770 train_time:126977ms step_avg:100.62ms
step:1263/1770 train_time:127081ms step_avg:100.62ms
step:1264/1770 train_time:127187ms step_avg:100.62ms
step:1265/1770 train_time:127291ms step_avg:100.63ms
step:1266/1770 train_time:127396ms step_avg:100.63ms
step:1267/1770 train_time:127501ms step_avg:100.63ms
step:1268/1770 train_time:127605ms step_avg:100.63ms
step:1269/1770 train_time:127708ms step_avg:100.64ms
step:1270/1770 train_time:127813ms step_avg:100.64ms
step:1271/1770 train_time:127924ms step_avg:100.65ms
step:1272/1770 train_time:128023ms step_avg:100.65ms
step:1273/1770 train_time:128127ms step_avg:100.65ms
step:1274/1770 train_time:128232ms step_avg:100.65ms
step:1275/1770 train_time:128336ms step_avg:100.66ms
step:1276/1770 train_time:128440ms step_avg:100.66ms
step:1277/1770 train_time:128545ms step_avg:100.66ms
step:1278/1770 train_time:128651ms step_avg:100.67ms
step:1279/1770 train_time:128755ms step_avg:100.67ms
step:1280/1770 train_time:128861ms step_avg:100.67ms
step:1281/1770 train_time:128965ms step_avg:100.68ms
step:1282/1770 train_time:129070ms step_avg:100.68ms
step:1283/1770 train_time:129175ms step_avg:100.68ms
step:1284/1770 train_time:129280ms step_avg:100.69ms
step:1285/1770 train_time:129383ms step_avg:100.69ms
step:1286/1770 train_time:129487ms step_avg:100.69ms
step:1287/1770 train_time:129593ms step_avg:100.69ms
step:1288/1770 train_time:129698ms step_avg:100.70ms
step:1289/1770 train_time:129803ms step_avg:100.70ms
step:1290/1770 train_time:129906ms step_avg:100.70ms
step:1291/1770 train_time:130010ms step_avg:100.70ms
step:1292/1770 train_time:130115ms step_avg:100.71ms
step:1293/1770 train_time:130220ms step_avg:100.71ms
step:1294/1770 train_time:130324ms step_avg:100.71ms
step:1295/1770 train_time:130429ms step_avg:100.72ms
step:1296/1770 train_time:130533ms step_avg:100.72ms
step:1297/1770 train_time:130637ms step_avg:100.72ms
step:1298/1770 train_time:130742ms step_avg:100.73ms
step:1299/1770 train_time:130846ms step_avg:100.73ms
step:1300/1770 train_time:130950ms step_avg:100.73ms
step:1301/1770 train_time:131057ms step_avg:100.74ms
step:1302/1770 train_time:131161ms step_avg:100.74ms
step:1303/1770 train_time:131266ms step_avg:100.74ms
step:1304/1770 train_time:131371ms step_avg:100.74ms
step:1305/1770 train_time:131476ms step_avg:100.75ms
step:1306/1770 train_time:131580ms step_avg:100.75ms
step:1307/1770 train_time:131684ms step_avg:100.75ms
step:1308/1770 train_time:131789ms step_avg:100.76ms
step:1309/1770 train_time:131894ms step_avg:100.76ms
step:1310/1770 train_time:131999ms step_avg:100.76ms
step:1311/1770 train_time:132103ms step_avg:100.76ms
step:1312/1770 train_time:132207ms step_avg:100.77ms
step:1313/1770 train_time:132311ms step_avg:100.77ms
step:1314/1770 train_time:132416ms step_avg:100.77ms
step:1315/1770 train_time:132520ms step_avg:100.78ms
step:1316/1770 train_time:132624ms step_avg:100.78ms
step:1317/1770 train_time:132729ms step_avg:100.78ms
step:1318/1770 train_time:132836ms step_avg:100.79ms
step:1319/1770 train_time:132940ms step_avg:100.79ms
step:1320/1770 train_time:133044ms step_avg:100.79ms
step:1321/1770 train_time:133148ms step_avg:100.79ms
step:1322/1770 train_time:133252ms step_avg:100.80ms
step:1323/1770 train_time:133357ms step_avg:100.80ms
step:1324/1770 train_time:133461ms step_avg:100.80ms
step:1325/1770 train_time:133568ms step_avg:100.81ms
step:1326/1770 train_time:133672ms step_avg:100.81ms
step:1327/1770 train_time:133779ms step_avg:100.81ms
step:1328/1770 train_time:133883ms step_avg:100.82ms
step:1329/1770 train_time:133987ms step_avg:100.82ms
step:1330/1770 train_time:134091ms step_avg:100.82ms
step:1331/1770 train_time:134195ms step_avg:100.82ms
step:1332/1770 train_time:134299ms step_avg:100.83ms
step:1333/1770 train_time:134403ms step_avg:100.83ms
step:1334/1770 train_time:134507ms step_avg:100.83ms
step:1335/1770 train_time:134612ms step_avg:100.83ms
step:1336/1770 train_time:134717ms step_avg:100.84ms
step:1337/1770 train_time:134822ms step_avg:100.84ms
step:1338/1770 train_time:134926ms step_avg:100.84ms
step:1339/1770 train_time:135030ms step_avg:100.84ms
step:1340/1770 train_time:135136ms step_avg:100.85ms
step:1341/1770 train_time:135240ms step_avg:100.85ms
step:1342/1770 train_time:135345ms step_avg:100.85ms
step:1343/1770 train_time:135450ms step_avg:100.86ms
step:1344/1770 train_time:135556ms step_avg:100.86ms
step:1345/1770 train_time:135661ms step_avg:100.86ms
step:1346/1770 train_time:135765ms step_avg:100.87ms
step:1347/1770 train_time:135870ms step_avg:100.87ms
step:1348/1770 train_time:135977ms step_avg:100.87ms
step:1349/1770 train_time:136081ms step_avg:100.88ms
step:1350/1770 train_time:136186ms step_avg:100.88ms
step:1351/1770 train_time:136292ms step_avg:100.88ms
step:1352/1770 train_time:136396ms step_avg:100.88ms
step:1353/1770 train_time:136501ms step_avg:100.89ms
step:1354/1770 train_time:136605ms step_avg:100.89ms
step:1355/1770 train_time:136709ms step_avg:100.89ms
step:1356/1770 train_time:136813ms step_avg:100.89ms
step:1357/1770 train_time:136918ms step_avg:100.90ms
step:1358/1770 train_time:137023ms step_avg:100.90ms
step:1359/1770 train_time:137127ms step_avg:100.90ms
step:1360/1770 train_time:137233ms step_avg:100.91ms
step:1361/1770 train_time:137337ms step_avg:100.91ms
step:1362/1770 train_time:137443ms step_avg:100.91ms
step:1363/1770 train_time:137547ms step_avg:100.92ms
step:1364/1770 train_time:137652ms step_avg:100.92ms
step:1365/1770 train_time:137756ms step_avg:100.92ms
step:1366/1770 train_time:137861ms step_avg:100.92ms
step:1367/1770 train_time:137965ms step_avg:100.93ms
step:1368/1770 train_time:138069ms step_avg:100.93ms
step:1369/1770 train_time:138175ms step_avg:100.93ms
step:1370/1770 train_time:138280ms step_avg:100.93ms
step:1371/1770 train_time:138386ms step_avg:100.94ms
step:1372/1770 train_time:138490ms step_avg:100.94ms
step:1373/1770 train_time:138594ms step_avg:100.94ms
step:1374/1770 train_time:138700ms step_avg:100.95ms
step:1375/1770 train_time:138804ms step_avg:100.95ms
step:1375/1770 val_loss:3.4313 train_time:138907ms step_avg:101.02ms
step:1376/1770 train_time:138926ms step_avg:100.96ms
step:1377/1770 train_time:139021ms step_avg:100.96ms
step:1378/1770 train_time:139125ms step_avg:100.96ms
step:1379/1770 train_time:139229ms step_avg:100.96ms
step:1380/1770 train_time:139334ms step_avg:100.97ms
step:1381/1770 train_time:139438ms step_avg:100.97ms
step:1382/1770 train_time:139542ms step_avg:100.97ms
step:1383/1770 train_time:139647ms step_avg:100.97ms
step:1384/1770 train_time:139752ms step_avg:100.98ms
step:1385/1770 train_time:139856ms step_avg:100.98ms
step:1386/1770 train_time:139962ms step_avg:100.98ms
step:1387/1770 train_time:140068ms step_avg:100.99ms
step:1388/1770 train_time:140173ms step_avg:100.99ms
step:1389/1770 train_time:140277ms step_avg:100.99ms
step:1390/1770 train_time:140381ms step_avg:100.99ms
step:1391/1770 train_time:140485ms step_avg:101.00ms
step:1392/1770 train_time:140590ms step_avg:101.00ms
step:1393/1770 train_time:140694ms step_avg:101.00ms
step:1394/1770 train_time:140798ms step_avg:101.00ms
step:1395/1770 train_time:140903ms step_avg:101.01ms
step:1396/1770 train_time:141009ms step_avg:101.01ms
step:1397/1770 train_time:141115ms step_avg:101.01ms
step:1398/1770 train_time:141219ms step_avg:101.02ms
step:1399/1770 train_time:141323ms step_avg:101.02ms
step:1400/1770 train_time:141429ms step_avg:101.02ms
step:1401/1770 train_time:141533ms step_avg:101.02ms
step:1402/1770 train_time:141637ms step_avg:101.02ms
step:1403/1770 train_time:141742ms step_avg:101.03ms
step:1404/1770 train_time:141847ms step_avg:101.03ms
step:1405/1770 train_time:141951ms step_avg:101.03ms
step:1406/1770 train_time:142056ms step_avg:101.04ms
step:1407/1770 train_time:142161ms step_avg:101.04ms
step:1408/1770 train_time:142266ms step_avg:101.04ms
step:1409/1770 train_time:142371ms step_avg:101.04ms
step:1410/1770 train_time:142476ms step_avg:101.05ms
step:1411/1770 train_time:142579ms step_avg:101.05ms
step:1412/1770 train_time:142683ms step_avg:101.05ms
step:1413/1770 train_time:142788ms step_avg:101.05ms
step:1414/1770 train_time:142893ms step_avg:101.06ms
step:1415/1770 train_time:142999ms step_avg:101.06ms
step:1416/1770 train_time:143104ms step_avg:101.06ms
step:1417/1770 train_time:143209ms step_avg:101.06ms
step:1418/1770 train_time:143313ms step_avg:101.07ms
step:1419/1770 train_time:143417ms step_avg:101.07ms
step:1420/1770 train_time:143522ms step_avg:101.07ms
step:1421/1770 train_time:143626ms step_avg:101.07ms
step:1422/1770 train_time:143731ms step_avg:101.08ms
step:1423/1770 train_time:143835ms step_avg:101.08ms
step:1424/1770 train_time:143939ms step_avg:101.08ms
step:1425/1770 train_time:144044ms step_avg:101.08ms
step:1426/1770 train_time:144150ms step_avg:101.09ms
step:1427/1770 train_time:144254ms step_avg:101.09ms
step:1428/1770 train_time:144360ms step_avg:101.09ms
step:1429/1770 train_time:144465ms step_avg:101.09ms
step:1430/1770 train_time:144569ms step_avg:101.10ms
step:1431/1770 train_time:144675ms step_avg:101.10ms
step:1432/1770 train_time:144779ms step_avg:101.10ms
step:1433/1770 train_time:144884ms step_avg:101.11ms
step:1434/1770 train_time:144989ms step_avg:101.11ms
step:1435/1770 train_time:145094ms step_avg:101.11ms
step:1436/1770 train_time:145200ms step_avg:101.11ms
step:1437/1770 train_time:145304ms step_avg:101.12ms
step:1438/1770 train_time:145410ms step_avg:101.12ms
step:1439/1770 train_time:145514ms step_avg:101.12ms
step:1440/1770 train_time:145618ms step_avg:101.12ms
step:1441/1770 train_time:145725ms step_avg:101.13ms
step:1442/1770 train_time:145829ms step_avg:101.13ms
step:1443/1770 train_time:145934ms step_avg:101.13ms
step:1444/1770 train_time:146040ms step_avg:101.14ms
step:1445/1770 train_time:146146ms step_avg:101.14ms
step:1446/1770 train_time:146250ms step_avg:101.14ms
step:1447/1770 train_time:146356ms step_avg:101.14ms
step:1448/1770 train_time:146461ms step_avg:101.15ms
step:1449/1770 train_time:146569ms step_avg:101.15ms
step:1450/1770 train_time:146675ms step_avg:101.16ms
step:1451/1770 train_time:146780ms step_avg:101.16ms
step:1452/1770 train_time:146886ms step_avg:101.16ms
step:1453/1770 train_time:146992ms step_avg:101.16ms
step:1454/1770 train_time:147097ms step_avg:101.17ms
step:1455/1770 train_time:147205ms step_avg:101.17ms
step:1456/1770 train_time:147312ms step_avg:101.18ms
step:1457/1770 train_time:147418ms step_avg:101.18ms
step:1458/1770 train_time:147524ms step_avg:101.18ms
step:1459/1770 train_time:147632ms step_avg:101.19ms
step:1460/1770 train_time:147737ms step_avg:101.19ms
step:1461/1770 train_time:147841ms step_avg:101.19ms
step:1462/1770 train_time:147948ms step_avg:101.20ms
step:1463/1770 train_time:148054ms step_avg:101.20ms
step:1464/1770 train_time:148161ms step_avg:101.20ms
step:1465/1770 train_time:148266ms step_avg:101.21ms
step:1466/1770 train_time:148373ms step_avg:101.21ms
step:1467/1770 train_time:148479ms step_avg:101.21ms
step:1468/1770 train_time:148586ms step_avg:101.22ms
step:1469/1770 train_time:148692ms step_avg:101.22ms
step:1470/1770 train_time:148797ms step_avg:101.22ms
step:1471/1770 train_time:148903ms step_avg:101.23ms
step:1472/1770 train_time:149008ms step_avg:101.23ms
step:1473/1770 train_time:149116ms step_avg:101.23ms
step:1474/1770 train_time:149222ms step_avg:101.24ms
step:1475/1770 train_time:149329ms step_avg:101.24ms
step:1476/1770 train_time:149434ms step_avg:101.24ms
step:1477/1770 train_time:149541ms step_avg:101.25ms
step:1478/1770 train_time:149648ms step_avg:101.25ms
step:1479/1770 train_time:149754ms step_avg:101.25ms
step:1480/1770 train_time:149859ms step_avg:101.26ms
step:1481/1770 train_time:149967ms step_avg:101.26ms
step:1482/1770 train_time:150073ms step_avg:101.26ms
step:1483/1770 train_time:150179ms step_avg:101.27ms
step:1484/1770 train_time:150284ms step_avg:101.27ms
step:1485/1770 train_time:150390ms step_avg:101.27ms
step:1486/1770 train_time:150495ms step_avg:101.28ms
step:1487/1770 train_time:150600ms step_avg:101.28ms
step:1488/1770 train_time:150706ms step_avg:101.28ms
step:1489/1770 train_time:150813ms step_avg:101.28ms
step:1490/1770 train_time:150918ms step_avg:101.29ms
step:1491/1770 train_time:151024ms step_avg:101.29ms
step:1492/1770 train_time:151131ms step_avg:101.29ms
step:1493/1770 train_time:151240ms step_avg:101.30ms
step:1494/1770 train_time:151348ms step_avg:101.30ms
step:1495/1770 train_time:151454ms step_avg:101.31ms
step:1496/1770 train_time:151559ms step_avg:101.31ms
step:1497/1770 train_time:151665ms step_avg:101.31ms
step:1498/1770 train_time:151769ms step_avg:101.31ms
step:1499/1770 train_time:151875ms step_avg:101.32ms
step:1500/1770 train_time:151979ms step_avg:101.32ms
step:1500/1770 val_loss:3.3921 train_time:152084ms step_avg:101.39ms
step:1501/1770 train_time:152102ms step_avg:101.33ms
step:1502/1770 train_time:152197ms step_avg:101.33ms
step:1503/1770 train_time:152302ms step_avg:101.33ms
step:1504/1770 train_time:152407ms step_avg:101.33ms
step:1505/1770 train_time:152514ms step_avg:101.34ms
step:1506/1770 train_time:152620ms step_avg:101.34ms
step:1507/1770 train_time:152726ms step_avg:101.34ms
step:1508/1770 train_time:152832ms step_avg:101.35ms
step:1509/1770 train_time:152938ms step_avg:101.35ms
step:1510/1770 train_time:153043ms step_avg:101.35ms
step:1511/1770 train_time:153149ms step_avg:101.36ms
step:1512/1770 train_time:153254ms step_avg:101.36ms
step:1513/1770 train_time:153360ms step_avg:101.36ms
step:1514/1770 train_time:153466ms step_avg:101.36ms
step:1515/1770 train_time:153571ms step_avg:101.37ms
step:1516/1770 train_time:153679ms step_avg:101.37ms
step:1517/1770 train_time:153785ms step_avg:101.37ms
step:1518/1770 train_time:153892ms step_avg:101.38ms
step:1519/1770 train_time:153998ms step_avg:101.38ms
step:1520/1770 train_time:154103ms step_avg:101.38ms
step:1521/1770 train_time:154209ms step_avg:101.39ms
step:1522/1770 train_time:154315ms step_avg:101.39ms
step:1523/1770 train_time:154422ms step_avg:101.39ms
step:1524/1770 train_time:154527ms step_avg:101.40ms
step:1525/1770 train_time:154632ms step_avg:101.40ms
step:1526/1770 train_time:154737ms step_avg:101.40ms
step:1527/1770 train_time:154842ms step_avg:101.40ms
step:1528/1770 train_time:154949ms step_avg:101.41ms
step:1529/1770 train_time:155053ms step_avg:101.41ms
step:1530/1770 train_time:155159ms step_avg:101.41ms
step:1531/1770 train_time:155265ms step_avg:101.41ms
step:1532/1770 train_time:155373ms step_avg:101.42ms
step:1533/1770 train_time:155479ms step_avg:101.42ms
step:1534/1770 train_time:155585ms step_avg:101.42ms
step:1535/1770 train_time:155690ms step_avg:101.43ms
step:1536/1770 train_time:155796ms step_avg:101.43ms
step:1537/1770 train_time:155903ms step_avg:101.43ms
step:1538/1770 train_time:156010ms step_avg:101.44ms
step:1539/1770 train_time:156115ms step_avg:101.44ms
step:1540/1770 train_time:156225ms step_avg:101.44ms
step:1541/1770 train_time:156333ms step_avg:101.45ms
step:1542/1770 train_time:156438ms step_avg:101.45ms
step:1543/1770 train_time:156544ms step_avg:101.45ms
step:1544/1770 train_time:156651ms step_avg:101.46ms
step:1545/1770 train_time:156757ms step_avg:101.46ms
step:1546/1770 train_time:156864ms step_avg:101.46ms
step:1547/1770 train_time:156969ms step_avg:101.47ms
step:1548/1770 train_time:157074ms step_avg:101.47ms
step:1549/1770 train_time:157180ms step_avg:101.47ms
step:1550/1770 train_time:157285ms step_avg:101.47ms
step:1551/1770 train_time:157390ms step_avg:101.48ms
step:1552/1770 train_time:157497ms step_avg:101.48ms
step:1553/1770 train_time:157603ms step_avg:101.48ms
step:1554/1770 train_time:157709ms step_avg:101.49ms
step:1555/1770 train_time:157815ms step_avg:101.49ms
step:1556/1770 train_time:157921ms step_avg:101.49ms
step:1557/1770 train_time:158026ms step_avg:101.49ms
step:1558/1770 train_time:158131ms step_avg:101.50ms
step:1559/1770 train_time:158237ms step_avg:101.50ms
step:1560/1770 train_time:158343ms step_avg:101.50ms
step:1561/1770 train_time:158451ms step_avg:101.51ms
step:1562/1770 train_time:158556ms step_avg:101.51ms
step:1563/1770 train_time:158662ms step_avg:101.51ms
step:1564/1770 train_time:158768ms step_avg:101.51ms
step:1565/1770 train_time:158872ms step_avg:101.52ms
step:1566/1770 train_time:158977ms step_avg:101.52ms
step:1567/1770 train_time:159084ms step_avg:101.52ms
step:1568/1770 train_time:159189ms step_avg:101.52ms
step:1569/1770 train_time:159297ms step_avg:101.53ms
step:1570/1770 train_time:159404ms step_avg:101.53ms
step:1571/1770 train_time:159509ms step_avg:101.53ms
step:1572/1770 train_time:159615ms step_avg:101.54ms
step:1573/1770 train_time:159725ms step_avg:101.54ms
step:1574/1770 train_time:159830ms step_avg:101.54ms
step:1575/1770 train_time:159935ms step_avg:101.55ms
step:1576/1770 train_time:160042ms step_avg:101.55ms
step:1577/1770 train_time:160149ms step_avg:101.55ms
step:1578/1770 train_time:160256ms step_avg:101.56ms
step:1579/1770 train_time:160362ms step_avg:101.56ms
step:1580/1770 train_time:160468ms step_avg:101.56ms
step:1581/1770 train_time:160576ms step_avg:101.57ms
step:1582/1770 train_time:160684ms step_avg:101.57ms
step:1583/1770 train_time:160789ms step_avg:101.57ms
step:1584/1770 train_time:160895ms step_avg:101.58ms
step:1585/1770 train_time:161001ms step_avg:101.58ms
step:1586/1770 train_time:161111ms step_avg:101.58ms
step:1587/1770 train_time:161218ms step_avg:101.59ms
step:1588/1770 train_time:161324ms step_avg:101.59ms
step:1589/1770 train_time:161431ms step_avg:101.59ms
step:1590/1770 train_time:161536ms step_avg:101.60ms
step:1591/1770 train_time:161642ms step_avg:101.60ms
step:1592/1770 train_time:161749ms step_avg:101.60ms
step:1593/1770 train_time:161854ms step_avg:101.60ms
step:1594/1770 train_time:161961ms step_avg:101.61ms
step:1595/1770 train_time:162068ms step_avg:101.61ms
step:1596/1770 train_time:162175ms step_avg:101.61ms
step:1597/1770 train_time:162281ms step_avg:101.62ms
step:1598/1770 train_time:162387ms step_avg:101.62ms
step:1599/1770 train_time:162494ms step_avg:101.62ms
step:1600/1770 train_time:162601ms step_avg:101.63ms
step:1601/1770 train_time:162709ms step_avg:101.63ms
step:1602/1770 train_time:162815ms step_avg:101.63ms
step:1603/1770 train_time:162921ms step_avg:101.64ms
step:1604/1770 train_time:163026ms step_avg:101.64ms
step:1605/1770 train_time:163132ms step_avg:101.64ms
step:1606/1770 train_time:163238ms step_avg:101.64ms
step:1607/1770 train_time:163348ms step_avg:101.65ms
step:1608/1770 train_time:163455ms step_avg:101.65ms
step:1609/1770 train_time:163563ms step_avg:101.65ms
step:1610/1770 train_time:163668ms step_avg:101.66ms
step:1611/1770 train_time:163775ms step_avg:101.66ms
step:1612/1770 train_time:163882ms step_avg:101.66ms
step:1613/1770 train_time:163987ms step_avg:101.67ms
step:1614/1770 train_time:164092ms step_avg:101.67ms
step:1615/1770 train_time:164200ms step_avg:101.67ms
step:1616/1770 train_time:164306ms step_avg:101.67ms
step:1617/1770 train_time:164413ms step_avg:101.68ms
step:1618/1770 train_time:164521ms step_avg:101.68ms
step:1619/1770 train_time:164628ms step_avg:101.68ms
step:1620/1770 train_time:164735ms step_avg:101.69ms
step:1621/1770 train_time:164841ms step_avg:101.69ms
step:1622/1770 train_time:164948ms step_avg:101.69ms
step:1623/1770 train_time:165055ms step_avg:101.70ms
step:1624/1770 train_time:165160ms step_avg:101.70ms
step:1625/1770 train_time:165265ms step_avg:101.70ms
step:1625/1770 val_loss:3.3569 train_time:165371ms step_avg:101.77ms
step:1626/1770 train_time:165391ms step_avg:101.72ms
step:1627/1770 train_time:165483ms step_avg:101.71ms
step:1628/1770 train_time:165588ms step_avg:101.71ms
step:1629/1770 train_time:165692ms step_avg:101.71ms
step:1630/1770 train_time:165799ms step_avg:101.72ms
step:1631/1770 train_time:165904ms step_avg:101.72ms
step:1632/1770 train_time:166009ms step_avg:101.72ms
step:1633/1770 train_time:166115ms step_avg:101.72ms
step:1634/1770 train_time:166221ms step_avg:101.73ms
step:1635/1770 train_time:166326ms step_avg:101.73ms
step:1636/1770 train_time:166434ms step_avg:101.73ms
step:1637/1770 train_time:166541ms step_avg:101.74ms
step:1638/1770 train_time:166645ms step_avg:101.74ms
step:1639/1770 train_time:166751ms step_avg:101.74ms
step:1640/1770 train_time:166857ms step_avg:101.74ms
step:1641/1770 train_time:166964ms step_avg:101.75ms
step:1642/1770 train_time:167069ms step_avg:101.75ms
step:1643/1770 train_time:167175ms step_avg:101.75ms
step:1644/1770 train_time:167283ms step_avg:101.75ms
step:1645/1770 train_time:167388ms step_avg:101.76ms
step:1646/1770 train_time:167495ms step_avg:101.76ms
step:1647/1770 train_time:167602ms step_avg:101.76ms
step:1648/1770 train_time:167707ms step_avg:101.76ms
step:1649/1770 train_time:167812ms step_avg:101.77ms
step:1650/1770 train_time:167918ms step_avg:101.77ms
step:1651/1770 train_time:168024ms step_avg:101.77ms
step:1652/1770 train_time:168130ms step_avg:101.77ms
step:1653/1770 train_time:168236ms step_avg:101.78ms
step:1654/1770 train_time:168344ms step_avg:101.78ms
step:1655/1770 train_time:168452ms step_avg:101.78ms
step:1656/1770 train_time:168558ms step_avg:101.79ms
step:1657/1770 train_time:168666ms step_avg:101.79ms
step:1658/1770 train_time:168772ms step_avg:101.79ms
step:1659/1770 train_time:168880ms step_avg:101.80ms
step:1660/1770 train_time:168986ms step_avg:101.80ms
step:1661/1770 train_time:169091ms step_avg:101.80ms
step:1662/1770 train_time:169196ms step_avg:101.80ms
step:1663/1770 train_time:169302ms step_avg:101.81ms
step:1664/1770 train_time:169408ms step_avg:101.81ms
step:1665/1770 train_time:169514ms step_avg:101.81ms
step:1666/1770 train_time:169620ms step_avg:101.81ms
step:1667/1770 train_time:169727ms step_avg:101.82ms
step:1668/1770 train_time:169833ms step_avg:101.82ms
step:1669/1770 train_time:169938ms step_avg:101.82ms
step:1670/1770 train_time:170043ms step_avg:101.82ms
step:1671/1770 train_time:170150ms step_avg:101.83ms
step:1672/1770 train_time:170256ms step_avg:101.83ms
step:1673/1770 train_time:170363ms step_avg:101.83ms
step:1674/1770 train_time:170469ms step_avg:101.83ms
step:1675/1770 train_time:170573ms step_avg:101.83ms
step:1676/1770 train_time:170679ms step_avg:101.84ms
step:1677/1770 train_time:170789ms step_avg:101.84ms
step:1678/1770 train_time:170894ms step_avg:101.84ms
step:1679/1770 train_time:171000ms step_avg:101.85ms
step:1680/1770 train_time:171106ms step_avg:101.85ms
step:1681/1770 train_time:171212ms step_avg:101.85ms
step:1682/1770 train_time:171320ms step_avg:101.85ms
step:1683/1770 train_time:171425ms step_avg:101.86ms
step:1684/1770 train_time:171531ms step_avg:101.86ms
step:1685/1770 train_time:171636ms step_avg:101.86ms
step:1686/1770 train_time:171743ms step_avg:101.86ms
step:1687/1770 train_time:171852ms step_avg:101.87ms
step:1688/1770 train_time:171957ms step_avg:101.87ms
step:1689/1770 train_time:172063ms step_avg:101.87ms
step:1690/1770 train_time:172168ms step_avg:101.87ms
step:1691/1770 train_time:172275ms step_avg:101.88ms
step:1692/1770 train_time:172381ms step_avg:101.88ms
step:1693/1770 train_time:172488ms step_avg:101.88ms
step:1694/1770 train_time:172594ms step_avg:101.89ms
step:1695/1770 train_time:172699ms step_avg:101.89ms
step:1696/1770 train_time:172806ms step_avg:101.89ms
step:1697/1770 train_time:172915ms step_avg:101.89ms
step:1698/1770 train_time:173022ms step_avg:101.90ms
step:1699/1770 train_time:173126ms step_avg:101.90ms
step:1700/1770 train_time:173231ms step_avg:101.90ms
step:1701/1770 train_time:173337ms step_avg:101.90ms
step:1702/1770 train_time:173444ms step_avg:101.91ms
step:1703/1770 train_time:173549ms step_avg:101.91ms
step:1704/1770 train_time:173655ms step_avg:101.91ms
step:1705/1770 train_time:173761ms step_avg:101.91ms
step:1706/1770 train_time:173867ms step_avg:101.91ms
step:1707/1770 train_time:173974ms step_avg:101.92ms
step:1708/1770 train_time:174080ms step_avg:101.92ms
step:1709/1770 train_time:174188ms step_avg:101.92ms
step:1710/1770 train_time:174298ms step_avg:101.93ms
step:1711/1770 train_time:174407ms step_avg:101.93ms
step:1712/1770 train_time:174513ms step_avg:101.94ms
step:1713/1770 train_time:174619ms step_avg:101.94ms
step:1714/1770 train_time:174725ms step_avg:101.94ms
step:1715/1770 train_time:174832ms step_avg:101.94ms
step:1716/1770 train_time:174939ms step_avg:101.95ms
step:1717/1770 train_time:175045ms step_avg:101.95ms
step:1718/1770 train_time:175151ms step_avg:101.95ms
step:1719/1770 train_time:175258ms step_avg:101.95ms
step:1720/1770 train_time:175367ms step_avg:101.96ms
step:1721/1770 train_time:175474ms step_avg:101.96ms
step:1722/1770 train_time:175585ms step_avg:101.97ms
step:1723/1770 train_time:175693ms step_avg:101.97ms
step:1724/1770 train_time:175802ms step_avg:101.97ms
step:1725/1770 train_time:175912ms step_avg:101.98ms
step:1726/1770 train_time:176020ms step_avg:101.98ms
step:1727/1770 train_time:176127ms step_avg:101.98ms
step:1728/1770 train_time:176236ms step_avg:101.99ms
step:1729/1770 train_time:176344ms step_avg:101.99ms
step:1730/1770 train_time:176450ms step_avg:101.99ms
step:1731/1770 train_time:176558ms step_avg:102.00ms
step:1732/1770 train_time:176664ms step_avg:102.00ms
step:1733/1770 train_time:176773ms step_avg:102.00ms
step:1734/1770 train_time:176880ms step_avg:102.01ms
step:1735/1770 train_time:176988ms step_avg:102.01ms
step:1736/1770 train_time:177094ms step_avg:102.01ms
step:1737/1770 train_time:177200ms step_avg:102.01ms
step:1738/1770 train_time:177307ms step_avg:102.02ms
step:1739/1770 train_time:177415ms step_avg:102.02ms
step:1740/1770 train_time:177523ms step_avg:102.02ms
step:1741/1770 train_time:177631ms step_avg:102.03ms
step:1742/1770 train_time:177741ms step_avg:102.03ms
step:1743/1770 train_time:177848ms step_avg:102.04ms
step:1744/1770 train_time:177954ms step_avg:102.04ms
step:1745/1770 train_time:178061ms step_avg:102.04ms
step:1746/1770 train_time:178172ms step_avg:102.05ms
step:1747/1770 train_time:178277ms step_avg:102.05ms
step:1748/1770 train_time:178385ms step_avg:102.05ms
step:1749/1770 train_time:178492ms step_avg:102.05ms
step:1750/1770 train_time:178598ms step_avg:102.06ms
step:1750/1770 val_loss:3.3295 train_time:178704ms step_avg:102.12ms
step:1751/1770 train_time:178723ms step_avg:102.07ms
step:1752/1770 train_time:178818ms step_avg:102.06ms
step:1753/1770 train_time:178924ms step_avg:102.07ms
step:1754/1770 train_time:179030ms step_avg:102.07ms
step:1755/1770 train_time:179137ms step_avg:102.07ms
step:1756/1770 train_time:179245ms step_avg:102.08ms
step:1757/1770 train_time:179351ms step_avg:102.08ms
step:1758/1770 train_time:179458ms step_avg:102.08ms
step:1759/1770 train_time:179564ms step_avg:102.08ms
step:1760/1770 train_time:179671ms step_avg:102.09ms
step:1761/1770 train_time:179779ms step_avg:102.09ms
step:1762/1770 train_time:179889ms step_avg:102.09ms
step:1763/1770 train_time:179994ms step_avg:102.10ms
step:1764/1770 train_time:180102ms step_avg:102.10ms
step:1765/1770 train_time:180208ms step_avg:102.10ms
step:1766/1770 train_time:180318ms step_avg:102.11ms
step:1767/1770 train_time:180424ms step_avg:102.11ms
step:1768/1770 train_time:180531ms step_avg:102.11ms
step:1769/1770 train_time:180638ms step_avg:102.11ms
step:1770/1770 train_time:180744ms step_avg:102.11ms
step:1770/1770 val_loss:3.3262 train_time:180850ms step_avg:102.18ms
peak memory allocated: 30724 MiB reserved: 45392 MiB
