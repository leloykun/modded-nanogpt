import os
import sys
with open(sys.argv[0]) as f:
    code = f.read() # read the code of this file ASAP, for logging
import uuid
import time
from dataclasses import dataclass
from functools import lru_cache
from pathlib import Path

os.environ["PYTORCH_CUDA_ALLOC_CONF"] = "expandable_segments:True"
import torch
torch.empty(1, device="cuda", requires_grad=True).backward() # prevents a bug on some systems
from torch import Tensor, nn
import torch.nn.functional as F
import torch.distributed as dist
# use of FlexAttention contributed by @KoszarskyB
from torch.nn.attention.flex_attention import BlockMask, flex_attention
torch._inductor.config.coordinate_descent_tuning = True # turn this off for a faster compile time (but slightly slower run)

# -----------------------------------------------------------------------------
# Custom operators : FP8 matmul by @YouJiacheng

@torch.library.custom_op("nanogpt::mm", mutates_args=())
def mm_op(x: Tensor, w: Tensor, x_s: float, w_s: float, grad_s: float) -> tuple[Tensor, Tensor, Tensor]:
    @torch.compile
    def impl(x: Tensor, w: Tensor):
        assert x.is_contiguous() and w.is_contiguous()
        x_f8 = x.mul(x_s).to(torch.float8_e4m3fn)
        w_f8 = w.mul(w_s).to(torch.float8_e4m3fn)
        out = torch._scaled_mm(
            x_f8,
            w_f8.t(),
            out_dtype=torch.bfloat16,
            scale_a=x.new_tensor(1 / x_s, dtype=torch.float32),
            scale_b=x.new_tensor(1 / w_s, dtype=torch.float32),
            use_fast_accum=True,
        )
        return out, x_f8, w_f8

    return impl(x, w)

@mm_op.register_fake
def _(x: Tensor, w: Tensor, *_):
    assert x.ndim == w.ndim == 2
    assert x.shape[1] == w.shape[1]
    assert x.device == w.device
    assert x.is_contiguous() and w.is_contiguous()
    return x @ w.t(), x.to(torch.float8_e4m3fn), w.to(torch.float8_e4m3fn)

@torch.library.custom_op("nanogpt::mm_backward", mutates_args=())
def mm_backward_op(g: Tensor, x_f8: Tensor, w_f8: Tensor, x_s: float, w_s: float, grad_s: float) -> tuple[Tensor, Tensor]:
    @torch.compile
    def impl(grad: Tensor, x_f8: Tensor, w_f8: Tensor):
        assert grad.is_contiguous()
        x_inv_s = grad.new_tensor(1 / x_s, dtype=torch.float32)
        w_inv_s = grad.new_tensor(1 / w_s, dtype=torch.float32)
        grad_inv_s = grad.new_tensor(1 / grad_s, dtype=torch.float32)
        grad_f8 = grad.mul(grad_s).to(torch.float8_e5m2)
        grad_x = torch._scaled_mm(
            grad_f8,
            w_f8.t().contiguous().t(),
            out_dtype=torch.bfloat16,
            scale_a=grad_inv_s,
            scale_b=w_inv_s,
            use_fast_accum=False,
        )
        # faster than grad_f8_t @ x_f8, for (d_out, d_in) == (50304, 768)
        grad_w = torch._scaled_mm(
            x_f8.t().contiguous(),
            grad_f8.t().contiguous().t(),
            out_dtype=torch.float32,
            scale_a=x_inv_s,
            scale_b=grad_inv_s,
            use_fast_accum=False,
        ).t()
        return grad_x, grad_w

    return impl(g, x_f8, w_f8)

@mm_backward_op.register_fake
def _(g: Tensor, x_f8: Tensor, w_f8: Tensor, *_):
    return x_f8.to(torch.bfloat16), w_f8.to(torch.float32)

def mm_backward(ctx, grad_out: Tensor, *_):
    x_f8, w_f8 = ctx.saved_tensors
    x_s, w_s, grad_s = ctx.scales
    grad_x, grad_w = torch.ops.nanogpt.mm_backward(
        grad_out, x_f8, w_f8, x_s, w_s, grad_s
    )
    return grad_x, grad_w, None, None, None

def mm_setup_context(ctx: torch.autograd.function.FunctionCtx, inputs, output):
    *_, x_s, w_s, grad_s = inputs
    _, x_f8, w_f8 = output
    ctx.save_for_backward(x_f8, w_f8)
    ctx.scales = x_s, w_s, grad_s
    ctx.set_materialize_grads(False)

mm_op.register_autograd(mm_backward, setup_context=mm_setup_context)

# -----------------------------------------------------------------------------
# Muon optimizer

@torch.compile
def zeropower_via_newtonschulz5(G: Tensor, steps: int) -> Tensor:
    """
    Newton-Schulz iteration to compute the zeroth power / orthogonalization of G. We opt to use a
    quintic iteration whose coefficients are selected to maximize the slope at zero. For the purpose
    of minimizing steps, it turns out to be empirically effective to keep increasing the slope at
    zero even beyond the point where the iteration no longer converges all the way to one everywhere
    on the interval. This iteration therefore does not produce UV^T but rather something like US'V^T
    where S' is diagonal with S_{ii}' ~ Uniform(0.5, 1.5), which turns out not to hurt model
    performance at all relative to UV^T, where USV^T = G is the SVD.
    """
    assert G.ndim >= 2 # batched Muon implementation by @scottjmaddox, and put into practice in the record by @YouJiacheng
    a, b, c = (3.4445, -4.7750,  2.0315)
    X = G.bfloat16()
    if G.size(-2) > G.size(-1):
        X = X.mT

    # Ensure spectral norm is at most 1
    X = X / (X.norm(dim=(-2, -1), keepdim=True) + 1e-7)
    # Perform the NS iterations
    for _ in range(steps):
        A = X @ X.mT
        B = b * A + c * A @ A # quintic computation strategy adapted from suggestion by @jxbz, @leloykun, and @YouJiacheng
        X = a * X + B @ X
    
    if G.size(-2) > G.size(-1):
        X = X.mT
    return X

class Muon(torch.optim.Optimizer):
    """
    Muon - MomentUm Orthogonalized by Newton-schulz

    Muon internally runs standard SGD-momentum, and then performs an orthogonalization post-
    processing step, in which each 2D parameter's update is replaced with the nearest orthogonal
    matrix. To efficiently orthogonalize each update, we use a Newton-Schulz iteration, which has
    the advantage that it can be stably run in bfloat16 on the GPU.

    Some warnings:
    - This optimizer assumes that all parameters passed in are 2D.
    - It should not be used for the embedding layer, the final fully connected layer, or any {0,1}-D
    parameters; those should all be optimized by a standard method (e.g., AdamW).
    - To use it with 4D convolutional filters, it works well to just flatten their last 3 dimensions.
    - We believe it is unlikely to work well for training with small batch size.
    - We believe it may not work well for finetuning pretrained models, but we haven"t tested this.
    - We have not yet tried this optimizer for training scenarios larger than NanoGPT (124M).

    Arguments:
        lr: The learning rate used by the internal SGD.
        momentum: The momentum used by the internal SGD.
        nesterov: Whether to use Nesterov-style momentum in the internal SGD. (recommended)
        ns_steps: The number of Newton-Schulz iteration steps to use.
    """
    def __init__(self, params, lr=0.02, momentum=0.95, nesterov=True, ns_steps=5, rank=0, world_size=1):
        self.rank = rank
        self.world_size = world_size
        defaults = dict(lr=lr, momentum=momentum, nesterov=nesterov, ns_steps=ns_steps)
        params: list[Tensor] = [*params]
        assert all(isinstance(p, Tensor) for p in params)
        sizes = {p.numel() for p in params}
        def create_update_buffer(size: int):
            b = torch.empty(self.world_size, size, dtype=torch.bfloat16, device="cuda")
            return dict(update_buffer=b, update_buffer_views=[b[i] for i in range(self.world_size)])
        param_groups = [
            dict(params=[p for p in params if p.numel() == size], **create_update_buffer(size)) for size in sizes]
        super().__init__(param_groups, defaults)

    @torch.no_grad()
    def step(self):
        for group in self.param_groups:
            lr = group["lr"]
            momentum = group["momentum"]
            nesterov = group["nesterov"]
            ns_steps = group["ns_steps"]
            update_buffer = group["update_buffer"]
            update_buffer_views: list[Tensor] = group["update_buffer_views"]
            # generate weight updates in distributed fashion
            params: list[Tensor] = group["params"]
            handle = None
            params_world = None
            def update_prev(): # optimized Muon implementation contributed by @YouJiacheng
                if params_world is None:
                    return
                assert handle is not None
                handle.wait()
                for p_world, g_world in zip(params_world, update_buffer_views):
                    p_world.add_(
                        g_world.view_as(p_world),
                        alpha=-lr * max(1, p_world.size(-2) / p_world.size(-1)) ** 0.5,
                    )
            for base_i in range(len(params))[::self.world_size]:
                if base_i + self.rank < len(params):
                    p = params[base_i + self.rank]
                    g = p.grad
                    assert g is not None
                    state = self.state[p]
                    if "momentum_buffer" not in state:
                        state["momentum_buffer"] = torch.zeros_like(g)
                    buf: Tensor = state["momentum_buffer"]
                    buf.lerp_(g, 1 - momentum)
                    g = g.lerp_(buf, momentum) if nesterov else buf
                    g = zeropower_via_newtonschulz5(g, steps=ns_steps).flatten()
                else:
                    g = update_buffer_views[self.rank]
                update_prev() # async all_gather instead of sync all_reduce by @YouJiacheng
                handle = dist.all_gather_into_tensor(update_buffer, g, async_op=True)
                params_world = params[base_i : base_i + self.world_size]
            update_prev()

# -----------------------------------------------------------------------------
# PyTorch nn.Module definitions for the model

def norm(x: Tensor):
    return F.rms_norm(x, (x.size(-1),))

class CastedLinear(nn.Linear):
    def __init__(self, in_features: int, out_features: int, use_fp8: bool = False, x_s: float = 1.0, w_s: float = 1.0, grad_s: float = 1.0):
        super().__init__(in_features, out_features, bias=False)
        self.use_fp8 = use_fp8
        self.x_s = x_s
        self.w_s = w_s
        self.grad_s = grad_s

    def reset_parameters(self) -> None:
        std = 0.5 * (self.in_features ** -0.5) # 0.5 is a bit better than the default 1/sqrt(3)
        bound = (3 ** 0.5) * std
        with torch.no_grad():
            self.weight.uniform_(-bound, bound)

    def forward(self, x: Tensor):
        if self.use_fp8 and self.training:
            _x = x.flatten(0, -2)
            out: Tensor = torch.ops.nanogpt.mm(_x, self.weight, x_s=self.x_s, w_s=self.w_s, grad_s=self.grad_s)[0]
            return out.reshape(*x.shape[:-1], -1)
        else:
            return F.linear(x, self.weight.type_as(x))

class Rotary(nn.Module):
    def __init__(self, dim: int, max_seq_len: int):
        super().__init__()
        # half-truncate RoPE by @YouJiacheng (w/ base freq tuning)
        angular_freq = (1 / 1024) ** torch.linspace(0, 1, steps=dim//4, dtype=torch.float32)
        angular_freq = torch.cat([angular_freq, angular_freq.new_zeros(dim//4)])
        t = torch.arange(max_seq_len, dtype=torch.float32)
        theta = torch.einsum("i,j -> ij", t, angular_freq)
        self.cos = nn.Buffer(theta.cos(), persistent=False)
        self.sin = nn.Buffer(theta.sin(), persistent=False)

    def forward(self, x_BTHD: Tensor):
        assert self.cos.size(0) >= x_BTHD.size(-3)
        cos, sin = self.cos[None, :x_BTHD.size(-3), None, :], self.sin[None, :x_BTHD.size(-3), None, :]
        x1, x2 = x_BTHD.to(dtype=torch.float32).chunk(2, dim=-1)
        y1 = x1 * cos + x2 * sin
        y2 = x1 * (-sin) + x2 * cos
        return torch.cat((y1, y2), 3).type_as(x_BTHD)

class CausalSelfAttention(nn.Module):
    def __init__(self, dim: int, num_heads: int, max_seq_len: int, head_dim=128):
        super().__init__()
        self.num_heads = num_heads
        self.head_dim = head_dim
        hdim = num_heads * head_dim
        std = 0.5 * (dim ** -0.5)
        bound = (3 ** 0.5) * std # improved init scale by @YouJiacheng
        # merged QKV weights: suggested by many, implemented by @fernbear.bsky.social, and further improved by @YouJiacheng
        # https://x.com/hi_tysam/status/1879699187107033311
        self.qkv_w = nn.Parameter(torch.empty(3, hdim, dim).uniform_(-bound, bound))
        self.lambdas = nn.Parameter(torch.tensor([0.5, 0.5]))
        self.rotary = Rotary(head_dim, max_seq_len)
        self.c_proj = CastedLinear(hdim, dim)
        self.c_proj.weight.detach().zero_() # zero init suggested by @Grad62304977
        # scale the attention logits by given constant, instead of the default head_dim**-0.5, by @leloykun
        # inspired by learnable scalars used by @brendanh0gan https://x.com/hi_tysam/status/1879693583898591283
        self.attn_scale = 0.12

    def forward(self, x: Tensor, ve: Tensor | None, block_mask: BlockMask):
        B, T = x.size(0), x.size(1) # batch size, sequence length
        assert B == 1, "Must use batch size = 1 for FlexAttention"
        q, k, v = F.linear(x, self.qkv_w.flatten(end_dim=1).type_as(x)).view(B, T, 3 * self.num_heads, self.head_dim).chunk(3, dim=-2)
        q, k = norm(q), norm(k) # QK norm @Grad62304977
        q, k = self.rotary(q), self.rotary(k)
        if ve is not None:
            v = self.lambdas[0] * v + self.lambdas[1] * ve.view_as(v) # @KoszarskyB & @Grad62304977
        else: # skip mid-layers token value embeddings by @YouJiacheng
            v = self.lambdas[0] * v
        y = flex_attention(q.transpose(1, 2), k.transpose(1, 2), v.transpose(1, 2), block_mask=block_mask, scale=self.attn_scale).transpose(1, 2)
        y = y.contiguous().view(B, T, self.num_heads * self.head_dim) # re-assemble all head outputs side by side
        y = self.c_proj(y)
        return y

class MLP(nn.Module):
    def __init__(self, dim: int):
        super().__init__()
        hdim = 4 * dim
        self.c_fc = CastedLinear(dim, hdim)
        self.c_proj = CastedLinear(hdim, dim)
        self.c_proj.weight.detach().zero_() # zero init suggested by @Grad62304977

    def forward(self, x: Tensor):
        x = self.c_fc(x)
        x = F.relu(x).square() # https://arxiv.org/abs/2109.08668v2; ~1-2% better than GELU; suggested by @SKYLINEZ007 and @Grad62304977
        x = self.c_proj(x)
        return x

class Block(nn.Module):
    def __init__(self, dim: int, num_heads: int, layer_idx: int, max_seq_len: int):
        super().__init__()
        # skip attention of blocks.7 (the 8th layer) by @YouJiacheng
        self.attn = CausalSelfAttention(dim, num_heads, max_seq_len) if layer_idx != 7 else None
        self.mlp = MLP(dim)
        self.lambdas = nn.Parameter(torch.tensor([1., 0.]))

    def forward(self, x: Tensor, ve: Tensor | None, x0: Tensor, block_mask: BlockMask):
        x = self.lambdas[0] * x + self.lambdas[1] * x0
        if self.attn is not None:
            x = x + self.attn(norm(x), ve, block_mask)
        x = x + self.mlp(norm(x))
        return x

class ValueEmbedding(nn.Module):
    def __init__(self, vocab_size: int, embedding_dim: int, num_layers: int, num_embeddings: int = 3):
        super().__init__()
        self.num_layers = num_layers
        self.num_embeddings = num_embeddings
        self.embed = nn.ModuleList([nn.Embedding(vocab_size, embedding_dim) for _ in range(num_embeddings)])

    def forward(self, input_seq: Tensor) -> list[Tensor | None]:
        ve = [emb(input_seq) for emb in self.embed]
        # 012 ... 012 structure on token value embeddings by @YouJiacheng, improved on @leloykun's U-net structure
        ve = [ve[0], ve[1], ve[2]] + [None] * (self.num_layers - 2 * self.num_embeddings) + [ve[0], ve[1], ve[2]]
        return ve

# -----------------------------------------------------------------------------
# The main model

def next_multiple_of_n(v: float | int, *, n: int):
    return next(x for x in range(n, int(v) + 1 + n, n) if x >= v)

class GPT(nn.Module):
    def __init__(self, vocab_size: int, num_layers: int, num_heads: int, model_dim: int, max_seq_len: int):
        super().__init__()
        self.embed = nn.Embedding(vocab_size, model_dim)
        # token value embeddings by @KoszarskyB - inspired by @Grad62304977's value residual implementation following https://arxiv.org/abs/2410.17897
        self.value_embeds = ValueEmbedding(vocab_size, model_dim, num_layers)
        self.blocks = nn.ModuleList([Block(model_dim, num_heads, layer_idx, max_seq_len) for layer_idx in range(num_layers)])
        # U-net design by @brendanh0gan
        self.num_encoder_layers = num_layers // 2 # Half of the layers for encoder
        self.num_decoder_layers = num_layers - self.num_encoder_layers # Remaining for decoder
        # Add learnable skip connection weights for decoder layers
        self.skip_weights = nn.Parameter(torch.ones(self.num_decoder_layers))
        # there are only 50257 unique GPT-2 tokens; we extend to nearest multiple of 128 for efficiency.
        # suggested to me by @Grad62304977. this originates from Karpathy's experiments.
        self.lm_head = CastedLinear(model_dim, next_multiple_of_n(vocab_size, n=128), use_fp8=True, x_s=2.0, w_s=2.0**5, grad_s=2.0**29)
        self.lm_head.weight.detach().zero_() # @Grad62304977

    def create_block_masks(self, input_seq: Tensor, sliding_window_num_blocks: Tensor):
        BLOCK_SIZE = 128
        docs = (input_seq == 50256).cumsum(0)

        def document_causal(b, h, q_idx, kv_idx):
            causal_mask = q_idx >= kv_idx
            document_mask = docs[q_idx] == docs[kv_idx]
            return causal_mask & document_mask

        def dense_to_ordered(dense_mask: Tensor):
            num_blocks = dense_mask.sum(dim=-1, dtype=torch.int32)
            indices = dense_mask.argsort(dim=-1, descending=False, stable=True).flip(-1).to(torch.int32)
            return num_blocks[None, None].contiguous(), indices[None, None].contiguous()

        # manual block mask creation by @YouJiacheng
        assert len(input_seq) % BLOCK_SIZE == 0
        NUM_BLOCKS = len(input_seq) // BLOCK_SIZE
        block_idx = torch.arange(NUM_BLOCKS, dtype=torch.int32, device="cuda")
        any_causal_bm = block_idx[:, None] >= block_idx
        all_causal_bm = block_idx[:, None] > block_idx
        docs_low = docs.view(-1, BLOCK_SIZE)[:, 0].contiguous()
        docs_high = docs.view(-1, BLOCK_SIZE)[:, -1].contiguous()
        any_document_bm = (docs_low[:, None] <= docs_high) & (docs_high[:, None] >= docs_low)
        all_document_bm = (docs_low[:, None] == docs_high) & (docs_high[:, None] == docs_low)
        any_bm = any_causal_bm & any_document_bm
        all_bm = all_causal_bm & all_document_bm
        partial_kv_num_blocks, partial_kv_indices = dense_to_ordered(any_bm & ~all_bm)
        full_kv_num_blocks, full_kv_indices = dense_to_ordered(all_bm)
        def build_bm(sw_num_blocks: Tensor) -> BlockMask:
            return BlockMask.from_kv_blocks(
                torch.clamp_max(partial_kv_num_blocks, torch.clamp_min(sw_num_blocks - full_kv_num_blocks, 1)),
                partial_kv_indices,
                torch.clamp_max(full_kv_num_blocks, sw_num_blocks - 1),
                full_kv_indices,
                BLOCK_SIZE=BLOCK_SIZE,
                mask_mod=document_causal,
            )
        # Long-short SWA block masks by @leloykun & @YouJiacheng, adapated from suggestion by @Grad62304977, following Gemma 2 paper
        return build_bm(sliding_window_num_blocks), build_bm(sliding_window_num_blocks // 2)

    def forward(self, input_seq: Tensor, target_seq: Tensor, sliding_window_num_blocks: Tensor):
        assert input_seq.ndim == 1

        long_bm, short_bm = self.create_block_masks(input_seq, sliding_window_num_blocks)

        x = x0 = norm(self.embed(input_seq)[None]) # use of norm here by @Grad62304977
        ve = self.value_embeds(input_seq)
        assert len(ve) == len(self.blocks)
        ve_enc, ve_dec = ve[:self.num_encoder_layers], ve[self.num_encoder_layers:]
        assert len(ve_enc) == self.num_encoder_layers and len(ve_dec) == self.num_decoder_layers

        # Store outputs for U-Net skip connections
        skip_connections = []
        # Encoder pass - process only the first half of the blocks
        block_masks = [long_bm, short_bm, short_bm, short_bm, long_bm, short_bm]
        assert len(block_masks) == self.num_encoder_layers
        for i in range(self.num_encoder_layers):
            x = self.blocks[i](x, ve_enc[i], x0, block_masks[i])
            skip_connections.append(x)
        # Decoder pass - process the remaining blocks with weighted skip connections
        block_masks.reverse()
        assert len(block_masks) == self.num_decoder_layers
        for i in range(self.num_decoder_layers):
            x = x + self.skip_weights[i] * skip_connections.pop()
            x = self.blocks[self.num_encoder_layers + i](x, ve_dec[i], x0, block_masks[i])
        x = norm(x)
        logits = self.lm_head(x)
        # @Grad62304977 added tanh softcapping following Gemma 2 paper, @KoszarskyB reduced it from 30 to 15, @YouJiacheng shifted it by +15 (2*sigmoid(2*x)=tanh(x)+1)
        logits = 30 * torch.sigmoid(logits.float() / 7.5)
        loss = F.cross_entropy(logits.view(-1, logits.size(-1)), target_seq)
        return loss

# -----------------------------------------------------------------------------
# Our own simple Distributed Data Loader

def _load_data_shard(file: Path):
    header = torch.from_file(f"{file}", False, 256, dtype=torch.int32) # header is 256 int32
    assert header[0] == 20240520, "magic number mismatch in the data .bin file"
    assert header[1] == 1, "unsupported version"
    num_tokens = int(header[2]) # number of tokens (claimed)
    with file.open("rb", buffering=0) as f:
        tokens = torch.empty(num_tokens, dtype=torch.uint16, pin_memory=True) # avoid pin_memory copy by @YouJiacheng
        f.seek(256 * 4)
        nbytes = f.readinto(tokens.numpy()) # avoid bytes->array copy by @YouJiacheng
        assert nbytes == 2 * num_tokens, "number of tokens read does not match header"
    return tokens

def distributed_data_generator(filename_pattern: str, batch_size: int, rank : int, world_size : int):
    files = sorted(Path.cwd().glob(filename_pattern))
    assert batch_size % world_size == 0
    local_batch_size = batch_size // world_size
    file_iter = iter(files) # use itertools.cycle(files) instead if you want to do multi-epoch training
    tokens, pos = _load_data_shard(next(file_iter)), 0
    while True:
        if pos + batch_size + 1 >= len(tokens):
            tokens, pos = _load_data_shard(next(file_iter)), 0
        buf = tokens[pos + rank * local_batch_size:][:local_batch_size + 1]
        inputs = buf[:-1].to(device="cuda", dtype=torch.int32, non_blocking=True) # no sync on host side;
        targets = buf[1:].to(device="cuda", dtype=torch.int64, non_blocking=True) # H2D in another stream isn"t helpful.
        pos += batch_size
        yield inputs, targets

# -----------------------------------------------------------------------------
# int main

@dataclass
class Hyperparameters:
    # data
    train_files = "data/fineweb10B/fineweb_train_*.bin" # input .bin to train on
    val_files = "data/fineweb10B/fineweb_val_*.bin" # input .bin to eval validation loss on
    val_tokens = 10485760 # how many tokens of validation data? it's important to keep this fixed for consistent comparisons
    # optimization
    num_iterations = 1770 # number of iterations to run
    cooldown_frac = 0.4 # fraction of training spent cooling down the learning rate
    # evaluation and logging
    val_loss_every = 125 # every how many steps to evaluate val loss? 0 for only at the end
    # implementation
    seq_len = 48*1024 # FlexAttention sequence length
    val_seq_len = 4*64*1024 # FlexAttention sequence length for validation
    save_checkpoint = False
args = Hyperparameters()

# torchrun sets these env variables
rank = int(os.environ["RANK"])
world_size = int(os.environ["WORLD_SIZE"])
assert torch.cuda.is_available()
device = torch.device("cuda", int(os.environ["LOCAL_RANK"]))
torch.cuda.set_device(device)
dist.init_process_group(backend="nccl", device_id=device)
dist.barrier()
master_process = (rank == 0) # this process will do logging, checkpointing etc.

# begin logging
logfile = None
if master_process:
    run_id = uuid.uuid4()
    os.makedirs("logs", exist_ok=True)
    logfile = f"logs/{run_id}.txt"
    print(logfile)
def print0(s, console=False):
    if master_process:
        with open(logfile, "a") as f:
            if console:
                print(s)
            print(s, file=f)

# begin by printing this file (the Python code)
print0(code)
print0("="*100)
# log information about the hardware/software environment this is running on
print0(f"Running Python {sys.version}")
print0(f"Running PyTorch {torch.version.__version__} compiled for CUDA {torch.version.cuda}")
def nvidia_smi():
    import subprocess  # avoid top level import
    return subprocess.run(["nvidia-smi"], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True).stdout
print0(nvidia_smi())
print0("="*100)

# load data
train_batch_size = world_size * args.seq_len
train_loader = distributed_data_generator(args.train_files, train_batch_size, rank, world_size)

model: nn.Module = GPT(vocab_size=50257, num_layers=12, num_heads=6, model_dim=768, max_seq_len=max(args.seq_len, args.val_seq_len)).cuda()
for m in model.modules():
    if isinstance(m, nn.Embedding):
        m.bfloat16()
for param in model.parameters():
    dist.broadcast(param.detach(), 0)

# collect the parameters to optimize
hidden_matrix_params = [p for n, p in model.blocks.named_parameters() if p.ndim >= 2 and "embed" not in n]
embed_params = [p for n, p in model.named_parameters() if "embed" in n]
scalar_params = [p for p in model.parameters() if p.ndim < 2]
head_params = [model.lm_head.weight]

# init the optimizer(s)
adam_params = [dict(params=head_params, lr=0.008), dict(params=embed_params, lr=0.6), dict(params=scalar_params, lr=0.04)]
# small adam epsilon by @YouJiacheng. this is an alternate method of fixing the world_size dependence
# discovered by @fernbear.bsky.social https://x.com/hi_tysam/status/1879692937589875094
optimizer1 = torch.optim.Adam(adam_params, betas=(0.8, 0.95), eps=1e-10, fused=True)
optimizer2 = Muon(hidden_matrix_params, lr=0.05, momentum=0.95, rank=rank, world_size=world_size)
optimizers = [optimizer1, optimizer2]

# learning rate schedule: stable then decay
def get_lr(step: int):
    t = 1 - step / args.num_iterations # time remaining in training
    assert 1 >= t >= 0
    w = min(t / args.cooldown_frac, 1.0) # 1 -> 0
    return w * 1.0 + (1 - w) * 0.1
schedulers = [torch.optim.lr_scheduler.LambdaLR(opt, get_lr) for opt in optimizers]
@lru_cache(1)
def sw_num_blks(window_size: int):
    return torch.tensor(window_size // 128, dtype=torch.int32, pin_memory=True).cuda(non_blocking=True)

model: nn.Module = torch.compile(model, dynamic=False)

training_time_ms = 0
# start the clock
torch.cuda.synchronize()
t0 = time.perf_counter()
# begin training
train_steps = args.num_iterations
for step in range(train_steps + 1):
    last_step = (step == train_steps)
    # This effectively ignores timing first 10 steps, which are slower for weird reasons.
    # Alternately, and slightly more correctly in terms of benchmarking, we could do 10
    # steps with dummy data first, and then re-initialize the model and reset the loader.
    if step == 10:
        training_time_ms = 0
        t0 = time.perf_counter()
    timed_steps = float("nan") if step <= 11 else (step - 10) + 1 # <= 11 to avoid bug in val

    # Linearly increase the block-wise sliding window size over training 128 -> 1792:
    # increase by @fernbear.bsky.social; block-wise by @YouJiacheng
    window_size = next_multiple_of_n(1728 * step / train_steps, n=128)

    # --------------- VALIDATION SECTION -----------------
    if last_step or (args.val_loss_every > 0 and step % args.val_loss_every == 0):
        # stop the clock
        torch.cuda.synchronize()
        training_time_ms += 1000 * (time.perf_counter() - t0)
        model.eval()
        val_batch_size = world_size * args.val_seq_len
        assert args.val_tokens % val_batch_size == 0
        val_steps = args.val_tokens // val_batch_size
        val_loader = distributed_data_generator(args.val_files, val_batch_size , rank, world_size)
        val_loss = 0
        with torch.no_grad():
            for _ in range(val_steps):
                x, y = next(val_loader)
                val_loss += model(x, y, sw_num_blks(window_size))
        val_loss /= val_steps
        del val_loader
        dist.all_reduce(val_loss, op=dist.ReduceOp.AVG)
        print0(f"step:{step}/{train_steps} val_loss:{val_loss:.4f} train_time:{training_time_ms:.0f}ms step_avg:{training_time_ms/(timed_steps-1):.2f}ms", console=True)
        model.train()
        # start the clock again
        torch.cuda.synchronize()
        t0 = time.perf_counter()

    if last_step:
        if master_process and args.save_checkpoint:
            log = dict(step=step, code=code, model=model.state_dict(), optimizers=[opt.state_dict() for opt in optimizers])
            os.makedirs(f"logs/{run_id}", exist_ok=True)
            torch.save(log, f"logs/{run_id}/state_step{step:06d}.pt")
        # the last step only has the validation loop, so break to avoid training
        break

    # --------------- TRAINING SECTION -----------------
    inputs, targets = next(train_loader)
    for input_seq, target_seq in zip(inputs.split(args.seq_len), targets.split(args.seq_len)):
        model(input_seq, target_seq, sw_num_blks(window_size)).backward()
    for param in model.parameters():
        dist.all_reduce(param.grad, op=dist.ReduceOp.AVG)
    # momentum warmup for Muon
    frac = min(step / 300, 1)
    for group in optimizer2.param_groups:
        group["momentum"] = (1 - frac) * 0.85 + frac * 0.95
    # step the optimizers and schedulers
    for opt, sched in zip(optimizers, schedulers):
        opt.step()
        sched.step()
    # null the gradients
    model.zero_grad(set_to_none=True)
    # logging
    approx_time = training_time_ms + 1000 * (time.perf_counter() - t0)
    print0(f"step:{step+1}/{train_steps} train_time:{approx_time:.0f}ms step_avg:{approx_time/timed_steps:.2f}ms", console=True)

print0(
    f"peak memory allocated: {torch.cuda.max_memory_allocated() // 1024 // 1024} MiB "
    f"reserved: {torch.cuda.max_memory_reserved() // 1024 // 1024} MiB",
    console=True,
)
dist.destroy_process_group()

====================================================================================================
Running Python 3.10.12 (main, Sep 11 2024, 15:47:36) [GCC 11.4.0]
Running PyTorch 2.7.0.dev20250125+cu126 compiled for CUDA 12.6
Tue Jan 28 03:59:22 2025       
+---------------------------------------------------------------------------------------+
| NVIDIA-SMI 535.183.06             Driver Version: 535.183.06   CUDA Version: 12.4     |
|-----------------------------------------+----------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |
|                                         |                      |               MIG M. |
|=========================================+======================+======================|
|   0  NVIDIA H100 80GB HBM3          On  | 00000000:19:00.0 Off |                    0 |
| N/A   38C    P0             121W / 700W |   7713MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   1  NVIDIA H100 80GB HBM3          On  | 00000000:3B:00.0 Off |                    0 |
| N/A   30C    P0             114W / 700W |   3451MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   2  NVIDIA H100 80GB HBM3          On  | 00000000:4C:00.0 Off |                    0 |
| N/A   29C    P0             115W / 700W |   3451MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   3  NVIDIA H100 80GB HBM3          On  | 00000000:5D:00.0 Off |                    0 |
| N/A   38C    P0             118W / 700W |   3451MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   4  NVIDIA H100 80GB HBM3          On  | 00000000:9B:00.0 Off |                    0 |
| N/A   38C    P0             120W / 700W |   3451MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   5  NVIDIA H100 80GB HBM3          On  | 00000000:BB:00.0 Off |                    0 |
| N/A   30C    P0             113W / 700W |   3451MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   6  NVIDIA H100 80GB HBM3          On  | 00000000:CB:00.0 Off |                    0 |
| N/A   37C    P0             116W / 700W |   3451MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   7  NVIDIA H100 80GB HBM3          On  | 00000000:DB:00.0 Off |                    0 |
| N/A   29C    P0             113W / 700W |   3211MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
                                                                                         
+---------------------------------------------------------------------------------------+
| Processes:                                                                            |
|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |
|        ID   ID                                                             Usage      |
|=======================================================================================|
+---------------------------------------------------------------------------------------+

====================================================================================================
step:0/1770 val_loss:10.8258 train_time:0ms step_avg:nanms
step:1/1770 train_time:24089ms step_avg:nanms
step:2/1770 train_time:24546ms step_avg:nanms
step:3/1770 train_time:24642ms step_avg:nanms
step:4/1770 train_time:24735ms step_avg:nanms
step:5/1770 train_time:24830ms step_avg:nanms
step:6/1770 train_time:24925ms step_avg:nanms
step:7/1770 train_time:25019ms step_avg:nanms
step:8/1770 train_time:25113ms step_avg:nanms
step:9/1770 train_time:25208ms step_avg:nanms
step:10/1770 train_time:25305ms step_avg:nanms
step:11/1770 train_time:92ms step_avg:nanms
step:12/1770 train_time:187ms step_avg:nanms
step:13/1770 train_time:282ms step_avg:93.88ms
step:14/1770 train_time:377ms step_avg:94.18ms
step:15/1770 train_time:471ms step_avg:94.15ms
step:16/1770 train_time:566ms step_avg:94.25ms
step:17/1770 train_time:661ms step_avg:94.38ms
step:18/1770 train_time:755ms step_avg:94.39ms
step:19/1770 train_time:850ms step_avg:94.41ms
step:20/1770 train_time:945ms step_avg:94.50ms
step:21/1770 train_time:1040ms step_avg:94.50ms
step:22/1770 train_time:1134ms step_avg:94.53ms
step:23/1770 train_time:1229ms step_avg:94.54ms
step:24/1770 train_time:1324ms step_avg:94.58ms
step:25/1770 train_time:1419ms step_avg:94.59ms
step:26/1770 train_time:1514ms step_avg:94.60ms
step:27/1770 train_time:1609ms step_avg:94.63ms
step:28/1770 train_time:1704ms step_avg:94.66ms
step:29/1770 train_time:1799ms step_avg:94.66ms
step:30/1770 train_time:1894ms step_avg:94.69ms
step:31/1770 train_time:1989ms step_avg:94.70ms
step:32/1770 train_time:2085ms step_avg:94.76ms
step:33/1770 train_time:2180ms step_avg:94.76ms
step:34/1770 train_time:2274ms step_avg:94.75ms
step:35/1770 train_time:2368ms step_avg:94.72ms
step:36/1770 train_time:2463ms step_avg:94.72ms
step:37/1770 train_time:2557ms step_avg:94.72ms
step:38/1770 train_time:2652ms step_avg:94.71ms
step:39/1770 train_time:2747ms step_avg:94.71ms
step:40/1770 train_time:2841ms step_avg:94.71ms
step:41/1770 train_time:2936ms step_avg:94.70ms
step:42/1770 train_time:3030ms step_avg:94.70ms
step:43/1770 train_time:3125ms step_avg:94.71ms
step:44/1770 train_time:3220ms step_avg:94.72ms
step:45/1770 train_time:3315ms step_avg:94.72ms
step:46/1770 train_time:3410ms step_avg:94.73ms
step:47/1770 train_time:3505ms step_avg:94.73ms
step:48/1770 train_time:3601ms step_avg:94.75ms
step:49/1770 train_time:3696ms step_avg:94.76ms
step:50/1770 train_time:3790ms step_avg:94.75ms
step:51/1770 train_time:3887ms step_avg:94.81ms
step:52/1770 train_time:3980ms step_avg:94.75ms
step:53/1770 train_time:4074ms step_avg:94.75ms
step:54/1770 train_time:4169ms step_avg:94.75ms
step:55/1770 train_time:4264ms step_avg:94.75ms
step:56/1770 train_time:4358ms step_avg:94.75ms
step:57/1770 train_time:4453ms step_avg:94.74ms
step:58/1770 train_time:4548ms step_avg:94.75ms
step:59/1770 train_time:4642ms step_avg:94.74ms
step:60/1770 train_time:4737ms step_avg:94.74ms
step:61/1770 train_time:4832ms step_avg:94.74ms
step:62/1770 train_time:4927ms step_avg:94.74ms
step:63/1770 train_time:5021ms step_avg:94.74ms
step:64/1770 train_time:5116ms step_avg:94.74ms
step:65/1770 train_time:5210ms step_avg:94.73ms
step:66/1770 train_time:5306ms step_avg:94.74ms
step:67/1770 train_time:5401ms step_avg:94.75ms
step:68/1770 train_time:5495ms step_avg:94.74ms
step:69/1770 train_time:5590ms step_avg:94.75ms
step:70/1770 train_time:5685ms step_avg:94.74ms
step:71/1770 train_time:5780ms step_avg:94.75ms
step:72/1770 train_time:5874ms step_avg:94.75ms
step:73/1770 train_time:5969ms step_avg:94.75ms
step:74/1770 train_time:6065ms step_avg:94.76ms
step:75/1770 train_time:6159ms step_avg:94.76ms
step:76/1770 train_time:6254ms step_avg:94.75ms
step:77/1770 train_time:6348ms step_avg:94.75ms
step:78/1770 train_time:6443ms step_avg:94.75ms
step:79/1770 train_time:6538ms step_avg:94.75ms
step:80/1770 train_time:6632ms step_avg:94.75ms
step:81/1770 train_time:6727ms step_avg:94.75ms
step:82/1770 train_time:6822ms step_avg:94.74ms
step:83/1770 train_time:6916ms step_avg:94.74ms
step:84/1770 train_time:7011ms step_avg:94.74ms
step:85/1770 train_time:7105ms step_avg:94.74ms
step:86/1770 train_time:7200ms step_avg:94.74ms
step:87/1770 train_time:7296ms step_avg:94.75ms
step:88/1770 train_time:7390ms step_avg:94.75ms
step:89/1770 train_time:7486ms step_avg:94.76ms
step:90/1770 train_time:7581ms step_avg:94.76ms
step:91/1770 train_time:7675ms step_avg:94.75ms
step:92/1770 train_time:7770ms step_avg:94.75ms
step:93/1770 train_time:7865ms step_avg:94.76ms
step:94/1770 train_time:7960ms step_avg:94.77ms
step:95/1770 train_time:8054ms step_avg:94.76ms
step:96/1770 train_time:8149ms step_avg:94.75ms
step:97/1770 train_time:8244ms step_avg:94.76ms
step:98/1770 train_time:8339ms step_avg:94.76ms
step:99/1770 train_time:8433ms step_avg:94.75ms
step:100/1770 train_time:8528ms step_avg:94.75ms
step:101/1770 train_time:8623ms step_avg:94.75ms
step:102/1770 train_time:8717ms step_avg:94.75ms
step:103/1770 train_time:8812ms step_avg:94.75ms
step:104/1770 train_time:8907ms step_avg:94.75ms
step:105/1770 train_time:9002ms step_avg:94.76ms
step:106/1770 train_time:9097ms step_avg:94.76ms
step:107/1770 train_time:9191ms step_avg:94.76ms
step:108/1770 train_time:9286ms step_avg:94.76ms
step:109/1770 train_time:9381ms step_avg:94.76ms
step:110/1770 train_time:9475ms step_avg:94.75ms
step:111/1770 train_time:9570ms step_avg:94.75ms
step:112/1770 train_time:9665ms step_avg:94.75ms
step:113/1770 train_time:9759ms step_avg:94.75ms
step:114/1770 train_time:9853ms step_avg:94.74ms
step:115/1770 train_time:9948ms step_avg:94.75ms
step:116/1770 train_time:10044ms step_avg:94.75ms
step:117/1770 train_time:10139ms step_avg:94.76ms
step:118/1770 train_time:10234ms step_avg:94.76ms
step:119/1770 train_time:10329ms step_avg:94.76ms
step:120/1770 train_time:10424ms step_avg:94.77ms
step:121/1770 train_time:10519ms step_avg:94.76ms
step:122/1770 train_time:10614ms step_avg:94.77ms
step:123/1770 train_time:10709ms step_avg:94.77ms
step:124/1770 train_time:10804ms step_avg:94.77ms
step:125/1770 train_time:10898ms step_avg:94.77ms
step:125/1770 val_loss:4.6611 train_time:10991ms step_avg:95.57ms
step:126/1770 train_time:11012ms step_avg:94.93ms
step:127/1770 train_time:11089ms step_avg:94.78ms
step:128/1770 train_time:11188ms step_avg:94.81ms
step:129/1770 train_time:11284ms step_avg:94.83ms
step:130/1770 train_time:11379ms step_avg:94.83ms
step:131/1770 train_time:11474ms step_avg:94.82ms
step:132/1770 train_time:11568ms step_avg:94.82ms
step:133/1770 train_time:11663ms step_avg:94.82ms
step:134/1770 train_time:11758ms step_avg:94.83ms
step:135/1770 train_time:11854ms step_avg:94.83ms
step:136/1770 train_time:11949ms step_avg:94.83ms
step:137/1770 train_time:12044ms step_avg:94.83ms
step:138/1770 train_time:12139ms step_avg:94.84ms
step:139/1770 train_time:12234ms step_avg:94.84ms
step:140/1770 train_time:12331ms step_avg:94.85ms
step:141/1770 train_time:12425ms step_avg:94.85ms
step:142/1770 train_time:12520ms step_avg:94.85ms
step:143/1770 train_time:12615ms step_avg:94.85ms
step:144/1770 train_time:12711ms step_avg:94.86ms
step:145/1770 train_time:12807ms step_avg:94.86ms
step:146/1770 train_time:12901ms step_avg:94.86ms
step:147/1770 train_time:12997ms step_avg:94.87ms
step:148/1770 train_time:13093ms step_avg:94.87ms
step:149/1770 train_time:13188ms step_avg:94.88ms
step:150/1770 train_time:13283ms step_avg:94.88ms
step:151/1770 train_time:13378ms step_avg:94.88ms
step:152/1770 train_time:13474ms step_avg:94.89ms
step:153/1770 train_time:13569ms step_avg:94.89ms
step:154/1770 train_time:13664ms step_avg:94.89ms
step:155/1770 train_time:13760ms step_avg:94.89ms
step:156/1770 train_time:13855ms step_avg:94.90ms
step:157/1770 train_time:13951ms step_avg:94.90ms
step:158/1770 train_time:14045ms step_avg:94.90ms
step:159/1770 train_time:14141ms step_avg:94.91ms
step:160/1770 train_time:14237ms step_avg:94.91ms
step:161/1770 train_time:14332ms step_avg:94.91ms
step:162/1770 train_time:14427ms step_avg:94.92ms
step:163/1770 train_time:14523ms step_avg:94.92ms
step:164/1770 train_time:14619ms step_avg:94.93ms
step:165/1770 train_time:14714ms step_avg:94.93ms
step:166/1770 train_time:14810ms step_avg:94.93ms
step:167/1770 train_time:14904ms step_avg:94.93ms
step:168/1770 train_time:14999ms step_avg:94.93ms
step:169/1770 train_time:15094ms step_avg:94.93ms
step:170/1770 train_time:15190ms step_avg:94.94ms
step:171/1770 train_time:15285ms step_avg:94.94ms
step:172/1770 train_time:15381ms step_avg:94.94ms
step:173/1770 train_time:15477ms step_avg:94.95ms
step:174/1770 train_time:15572ms step_avg:94.95ms
step:175/1770 train_time:15667ms step_avg:94.95ms
step:176/1770 train_time:15762ms step_avg:94.95ms
step:177/1770 train_time:15858ms step_avg:94.96ms
step:178/1770 train_time:15954ms step_avg:94.96ms
step:179/1770 train_time:16049ms step_avg:94.97ms
step:180/1770 train_time:16145ms step_avg:94.97ms
step:181/1770 train_time:16240ms step_avg:94.97ms
step:182/1770 train_time:16336ms step_avg:94.97ms
step:183/1770 train_time:16430ms step_avg:94.97ms
step:184/1770 train_time:16525ms step_avg:94.97ms
step:185/1770 train_time:16621ms step_avg:94.98ms
step:186/1770 train_time:16716ms step_avg:94.98ms
step:187/1770 train_time:16812ms step_avg:94.98ms
step:188/1770 train_time:16907ms step_avg:94.98ms
step:189/1770 train_time:17002ms step_avg:94.99ms
step:190/1770 train_time:17098ms step_avg:94.99ms
step:191/1770 train_time:17194ms step_avg:94.99ms
step:192/1770 train_time:17289ms step_avg:94.99ms
step:193/1770 train_time:17384ms step_avg:95.00ms
step:194/1770 train_time:17480ms step_avg:95.00ms
step:195/1770 train_time:17576ms step_avg:95.00ms
step:196/1770 train_time:17670ms step_avg:95.00ms
step:197/1770 train_time:17766ms step_avg:95.00ms
step:198/1770 train_time:17861ms step_avg:95.00ms
step:199/1770 train_time:17956ms step_avg:95.00ms
step:200/1770 train_time:18050ms step_avg:95.00ms
step:201/1770 train_time:18146ms step_avg:95.00ms
step:202/1770 train_time:18242ms step_avg:95.01ms
step:203/1770 train_time:18338ms step_avg:95.01ms
step:204/1770 train_time:18433ms step_avg:95.02ms
step:205/1770 train_time:18529ms step_avg:95.02ms
step:206/1770 train_time:18624ms step_avg:95.02ms
step:207/1770 train_time:18719ms step_avg:95.02ms
step:208/1770 train_time:18815ms step_avg:95.02ms
step:209/1770 train_time:18910ms step_avg:95.03ms
step:210/1770 train_time:19005ms step_avg:95.03ms
step:211/1770 train_time:19101ms step_avg:95.03ms
step:212/1770 train_time:19197ms step_avg:95.03ms
step:213/1770 train_time:19292ms step_avg:95.03ms
step:214/1770 train_time:19386ms step_avg:95.03ms
step:215/1770 train_time:19482ms step_avg:95.03ms
step:216/1770 train_time:19578ms step_avg:95.04ms
step:217/1770 train_time:19674ms step_avg:95.04ms
step:218/1770 train_time:19769ms step_avg:95.04ms
step:219/1770 train_time:19864ms step_avg:95.04ms
step:220/1770 train_time:19960ms step_avg:95.05ms
step:221/1770 train_time:20055ms step_avg:95.05ms
step:222/1770 train_time:20151ms step_avg:95.05ms
step:223/1770 train_time:20246ms step_avg:95.05ms
step:224/1770 train_time:20342ms step_avg:95.05ms
step:225/1770 train_time:20438ms step_avg:95.06ms
step:226/1770 train_time:20533ms step_avg:95.06ms
step:227/1770 train_time:20628ms step_avg:95.06ms
step:228/1770 train_time:20723ms step_avg:95.06ms
step:229/1770 train_time:20819ms step_avg:95.06ms
step:230/1770 train_time:20914ms step_avg:95.06ms
step:231/1770 train_time:21009ms step_avg:95.07ms
step:232/1770 train_time:21105ms step_avg:95.07ms
step:233/1770 train_time:21201ms step_avg:95.07ms
step:234/1770 train_time:21296ms step_avg:95.07ms
step:235/1770 train_time:21391ms step_avg:95.07ms
step:236/1770 train_time:21487ms step_avg:95.07ms
step:237/1770 train_time:21583ms step_avg:95.08ms
step:238/1770 train_time:21678ms step_avg:95.08ms
step:239/1770 train_time:21773ms step_avg:95.08ms
step:240/1770 train_time:21868ms step_avg:95.08ms
step:241/1770 train_time:21963ms step_avg:95.08ms
step:242/1770 train_time:22059ms step_avg:95.08ms
step:243/1770 train_time:22154ms step_avg:95.08ms
step:244/1770 train_time:22249ms step_avg:95.08ms
step:245/1770 train_time:22345ms step_avg:95.08ms
step:246/1770 train_time:22440ms step_avg:95.09ms
step:247/1770 train_time:22536ms step_avg:95.09ms
step:248/1770 train_time:22631ms step_avg:95.09ms
step:249/1770 train_time:22726ms step_avg:95.09ms
step:250/1770 train_time:22822ms step_avg:95.09ms
step:250/1770 val_loss:4.1097 train_time:22916ms step_avg:95.48ms
step:251/1770 train_time:22937ms step_avg:95.17ms
step:252/1770 train_time:23019ms step_avg:95.12ms
step:253/1770 train_time:23115ms step_avg:95.12ms
step:254/1770 train_time:23211ms step_avg:95.13ms
step:255/1770 train_time:23306ms step_avg:95.13ms
step:256/1770 train_time:23401ms step_avg:95.13ms
step:257/1770 train_time:23497ms step_avg:95.13ms
step:258/1770 train_time:23592ms step_avg:95.13ms
step:259/1770 train_time:23687ms step_avg:95.13ms
step:260/1770 train_time:23782ms step_avg:95.13ms
step:261/1770 train_time:23877ms step_avg:95.13ms
step:262/1770 train_time:23973ms step_avg:95.13ms
step:263/1770 train_time:24069ms step_avg:95.14ms
step:264/1770 train_time:24165ms step_avg:95.14ms
step:265/1770 train_time:24261ms step_avg:95.14ms
step:266/1770 train_time:24356ms step_avg:95.14ms
step:267/1770 train_time:24453ms step_avg:95.15ms
step:268/1770 train_time:24548ms step_avg:95.15ms
step:269/1770 train_time:24645ms step_avg:95.15ms
step:270/1770 train_time:24740ms step_avg:95.15ms
step:271/1770 train_time:24836ms step_avg:95.16ms
step:272/1770 train_time:24932ms step_avg:95.16ms
step:273/1770 train_time:25028ms step_avg:95.17ms
step:274/1770 train_time:25124ms step_avg:95.17ms
step:275/1770 train_time:25219ms step_avg:95.17ms
step:276/1770 train_time:25315ms step_avg:95.17ms
step:277/1770 train_time:25411ms step_avg:95.17ms
step:278/1770 train_time:25507ms step_avg:95.17ms
step:279/1770 train_time:25603ms step_avg:95.18ms
step:280/1770 train_time:25698ms step_avg:95.18ms
step:281/1770 train_time:25794ms step_avg:95.18ms
step:282/1770 train_time:25890ms step_avg:95.18ms
step:283/1770 train_time:25986ms step_avg:95.19ms
step:284/1770 train_time:26081ms step_avg:95.19ms
step:285/1770 train_time:26177ms step_avg:95.19ms
step:286/1770 train_time:26273ms step_avg:95.19ms
step:287/1770 train_time:26369ms step_avg:95.19ms
step:288/1770 train_time:26465ms step_avg:95.20ms
step:289/1770 train_time:26560ms step_avg:95.20ms
step:290/1770 train_time:26656ms step_avg:95.20ms
step:291/1770 train_time:26752ms step_avg:95.20ms
step:292/1770 train_time:26849ms step_avg:95.21ms
step:293/1770 train_time:26945ms step_avg:95.21ms
step:294/1770 train_time:27041ms step_avg:95.21ms
step:295/1770 train_time:27136ms step_avg:95.21ms
step:296/1770 train_time:27232ms step_avg:95.22ms
step:297/1770 train_time:27328ms step_avg:95.22ms
step:298/1770 train_time:27424ms step_avg:95.22ms
step:299/1770 train_time:27520ms step_avg:95.23ms
step:300/1770 train_time:27617ms step_avg:95.23ms
step:301/1770 train_time:27712ms step_avg:95.23ms
step:302/1770 train_time:27809ms step_avg:95.23ms
step:303/1770 train_time:27904ms step_avg:95.24ms
step:304/1770 train_time:28004ms step_avg:95.25ms
step:305/1770 train_time:28097ms step_avg:95.24ms
step:306/1770 train_time:28193ms step_avg:95.25ms
step:307/1770 train_time:28289ms step_avg:95.25ms
step:308/1770 train_time:28385ms step_avg:95.25ms
step:309/1770 train_time:28480ms step_avg:95.25ms
step:310/1770 train_time:28576ms step_avg:95.25ms
step:311/1770 train_time:28673ms step_avg:95.26ms
step:312/1770 train_time:28769ms step_avg:95.26ms
step:313/1770 train_time:28865ms step_avg:95.26ms
step:314/1770 train_time:28961ms step_avg:95.27ms
step:315/1770 train_time:29057ms step_avg:95.27ms
step:316/1770 train_time:29154ms step_avg:95.27ms
step:317/1770 train_time:29250ms step_avg:95.28ms
step:318/1770 train_time:29346ms step_avg:95.28ms
step:319/1770 train_time:29442ms step_avg:95.28ms
step:320/1770 train_time:29538ms step_avg:95.28ms
step:321/1770 train_time:29634ms step_avg:95.29ms
step:322/1770 train_time:29730ms step_avg:95.29ms
step:323/1770 train_time:29826ms step_avg:95.29ms
step:324/1770 train_time:29922ms step_avg:95.29ms
step:325/1770 train_time:30019ms step_avg:95.30ms
step:326/1770 train_time:30114ms step_avg:95.30ms
step:327/1770 train_time:30210ms step_avg:95.30ms
step:328/1770 train_time:30306ms step_avg:95.30ms
step:329/1770 train_time:30402ms step_avg:95.30ms
step:330/1770 train_time:30497ms step_avg:95.30ms
step:331/1770 train_time:30593ms step_avg:95.31ms
step:332/1770 train_time:30690ms step_avg:95.31ms
step:333/1770 train_time:30785ms step_avg:95.31ms
step:334/1770 train_time:30881ms step_avg:95.31ms
step:335/1770 train_time:30976ms step_avg:95.31ms
step:336/1770 train_time:31072ms step_avg:95.31ms
step:337/1770 train_time:31168ms step_avg:95.31ms
step:338/1770 train_time:31264ms step_avg:95.32ms
step:339/1770 train_time:31359ms step_avg:95.32ms
step:340/1770 train_time:31455ms step_avg:95.32ms
step:341/1770 train_time:31550ms step_avg:95.32ms
step:342/1770 train_time:31646ms step_avg:95.32ms
step:343/1770 train_time:31742ms step_avg:95.32ms
step:344/1770 train_time:31838ms step_avg:95.32ms
step:345/1770 train_time:31934ms step_avg:95.32ms
step:346/1770 train_time:32029ms step_avg:95.33ms
step:347/1770 train_time:32125ms step_avg:95.33ms
step:348/1770 train_time:32221ms step_avg:95.33ms
step:349/1770 train_time:32316ms step_avg:95.33ms
step:350/1770 train_time:32413ms step_avg:95.33ms
step:351/1770 train_time:32508ms step_avg:95.33ms
step:352/1770 train_time:32603ms step_avg:95.33ms
step:353/1770 train_time:32699ms step_avg:95.33ms
step:354/1770 train_time:32795ms step_avg:95.33ms
step:355/1770 train_time:32891ms step_avg:95.34ms
step:356/1770 train_time:32987ms step_avg:95.34ms
step:357/1770 train_time:33082ms step_avg:95.34ms
step:358/1770 train_time:33178ms step_avg:95.34ms
step:359/1770 train_time:33273ms step_avg:95.34ms
step:360/1770 train_time:33369ms step_avg:95.34ms
step:361/1770 train_time:33465ms step_avg:95.34ms
step:362/1770 train_time:33561ms step_avg:95.34ms
step:363/1770 train_time:33656ms step_avg:95.34ms
step:364/1770 train_time:33753ms step_avg:95.35ms
step:365/1770 train_time:33849ms step_avg:95.35ms
step:366/1770 train_time:33945ms step_avg:95.35ms
step:367/1770 train_time:34040ms step_avg:95.35ms
step:368/1770 train_time:34136ms step_avg:95.35ms
step:369/1770 train_time:34231ms step_avg:95.35ms
step:370/1770 train_time:34327ms step_avg:95.35ms
step:371/1770 train_time:34422ms step_avg:95.35ms
step:372/1770 train_time:34518ms step_avg:95.35ms
step:373/1770 train_time:34614ms step_avg:95.36ms
step:374/1770 train_time:34710ms step_avg:95.36ms
step:375/1770 train_time:34805ms step_avg:95.36ms
step:375/1770 val_loss:3.9115 train_time:34899ms step_avg:95.61ms
step:376/1770 train_time:34921ms step_avg:95.41ms
step:377/1770 train_time:35002ms step_avg:95.37ms
step:378/1770 train_time:35099ms step_avg:95.38ms
step:379/1770 train_time:35195ms step_avg:95.38ms
step:380/1770 train_time:35291ms step_avg:95.38ms
step:381/1770 train_time:35386ms step_avg:95.38ms
step:382/1770 train_time:35482ms step_avg:95.38ms
step:383/1770 train_time:35578ms step_avg:95.38ms
step:384/1770 train_time:35673ms step_avg:95.38ms
step:385/1770 train_time:35769ms step_avg:95.38ms
step:386/1770 train_time:35865ms step_avg:95.38ms
step:387/1770 train_time:35960ms step_avg:95.39ms
step:388/1770 train_time:36056ms step_avg:95.39ms
step:389/1770 train_time:36152ms step_avg:95.39ms
step:390/1770 train_time:36247ms step_avg:95.39ms
step:391/1770 train_time:36343ms step_avg:95.39ms
step:392/1770 train_time:36439ms step_avg:95.39ms
step:393/1770 train_time:36535ms step_avg:95.39ms
step:394/1770 train_time:36630ms step_avg:95.39ms
step:395/1770 train_time:36726ms step_avg:95.39ms
step:396/1770 train_time:36824ms step_avg:95.40ms
step:397/1770 train_time:36921ms step_avg:95.40ms
step:398/1770 train_time:37019ms step_avg:95.41ms
step:399/1770 train_time:37117ms step_avg:95.42ms
step:400/1770 train_time:37214ms step_avg:95.42ms
step:401/1770 train_time:37312ms step_avg:95.43ms
step:402/1770 train_time:37410ms step_avg:95.43ms
step:403/1770 train_time:37507ms step_avg:95.44ms
step:404/1770 train_time:37605ms step_avg:95.45ms
step:405/1770 train_time:37703ms step_avg:95.45ms
step:406/1770 train_time:37801ms step_avg:95.46ms
step:407/1770 train_time:37899ms step_avg:95.46ms
step:408/1770 train_time:37996ms step_avg:95.47ms
step:409/1770 train_time:38094ms step_avg:95.47ms
step:410/1770 train_time:38191ms step_avg:95.48ms
step:411/1770 train_time:38288ms step_avg:95.48ms
step:412/1770 train_time:38386ms step_avg:95.49ms
step:413/1770 train_time:38484ms step_avg:95.49ms
step:414/1770 train_time:38582ms step_avg:95.50ms
step:415/1770 train_time:38680ms step_avg:95.51ms
step:416/1770 train_time:38778ms step_avg:95.51ms
step:417/1770 train_time:38875ms step_avg:95.52ms
step:418/1770 train_time:38973ms step_avg:95.52ms
step:419/1770 train_time:39069ms step_avg:95.52ms
step:420/1770 train_time:39167ms step_avg:95.53ms
step:421/1770 train_time:39265ms step_avg:95.54ms
step:422/1770 train_time:39362ms step_avg:95.54ms
step:423/1770 train_time:39461ms step_avg:95.55ms
step:424/1770 train_time:39558ms step_avg:95.55ms
step:425/1770 train_time:39656ms step_avg:95.56ms
step:426/1770 train_time:39754ms step_avg:95.56ms
step:427/1770 train_time:39851ms step_avg:95.57ms
step:428/1770 train_time:39949ms step_avg:95.57ms
step:429/1770 train_time:40046ms step_avg:95.58ms
step:430/1770 train_time:40144ms step_avg:95.58ms
step:431/1770 train_time:40242ms step_avg:95.59ms
step:432/1770 train_time:40340ms step_avg:95.59ms
step:433/1770 train_time:40438ms step_avg:95.60ms
step:434/1770 train_time:40536ms step_avg:95.60ms
step:435/1770 train_time:40633ms step_avg:95.61ms
step:436/1770 train_time:40731ms step_avg:95.61ms
step:437/1770 train_time:40828ms step_avg:95.62ms
step:438/1770 train_time:40926ms step_avg:95.62ms
step:439/1770 train_time:41024ms step_avg:95.63ms
step:440/1770 train_time:41122ms step_avg:95.63ms
step:441/1770 train_time:41219ms step_avg:95.64ms
step:442/1770 train_time:41317ms step_avg:95.64ms
step:443/1770 train_time:41414ms step_avg:95.65ms
step:444/1770 train_time:41512ms step_avg:95.65ms
step:445/1770 train_time:41614ms step_avg:95.67ms
step:446/1770 train_time:41707ms step_avg:95.66ms
step:447/1770 train_time:41805ms step_avg:95.66ms
step:448/1770 train_time:41903ms step_avg:95.67ms
step:449/1770 train_time:42001ms step_avg:95.67ms
step:450/1770 train_time:42099ms step_avg:95.68ms
step:451/1770 train_time:42196ms step_avg:95.68ms
step:452/1770 train_time:42294ms step_avg:95.69ms
step:453/1770 train_time:42391ms step_avg:95.69ms
step:454/1770 train_time:42488ms step_avg:95.69ms
step:455/1770 train_time:42586ms step_avg:95.70ms
step:456/1770 train_time:42684ms step_avg:95.70ms
step:457/1770 train_time:42782ms step_avg:95.71ms
step:458/1770 train_time:42880ms step_avg:95.71ms
step:459/1770 train_time:42978ms step_avg:95.72ms
step:460/1770 train_time:43075ms step_avg:95.72ms
step:461/1770 train_time:43173ms step_avg:95.73ms
step:462/1770 train_time:43270ms step_avg:95.73ms
step:463/1770 train_time:43367ms step_avg:95.73ms
step:464/1770 train_time:43465ms step_avg:95.74ms
step:465/1770 train_time:43563ms step_avg:95.74ms
step:466/1770 train_time:43661ms step_avg:95.75ms
step:467/1770 train_time:43759ms step_avg:95.75ms
step:468/1770 train_time:43857ms step_avg:95.76ms
step:469/1770 train_time:43955ms step_avg:95.76ms
step:470/1770 train_time:44052ms step_avg:95.77ms
step:471/1770 train_time:44149ms step_avg:95.77ms
step:472/1770 train_time:44247ms step_avg:95.77ms
step:473/1770 train_time:44344ms step_avg:95.78ms
step:474/1770 train_time:44442ms step_avg:95.78ms
step:475/1770 train_time:44540ms step_avg:95.78ms
step:476/1770 train_time:44637ms step_avg:95.79ms
step:477/1770 train_time:44735ms step_avg:95.79ms
step:478/1770 train_time:44832ms step_avg:95.80ms
step:479/1770 train_time:44930ms step_avg:95.80ms
step:480/1770 train_time:45027ms step_avg:95.80ms
step:481/1770 train_time:45124ms step_avg:95.81ms
step:482/1770 train_time:45222ms step_avg:95.81ms
step:483/1770 train_time:45320ms step_avg:95.81ms
step:484/1770 train_time:45421ms step_avg:95.83ms
step:485/1770 train_time:45515ms step_avg:95.82ms
step:486/1770 train_time:45613ms step_avg:95.83ms
step:487/1770 train_time:45710ms step_avg:95.83ms
step:488/1770 train_time:45808ms step_avg:95.83ms
step:489/1770 train_time:45905ms step_avg:95.84ms
step:490/1770 train_time:46003ms step_avg:95.84ms
step:491/1770 train_time:46101ms step_avg:95.84ms
step:492/1770 train_time:46199ms step_avg:95.85ms
step:493/1770 train_time:46297ms step_avg:95.85ms
step:494/1770 train_time:46394ms step_avg:95.86ms
step:495/1770 train_time:46492ms step_avg:95.86ms
step:496/1770 train_time:46589ms step_avg:95.86ms
step:497/1770 train_time:46687ms step_avg:95.87ms
step:498/1770 train_time:46785ms step_avg:95.87ms
step:499/1770 train_time:46883ms step_avg:95.88ms
step:500/1770 train_time:46981ms step_avg:95.88ms
step:500/1770 val_loss:3.7591 train_time:47077ms step_avg:96.08ms
step:501/1770 train_time:47098ms step_avg:95.92ms
step:502/1770 train_time:47185ms step_avg:95.91ms
step:503/1770 train_time:47285ms step_avg:95.91ms
step:504/1770 train_time:47384ms step_avg:95.92ms
step:505/1770 train_time:47482ms step_avg:95.92ms
step:506/1770 train_time:47579ms step_avg:95.93ms
step:507/1770 train_time:47677ms step_avg:95.93ms
step:508/1770 train_time:47774ms step_avg:95.93ms
step:509/1770 train_time:47872ms step_avg:95.94ms
step:510/1770 train_time:47970ms step_avg:95.94ms
step:511/1770 train_time:48067ms step_avg:95.94ms
step:512/1770 train_time:48164ms step_avg:95.94ms
step:513/1770 train_time:48262ms step_avg:95.95ms
step:514/1770 train_time:48360ms step_avg:95.95ms
step:515/1770 train_time:48458ms step_avg:95.96ms
step:516/1770 train_time:48556ms step_avg:95.96ms
step:517/1770 train_time:48654ms step_avg:95.96ms
step:518/1770 train_time:48752ms step_avg:95.97ms
step:519/1770 train_time:48849ms step_avg:95.97ms
step:520/1770 train_time:48946ms step_avg:95.97ms
step:521/1770 train_time:49044ms step_avg:95.98ms
step:522/1770 train_time:49142ms step_avg:95.98ms
step:523/1770 train_time:49240ms step_avg:95.98ms
step:524/1770 train_time:49338ms step_avg:95.99ms
step:525/1770 train_time:49435ms step_avg:95.99ms
step:526/1770 train_time:49533ms step_avg:95.99ms
step:527/1770 train_time:49631ms step_avg:96.00ms
step:528/1770 train_time:49728ms step_avg:96.00ms
step:529/1770 train_time:49826ms step_avg:96.00ms
step:530/1770 train_time:49923ms step_avg:96.01ms
step:531/1770 train_time:50022ms step_avg:96.01ms
step:532/1770 train_time:50120ms step_avg:96.01ms
step:533/1770 train_time:50218ms step_avg:96.02ms
step:534/1770 train_time:50316ms step_avg:96.02ms
step:535/1770 train_time:50415ms step_avg:96.03ms
step:536/1770 train_time:50513ms step_avg:96.03ms
step:537/1770 train_time:50611ms step_avg:96.04ms
step:538/1770 train_time:50709ms step_avg:96.04ms
step:539/1770 train_time:50807ms step_avg:96.04ms
step:540/1770 train_time:50905ms step_avg:96.05ms
step:541/1770 train_time:51003ms step_avg:96.05ms
step:542/1770 train_time:51101ms step_avg:96.06ms
step:543/1770 train_time:51200ms step_avg:96.06ms
step:544/1770 train_time:51298ms step_avg:96.06ms
step:545/1770 train_time:51396ms step_avg:96.07ms
step:546/1770 train_time:51495ms step_avg:96.07ms
step:547/1770 train_time:51592ms step_avg:96.08ms
step:548/1770 train_time:51690ms step_avg:96.08ms
step:549/1770 train_time:51788ms step_avg:96.08ms
step:550/1770 train_time:51886ms step_avg:96.08ms
step:551/1770 train_time:51984ms step_avg:96.09ms
step:552/1770 train_time:52082ms step_avg:96.09ms
step:553/1770 train_time:52180ms step_avg:96.10ms
step:554/1770 train_time:52278ms step_avg:96.10ms
step:555/1770 train_time:52376ms step_avg:96.10ms
step:556/1770 train_time:52474ms step_avg:96.11ms
step:557/1770 train_time:52572ms step_avg:96.11ms
step:558/1770 train_time:52670ms step_avg:96.11ms
step:559/1770 train_time:52767ms step_avg:96.11ms
step:560/1770 train_time:52865ms step_avg:96.12ms
step:561/1770 train_time:52963ms step_avg:96.12ms
step:562/1770 train_time:53061ms step_avg:96.13ms
step:563/1770 train_time:53160ms step_avg:96.13ms
step:564/1770 train_time:53258ms step_avg:96.13ms
step:565/1770 train_time:53356ms step_avg:96.14ms
step:566/1770 train_time:53454ms step_avg:96.14ms
step:567/1770 train_time:53552ms step_avg:96.14ms
step:568/1770 train_time:53650ms step_avg:96.15ms
step:569/1770 train_time:53748ms step_avg:96.15ms
step:570/1770 train_time:53846ms step_avg:96.15ms
step:571/1770 train_time:53944ms step_avg:96.16ms
step:572/1770 train_time:54042ms step_avg:96.16ms
step:573/1770 train_time:54140ms step_avg:96.16ms
step:574/1770 train_time:54239ms step_avg:96.17ms
step:575/1770 train_time:54337ms step_avg:96.17ms
step:576/1770 train_time:54435ms step_avg:96.17ms
step:577/1770 train_time:54532ms step_avg:96.18ms
step:578/1770 train_time:54631ms step_avg:96.18ms
step:579/1770 train_time:54729ms step_avg:96.18ms
step:580/1770 train_time:54827ms step_avg:96.19ms
step:581/1770 train_time:54925ms step_avg:96.19ms
step:582/1770 train_time:55023ms step_avg:96.19ms
step:583/1770 train_time:55121ms step_avg:96.20ms
step:584/1770 train_time:55222ms step_avg:96.21ms
step:585/1770 train_time:55317ms step_avg:96.20ms
step:586/1770 train_time:55415ms step_avg:96.21ms
step:587/1770 train_time:55513ms step_avg:96.21ms
step:588/1770 train_time:55611ms step_avg:96.21ms
step:589/1770 train_time:55708ms step_avg:96.21ms
step:590/1770 train_time:55805ms step_avg:96.22ms
step:591/1770 train_time:55903ms step_avg:96.22ms
step:592/1770 train_time:56002ms step_avg:96.22ms
step:593/1770 train_time:56100ms step_avg:96.23ms
step:594/1770 train_time:56199ms step_avg:96.23ms
step:595/1770 train_time:56297ms step_avg:96.23ms
step:596/1770 train_time:56395ms step_avg:96.24ms
step:597/1770 train_time:56493ms step_avg:96.24ms
step:598/1770 train_time:56591ms step_avg:96.24ms
step:599/1770 train_time:56689ms step_avg:96.25ms
step:600/1770 train_time:56787ms step_avg:96.25ms
step:601/1770 train_time:56884ms step_avg:96.25ms
step:602/1770 train_time:56983ms step_avg:96.25ms
step:603/1770 train_time:57081ms step_avg:96.26ms
step:604/1770 train_time:57179ms step_avg:96.26ms
step:605/1770 train_time:57278ms step_avg:96.27ms
step:606/1770 train_time:57376ms step_avg:96.27ms
step:607/1770 train_time:57474ms step_avg:96.27ms
step:608/1770 train_time:57572ms step_avg:96.27ms
step:609/1770 train_time:57669ms step_avg:96.28ms
step:610/1770 train_time:57768ms step_avg:96.28ms
step:611/1770 train_time:57865ms step_avg:96.28ms
step:612/1770 train_time:57964ms step_avg:96.29ms
step:613/1770 train_time:58062ms step_avg:96.29ms
step:614/1770 train_time:58161ms step_avg:96.29ms
step:615/1770 train_time:58259ms step_avg:96.30ms
step:616/1770 train_time:58357ms step_avg:96.30ms
step:617/1770 train_time:58455ms step_avg:96.30ms
step:618/1770 train_time:58553ms step_avg:96.30ms
step:619/1770 train_time:58651ms step_avg:96.31ms
step:620/1770 train_time:58748ms step_avg:96.31ms
step:621/1770 train_time:58846ms step_avg:96.31ms
step:622/1770 train_time:58944ms step_avg:96.31ms
step:623/1770 train_time:59042ms step_avg:96.32ms
step:624/1770 train_time:59141ms step_avg:96.32ms
step:625/1770 train_time:59239ms step_avg:96.32ms
step:625/1770 val_loss:3.6720 train_time:59335ms step_avg:96.48ms
step:626/1770 train_time:59356ms step_avg:96.36ms
step:627/1770 train_time:59442ms step_avg:96.34ms
step:628/1770 train_time:59542ms step_avg:96.35ms
step:629/1770 train_time:59641ms step_avg:96.35ms
step:630/1770 train_time:59739ms step_avg:96.35ms
step:631/1770 train_time:59836ms step_avg:96.35ms
step:632/1770 train_time:59934ms step_avg:96.36ms
step:633/1770 train_time:60032ms step_avg:96.36ms
step:634/1770 train_time:60131ms step_avg:96.36ms
step:635/1770 train_time:60229ms step_avg:96.37ms
step:636/1770 train_time:60327ms step_avg:96.37ms
step:637/1770 train_time:60426ms step_avg:96.37ms
step:638/1770 train_time:60524ms step_avg:96.38ms
step:639/1770 train_time:60624ms step_avg:96.38ms
step:640/1770 train_time:60722ms step_avg:96.38ms
step:641/1770 train_time:60820ms step_avg:96.39ms
step:642/1770 train_time:60918ms step_avg:96.39ms
step:643/1770 train_time:61019ms step_avg:96.40ms
step:644/1770 train_time:61114ms step_avg:96.39ms
step:645/1770 train_time:61212ms step_avg:96.40ms
step:646/1770 train_time:61311ms step_avg:96.40ms
step:647/1770 train_time:61409ms step_avg:96.40ms
step:648/1770 train_time:61507ms step_avg:96.41ms
step:649/1770 train_time:61605ms step_avg:96.41ms
step:650/1770 train_time:61703ms step_avg:96.41ms
step:651/1770 train_time:61801ms step_avg:96.41ms
step:652/1770 train_time:61899ms step_avg:96.42ms
step:653/1770 train_time:61996ms step_avg:96.42ms
step:654/1770 train_time:62094ms step_avg:96.42ms
step:655/1770 train_time:62192ms step_avg:96.42ms
step:656/1770 train_time:62290ms step_avg:96.42ms
step:657/1770 train_time:62389ms step_avg:96.43ms
step:658/1770 train_time:62488ms step_avg:96.43ms
step:659/1770 train_time:62588ms step_avg:96.44ms
step:660/1770 train_time:62689ms step_avg:96.44ms
step:661/1770 train_time:62790ms step_avg:96.45ms
step:662/1770 train_time:62893ms step_avg:96.46ms
step:663/1770 train_time:62994ms step_avg:96.47ms
step:664/1770 train_time:63095ms step_avg:96.47ms
step:665/1770 train_time:63194ms step_avg:96.48ms
step:666/1770 train_time:63294ms step_avg:96.48ms
step:667/1770 train_time:63394ms step_avg:96.49ms
step:668/1770 train_time:63493ms step_avg:96.49ms
step:669/1770 train_time:63593ms step_avg:96.50ms
step:670/1770 train_time:63692ms step_avg:96.50ms
step:671/1770 train_time:63792ms step_avg:96.51ms
step:672/1770 train_time:63892ms step_avg:96.51ms
step:673/1770 train_time:63992ms step_avg:96.52ms
step:674/1770 train_time:64092ms step_avg:96.52ms
step:675/1770 train_time:64192ms step_avg:96.53ms
step:676/1770 train_time:64292ms step_avg:96.53ms
step:677/1770 train_time:64392ms step_avg:96.54ms
step:678/1770 train_time:64492ms step_avg:96.55ms
step:679/1770 train_time:64592ms step_avg:96.55ms
step:680/1770 train_time:64692ms step_avg:96.55ms
step:681/1770 train_time:64791ms step_avg:96.56ms
step:682/1770 train_time:64891ms step_avg:96.56ms
step:683/1770 train_time:64991ms step_avg:96.57ms
step:684/1770 train_time:65091ms step_avg:96.57ms
step:685/1770 train_time:65192ms step_avg:96.58ms
step:686/1770 train_time:65291ms step_avg:96.58ms
step:687/1770 train_time:65391ms step_avg:96.59ms
step:688/1770 train_time:65491ms step_avg:96.59ms
step:689/1770 train_time:65591ms step_avg:96.60ms
step:690/1770 train_time:65692ms step_avg:96.61ms
step:691/1770 train_time:65792ms step_avg:96.61ms
step:692/1770 train_time:65892ms step_avg:96.62ms
step:693/1770 train_time:65992ms step_avg:96.62ms
step:694/1770 train_time:66092ms step_avg:96.63ms
step:695/1770 train_time:66192ms step_avg:96.63ms
step:696/1770 train_time:66292ms step_avg:96.64ms
step:697/1770 train_time:66392ms step_avg:96.64ms
step:698/1770 train_time:66492ms step_avg:96.65ms
step:699/1770 train_time:66592ms step_avg:96.65ms
step:700/1770 train_time:66693ms step_avg:96.66ms
step:701/1770 train_time:66792ms step_avg:96.66ms
step:702/1770 train_time:66892ms step_avg:96.66ms
step:703/1770 train_time:66992ms step_avg:96.67ms
step:704/1770 train_time:67092ms step_avg:96.67ms
step:705/1770 train_time:67191ms step_avg:96.68ms
step:706/1770 train_time:67292ms step_avg:96.68ms
step:707/1770 train_time:67392ms step_avg:96.69ms
step:708/1770 train_time:67492ms step_avg:96.69ms
step:709/1770 train_time:67592ms step_avg:96.70ms
step:710/1770 train_time:67692ms step_avg:96.70ms
step:711/1770 train_time:67792ms step_avg:96.71ms
step:712/1770 train_time:67893ms step_avg:96.71ms
step:713/1770 train_time:67993ms step_avg:96.72ms
step:714/1770 train_time:68092ms step_avg:96.72ms
step:715/1770 train_time:68192ms step_avg:96.73ms
step:716/1770 train_time:68292ms step_avg:96.73ms
step:717/1770 train_time:68392ms step_avg:96.74ms
step:718/1770 train_time:68492ms step_avg:96.74ms
step:719/1770 train_time:68592ms step_avg:96.75ms
step:720/1770 train_time:68692ms step_avg:96.75ms
step:721/1770 train_time:68792ms step_avg:96.75ms
step:722/1770 train_time:68892ms step_avg:96.76ms
step:723/1770 train_time:68992ms step_avg:96.76ms
step:724/1770 train_time:69092ms step_avg:96.77ms
step:725/1770 train_time:69192ms step_avg:96.77ms
step:726/1770 train_time:69292ms step_avg:96.78ms
step:727/1770 train_time:69392ms step_avg:96.78ms
step:728/1770 train_time:69492ms step_avg:96.79ms
step:729/1770 train_time:69593ms step_avg:96.79ms
step:730/1770 train_time:69692ms step_avg:96.79ms
step:731/1770 train_time:69791ms step_avg:96.80ms
step:732/1770 train_time:69891ms step_avg:96.80ms
step:733/1770 train_time:69991ms step_avg:96.81ms
step:734/1770 train_time:70091ms step_avg:96.81ms
step:735/1770 train_time:70192ms step_avg:96.82ms
step:736/1770 train_time:70292ms step_avg:96.82ms
step:737/1770 train_time:70392ms step_avg:96.82ms
step:738/1770 train_time:70492ms step_avg:96.83ms
step:739/1770 train_time:70592ms step_avg:96.83ms
step:740/1770 train_time:70693ms step_avg:96.84ms
step:741/1770 train_time:70794ms step_avg:96.85ms
step:742/1770 train_time:70893ms step_avg:96.85ms
step:743/1770 train_time:70993ms step_avg:96.85ms
step:744/1770 train_time:71092ms step_avg:96.86ms
step:745/1770 train_time:71192ms step_avg:96.86ms
step:746/1770 train_time:71292ms step_avg:96.86ms
step:747/1770 train_time:71392ms step_avg:96.87ms
step:748/1770 train_time:71491ms step_avg:96.87ms
step:749/1770 train_time:71591ms step_avg:96.88ms
step:750/1770 train_time:71692ms step_avg:96.88ms
step:750/1770 val_loss:3.6045 train_time:71790ms step_avg:97.01ms
step:751/1770 train_time:71811ms step_avg:96.91ms
step:752/1770 train_time:71897ms step_avg:96.90ms
step:753/1770 train_time:71997ms step_avg:96.90ms
step:754/1770 train_time:72097ms step_avg:96.90ms
step:755/1770 train_time:72197ms step_avg:96.91ms
step:756/1770 train_time:72298ms step_avg:96.91ms
step:757/1770 train_time:72397ms step_avg:96.92ms
step:758/1770 train_time:72496ms step_avg:96.92ms
step:759/1770 train_time:72596ms step_avg:96.92ms
step:760/1770 train_time:72695ms step_avg:96.93ms
step:761/1770 train_time:72795ms step_avg:96.93ms
step:762/1770 train_time:72896ms step_avg:96.94ms
step:763/1770 train_time:72997ms step_avg:96.94ms
step:764/1770 train_time:73098ms step_avg:96.95ms
step:765/1770 train_time:73198ms step_avg:96.95ms
step:766/1770 train_time:73298ms step_avg:96.95ms
step:767/1770 train_time:73398ms step_avg:96.96ms
step:768/1770 train_time:73497ms step_avg:96.96ms
step:769/1770 train_time:73596ms step_avg:96.96ms
step:770/1770 train_time:73696ms step_avg:96.97ms
step:771/1770 train_time:73796ms step_avg:96.97ms
step:772/1770 train_time:73898ms step_avg:96.98ms
step:773/1770 train_time:73999ms step_avg:96.98ms
step:774/1770 train_time:74101ms step_avg:96.99ms
step:775/1770 train_time:74201ms step_avg:96.99ms
step:776/1770 train_time:74300ms step_avg:97.00ms
step:777/1770 train_time:74400ms step_avg:97.00ms
step:778/1770 train_time:74500ms step_avg:97.01ms
step:779/1770 train_time:74599ms step_avg:97.01ms
step:780/1770 train_time:74700ms step_avg:97.01ms
step:781/1770 train_time:74800ms step_avg:97.02ms
step:782/1770 train_time:74899ms step_avg:97.02ms
step:783/1770 train_time:75001ms step_avg:97.03ms
step:784/1770 train_time:75102ms step_avg:97.03ms
step:785/1770 train_time:75202ms step_avg:97.03ms
step:786/1770 train_time:75302ms step_avg:97.04ms
step:787/1770 train_time:75402ms step_avg:97.04ms
step:788/1770 train_time:75503ms step_avg:97.05ms
step:789/1770 train_time:75604ms step_avg:97.05ms
step:790/1770 train_time:75705ms step_avg:97.06ms
step:791/1770 train_time:75806ms step_avg:97.06ms
step:792/1770 train_time:75907ms step_avg:97.07ms
step:793/1770 train_time:76007ms step_avg:97.07ms
step:794/1770 train_time:76107ms step_avg:97.08ms
step:795/1770 train_time:76206ms step_avg:97.08ms
step:796/1770 train_time:76306ms step_avg:97.08ms
step:797/1770 train_time:76406ms step_avg:97.09ms
step:798/1770 train_time:76506ms step_avg:97.09ms
step:799/1770 train_time:76606ms step_avg:97.09ms
step:800/1770 train_time:76706ms step_avg:97.10ms
step:801/1770 train_time:76806ms step_avg:97.10ms
step:802/1770 train_time:76906ms step_avg:97.10ms
step:803/1770 train_time:77006ms step_avg:97.11ms
step:804/1770 train_time:77106ms step_avg:97.11ms
step:805/1770 train_time:77206ms step_avg:97.11ms
step:806/1770 train_time:77306ms step_avg:97.12ms
step:807/1770 train_time:77406ms step_avg:97.12ms
step:808/1770 train_time:77506ms step_avg:97.13ms
step:809/1770 train_time:77606ms step_avg:97.13ms
step:810/1770 train_time:77706ms step_avg:97.13ms
step:811/1770 train_time:77806ms step_avg:97.14ms
step:812/1770 train_time:77906ms step_avg:97.14ms
step:813/1770 train_time:78006ms step_avg:97.14ms
step:814/1770 train_time:78107ms step_avg:97.15ms
step:815/1770 train_time:78206ms step_avg:97.15ms
step:816/1770 train_time:78306ms step_avg:97.15ms
step:817/1770 train_time:78406ms step_avg:97.16ms
step:818/1770 train_time:78506ms step_avg:97.16ms
step:819/1770 train_time:78606ms step_avg:97.16ms
step:820/1770 train_time:78706ms step_avg:97.17ms
step:821/1770 train_time:78806ms step_avg:97.17ms
step:822/1770 train_time:78907ms step_avg:97.18ms
step:823/1770 train_time:79007ms step_avg:97.18ms
step:824/1770 train_time:79107ms step_avg:97.18ms
step:825/1770 train_time:79207ms step_avg:97.19ms
step:826/1770 train_time:79307ms step_avg:97.19ms
step:827/1770 train_time:79407ms step_avg:97.19ms
step:828/1770 train_time:79507ms step_avg:97.20ms
step:829/1770 train_time:79607ms step_avg:97.20ms
step:830/1770 train_time:79707ms step_avg:97.20ms
step:831/1770 train_time:79806ms step_avg:97.21ms
step:832/1770 train_time:79906ms step_avg:97.21ms
step:833/1770 train_time:80006ms step_avg:97.21ms
step:834/1770 train_time:80106ms step_avg:97.22ms
step:835/1770 train_time:80206ms step_avg:97.22ms
step:836/1770 train_time:80306ms step_avg:97.22ms
step:837/1770 train_time:80406ms step_avg:97.23ms
step:838/1770 train_time:80506ms step_avg:97.23ms
step:839/1770 train_time:80606ms step_avg:97.23ms
step:840/1770 train_time:80706ms step_avg:97.24ms
step:841/1770 train_time:80807ms step_avg:97.24ms
step:842/1770 train_time:80907ms step_avg:97.24ms
step:843/1770 train_time:81006ms step_avg:97.25ms
step:844/1770 train_time:81107ms step_avg:97.25ms
step:845/1770 train_time:81206ms step_avg:97.25ms
step:846/1770 train_time:81306ms step_avg:97.26ms
step:847/1770 train_time:81405ms step_avg:97.26ms
step:848/1770 train_time:81506ms step_avg:97.26ms
step:849/1770 train_time:81606ms step_avg:97.27ms
step:850/1770 train_time:81706ms step_avg:97.27ms
step:851/1770 train_time:81806ms step_avg:97.27ms
step:852/1770 train_time:81907ms step_avg:97.28ms
step:853/1770 train_time:82006ms step_avg:97.28ms
step:854/1770 train_time:82106ms step_avg:97.28ms
step:855/1770 train_time:82206ms step_avg:97.29ms
step:856/1770 train_time:82306ms step_avg:97.29ms
step:857/1770 train_time:82406ms step_avg:97.29ms
step:858/1770 train_time:82506ms step_avg:97.29ms
step:859/1770 train_time:82606ms step_avg:97.30ms
step:860/1770 train_time:82706ms step_avg:97.30ms
step:861/1770 train_time:82806ms step_avg:97.30ms
step:862/1770 train_time:82906ms step_avg:97.31ms
step:863/1770 train_time:83006ms step_avg:97.31ms
step:864/1770 train_time:83106ms step_avg:97.31ms
step:865/1770 train_time:83207ms step_avg:97.32ms
step:866/1770 train_time:83307ms step_avg:97.32ms
step:867/1770 train_time:83407ms step_avg:97.32ms
step:868/1770 train_time:83507ms step_avg:97.33ms
step:869/1770 train_time:83607ms step_avg:97.33ms
step:870/1770 train_time:83707ms step_avg:97.33ms
step:871/1770 train_time:83806ms step_avg:97.34ms
step:872/1770 train_time:83906ms step_avg:97.34ms
step:873/1770 train_time:84006ms step_avg:97.34ms
step:874/1770 train_time:84106ms step_avg:97.34ms
step:875/1770 train_time:84206ms step_avg:97.35ms
step:875/1770 val_loss:3.5544 train_time:84304ms step_avg:97.46ms
step:876/1770 train_time:84325ms step_avg:97.37ms
step:877/1770 train_time:84411ms step_avg:97.36ms
step:878/1770 train_time:84512ms step_avg:97.36ms
step:879/1770 train_time:84612ms step_avg:97.37ms
step:880/1770 train_time:84712ms step_avg:97.37ms
step:881/1770 train_time:84812ms step_avg:97.37ms
step:882/1770 train_time:84912ms step_avg:97.38ms
step:883/1770 train_time:85011ms step_avg:97.38ms
step:884/1770 train_time:85112ms step_avg:97.38ms
step:885/1770 train_time:85211ms step_avg:97.38ms
step:886/1770 train_time:85311ms step_avg:97.39ms
step:887/1770 train_time:85412ms step_avg:97.39ms
step:888/1770 train_time:85512ms step_avg:97.39ms
step:889/1770 train_time:85613ms step_avg:97.40ms
step:890/1770 train_time:85713ms step_avg:97.40ms
step:891/1770 train_time:85814ms step_avg:97.40ms
step:892/1770 train_time:85914ms step_avg:97.41ms
step:893/1770 train_time:86014ms step_avg:97.41ms
step:894/1770 train_time:86115ms step_avg:97.41ms
step:895/1770 train_time:86216ms step_avg:97.42ms
step:896/1770 train_time:86317ms step_avg:97.42ms
step:897/1770 train_time:86417ms step_avg:97.43ms
step:898/1770 train_time:86518ms step_avg:97.43ms
step:899/1770 train_time:86618ms step_avg:97.43ms
step:900/1770 train_time:86718ms step_avg:97.44ms
step:901/1770 train_time:86818ms step_avg:97.44ms
step:902/1770 train_time:86919ms step_avg:97.44ms
step:903/1770 train_time:87019ms step_avg:97.45ms
step:904/1770 train_time:87119ms step_avg:97.45ms
step:905/1770 train_time:87219ms step_avg:97.45ms
step:906/1770 train_time:87319ms step_avg:97.45ms
step:907/1770 train_time:87419ms step_avg:97.46ms
step:908/1770 train_time:87519ms step_avg:97.46ms
step:909/1770 train_time:87619ms step_avg:97.46ms
step:910/1770 train_time:87719ms step_avg:97.47ms
step:911/1770 train_time:87819ms step_avg:97.47ms
step:912/1770 train_time:87919ms step_avg:97.47ms
step:913/1770 train_time:88019ms step_avg:97.47ms
step:914/1770 train_time:88119ms step_avg:97.48ms
step:915/1770 train_time:88219ms step_avg:97.48ms
step:916/1770 train_time:88318ms step_avg:97.48ms
step:917/1770 train_time:88418ms step_avg:97.48ms
step:918/1770 train_time:88518ms step_avg:97.49ms
step:919/1770 train_time:88618ms step_avg:97.49ms
step:920/1770 train_time:88720ms step_avg:97.49ms
step:921/1770 train_time:88822ms step_avg:97.50ms
step:922/1770 train_time:88922ms step_avg:97.50ms
step:923/1770 train_time:89023ms step_avg:97.51ms
step:924/1770 train_time:89124ms step_avg:97.51ms
step:925/1770 train_time:89224ms step_avg:97.51ms
step:926/1770 train_time:89326ms step_avg:97.52ms
step:927/1770 train_time:89428ms step_avg:97.52ms
step:928/1770 train_time:89530ms step_avg:97.53ms
step:929/1770 train_time:89632ms step_avg:97.53ms
step:930/1770 train_time:89734ms step_avg:97.54ms
step:931/1770 train_time:89835ms step_avg:97.54ms
step:932/1770 train_time:89937ms step_avg:97.55ms
step:933/1770 train_time:90038ms step_avg:97.55ms
step:934/1770 train_time:90140ms step_avg:97.55ms
step:935/1770 train_time:90241ms step_avg:97.56ms
step:936/1770 train_time:90342ms step_avg:97.56ms
step:937/1770 train_time:90443ms step_avg:97.56ms
step:938/1770 train_time:90544ms step_avg:97.57ms
step:939/1770 train_time:90645ms step_avg:97.57ms
step:940/1770 train_time:90747ms step_avg:97.58ms
step:941/1770 train_time:90848ms step_avg:97.58ms
step:942/1770 train_time:90950ms step_avg:97.59ms
step:943/1770 train_time:91053ms step_avg:97.59ms
step:944/1770 train_time:91155ms step_avg:97.60ms
step:945/1770 train_time:91256ms step_avg:97.60ms
step:946/1770 train_time:91358ms step_avg:97.61ms
step:947/1770 train_time:91460ms step_avg:97.61ms
step:948/1770 train_time:91561ms step_avg:97.61ms
step:949/1770 train_time:91663ms step_avg:97.62ms
step:950/1770 train_time:91764ms step_avg:97.62ms
step:951/1770 train_time:91866ms step_avg:97.63ms
step:952/1770 train_time:91967ms step_avg:97.63ms
step:953/1770 train_time:92069ms step_avg:97.63ms
step:954/1770 train_time:92171ms step_avg:97.64ms
step:955/1770 train_time:92273ms step_avg:97.64ms
step:956/1770 train_time:92375ms step_avg:97.65ms
step:957/1770 train_time:92477ms step_avg:97.65ms
step:958/1770 train_time:92578ms step_avg:97.66ms
step:959/1770 train_time:92680ms step_avg:97.66ms
step:960/1770 train_time:92780ms step_avg:97.66ms
step:961/1770 train_time:92881ms step_avg:97.67ms
step:962/1770 train_time:92983ms step_avg:97.67ms
step:963/1770 train_time:93084ms step_avg:97.67ms
step:964/1770 train_time:93185ms step_avg:97.68ms
step:965/1770 train_time:93287ms step_avg:97.68ms
step:966/1770 train_time:93389ms step_avg:97.69ms
step:967/1770 train_time:93490ms step_avg:97.69ms
step:968/1770 train_time:93592ms step_avg:97.69ms
step:969/1770 train_time:93694ms step_avg:97.70ms
step:970/1770 train_time:93796ms step_avg:97.70ms
step:971/1770 train_time:93897ms step_avg:97.71ms
step:972/1770 train_time:93999ms step_avg:97.71ms
step:973/1770 train_time:94101ms step_avg:97.72ms
step:974/1770 train_time:94202ms step_avg:97.72ms
step:975/1770 train_time:94303ms step_avg:97.72ms
step:976/1770 train_time:94404ms step_avg:97.73ms
step:977/1770 train_time:94506ms step_avg:97.73ms
step:978/1770 train_time:94607ms step_avg:97.73ms
step:979/1770 train_time:94709ms step_avg:97.74ms
step:980/1770 train_time:94811ms step_avg:97.74ms
step:981/1770 train_time:94912ms step_avg:97.75ms
step:982/1770 train_time:95015ms step_avg:97.75ms
step:983/1770 train_time:95117ms step_avg:97.76ms
step:984/1770 train_time:95219ms step_avg:97.76ms
step:985/1770 train_time:95320ms step_avg:97.76ms
step:986/1770 train_time:95421ms step_avg:97.77ms
step:987/1770 train_time:95522ms step_avg:97.77ms
step:988/1770 train_time:95623ms step_avg:97.77ms
step:989/1770 train_time:95725ms step_avg:97.78ms
step:990/1770 train_time:95827ms step_avg:97.78ms
step:991/1770 train_time:95928ms step_avg:97.79ms
step:992/1770 train_time:96030ms step_avg:97.79ms
step:993/1770 train_time:96132ms step_avg:97.79ms
step:994/1770 train_time:96234ms step_avg:97.80ms
step:995/1770 train_time:96335ms step_avg:97.80ms
step:996/1770 train_time:96437ms step_avg:97.81ms
step:997/1770 train_time:96538ms step_avg:97.81ms
step:998/1770 train_time:96640ms step_avg:97.81ms
step:999/1770 train_time:96742ms step_avg:97.82ms
step:1000/1770 train_time:96843ms step_avg:97.82ms
step:1000/1770 val_loss:3.5150 train_time:96942ms step_avg:97.92ms
step:1001/1770 train_time:96963ms step_avg:97.84ms
step:1002/1770 train_time:97052ms step_avg:97.83ms
step:1003/1770 train_time:97155ms step_avg:97.84ms
step:1004/1770 train_time:97256ms step_avg:97.84ms
step:1005/1770 train_time:97357ms step_avg:97.85ms
step:1006/1770 train_time:97458ms step_avg:97.85ms
step:1007/1770 train_time:97559ms step_avg:97.85ms
step:1008/1770 train_time:97660ms step_avg:97.86ms
step:1009/1770 train_time:97761ms step_avg:97.86ms
step:1010/1770 train_time:97862ms step_avg:97.86ms
step:1011/1770 train_time:97964ms step_avg:97.87ms
step:1012/1770 train_time:98066ms step_avg:97.87ms
step:1013/1770 train_time:98167ms step_avg:97.87ms
step:1014/1770 train_time:98269ms step_avg:97.88ms
step:1015/1770 train_time:98370ms step_avg:97.88ms
step:1016/1770 train_time:98471ms step_avg:97.88ms
step:1017/1770 train_time:98572ms step_avg:97.89ms
step:1018/1770 train_time:98674ms step_avg:97.89ms
step:1019/1770 train_time:98776ms step_avg:97.89ms
step:1020/1770 train_time:98878ms step_avg:97.90ms
step:1021/1770 train_time:98979ms step_avg:97.90ms
step:1022/1770 train_time:99082ms step_avg:97.91ms
step:1023/1770 train_time:99183ms step_avg:97.91ms
step:1024/1770 train_time:99284ms step_avg:97.91ms
step:1025/1770 train_time:99385ms step_avg:97.92ms
step:1026/1770 train_time:99486ms step_avg:97.92ms
step:1027/1770 train_time:99588ms step_avg:97.92ms
step:1028/1770 train_time:99689ms step_avg:97.93ms
step:1029/1770 train_time:99791ms step_avg:97.93ms
step:1030/1770 train_time:99893ms step_avg:97.93ms
step:1031/1770 train_time:99994ms step_avg:97.94ms
step:1032/1770 train_time:100096ms step_avg:97.94ms
step:1033/1770 train_time:100198ms step_avg:97.95ms
step:1034/1770 train_time:100300ms step_avg:97.95ms
step:1035/1770 train_time:100402ms step_avg:97.95ms
step:1036/1770 train_time:100503ms step_avg:97.96ms
step:1037/1770 train_time:100605ms step_avg:97.96ms
step:1038/1770 train_time:100705ms step_avg:97.96ms
step:1039/1770 train_time:100806ms step_avg:97.97ms
step:1040/1770 train_time:100907ms step_avg:97.97ms
step:1041/1770 train_time:101008ms step_avg:97.97ms
step:1042/1770 train_time:101110ms step_avg:97.97ms
step:1043/1770 train_time:101211ms step_avg:97.98ms
step:1044/1770 train_time:101313ms step_avg:97.98ms
step:1045/1770 train_time:101415ms step_avg:97.99ms
step:1046/1770 train_time:101517ms step_avg:97.99ms
step:1047/1770 train_time:101618ms step_avg:97.99ms
step:1048/1770 train_time:101719ms step_avg:98.00ms
step:1049/1770 train_time:101820ms step_avg:98.00ms
step:1050/1770 train_time:101922ms step_avg:98.00ms
step:1051/1770 train_time:102024ms step_avg:98.01ms
step:1052/1770 train_time:102126ms step_avg:98.01ms
step:1053/1770 train_time:102228ms step_avg:98.01ms
step:1054/1770 train_time:102329ms step_avg:98.02ms
step:1055/1770 train_time:102430ms step_avg:98.02ms
step:1056/1770 train_time:102532ms step_avg:98.02ms
step:1057/1770 train_time:102634ms step_avg:98.03ms
step:1058/1770 train_time:102736ms step_avg:98.03ms
step:1059/1770 train_time:102840ms step_avg:98.04ms
step:1060/1770 train_time:102941ms step_avg:98.04ms
step:1061/1770 train_time:103043ms step_avg:98.04ms
step:1062/1770 train_time:103145ms step_avg:98.05ms
step:1063/1770 train_time:103247ms step_avg:98.05ms
step:1064/1770 train_time:103350ms step_avg:98.05ms
step:1065/1770 train_time:103450ms step_avg:98.06ms
step:1066/1770 train_time:103553ms step_avg:98.06ms
step:1067/1770 train_time:103655ms step_avg:98.07ms
step:1068/1770 train_time:103758ms step_avg:98.07ms
step:1069/1770 train_time:103859ms step_avg:98.07ms
step:1070/1770 train_time:103962ms step_avg:98.08ms
step:1071/1770 train_time:104063ms step_avg:98.08ms
step:1072/1770 train_time:104164ms step_avg:98.08ms
step:1073/1770 train_time:104266ms step_avg:98.09ms
step:1074/1770 train_time:104367ms step_avg:98.09ms
step:1075/1770 train_time:104469ms step_avg:98.09ms
step:1076/1770 train_time:104572ms step_avg:98.10ms
step:1077/1770 train_time:104674ms step_avg:98.10ms
step:1078/1770 train_time:104776ms step_avg:98.10ms
step:1079/1770 train_time:104877ms step_avg:98.11ms
step:1080/1770 train_time:104979ms step_avg:98.11ms
step:1081/1770 train_time:105080ms step_avg:98.11ms
step:1082/1770 train_time:105182ms step_avg:98.12ms
step:1083/1770 train_time:105284ms step_avg:98.12ms
step:1084/1770 train_time:105384ms step_avg:98.12ms
step:1085/1770 train_time:105485ms step_avg:98.13ms
step:1086/1770 train_time:105586ms step_avg:98.13ms
step:1087/1770 train_time:105688ms step_avg:98.13ms
step:1088/1770 train_time:105790ms step_avg:98.14ms
step:1089/1770 train_time:105892ms step_avg:98.14ms
step:1090/1770 train_time:105995ms step_avg:98.14ms
step:1091/1770 train_time:106096ms step_avg:98.15ms
step:1092/1770 train_time:106198ms step_avg:98.15ms
step:1093/1770 train_time:106300ms step_avg:98.15ms
step:1094/1770 train_time:106402ms step_avg:98.16ms
step:1095/1770 train_time:106503ms step_avg:98.16ms
step:1096/1770 train_time:106604ms step_avg:98.16ms
step:1097/1770 train_time:106705ms step_avg:98.16ms
step:1098/1770 train_time:106806ms step_avg:98.17ms
step:1099/1770 train_time:106907ms step_avg:98.17ms
step:1100/1770 train_time:107009ms step_avg:98.17ms
step:1101/1770 train_time:107111ms step_avg:98.18ms
step:1102/1770 train_time:107214ms step_avg:98.18ms
step:1103/1770 train_time:107317ms step_avg:98.19ms
step:1104/1770 train_time:107419ms step_avg:98.19ms
step:1105/1770 train_time:107520ms step_avg:98.19ms
step:1106/1770 train_time:107622ms step_avg:98.20ms
step:1107/1770 train_time:107723ms step_avg:98.20ms
step:1108/1770 train_time:107825ms step_avg:98.20ms
step:1109/1770 train_time:107926ms step_avg:98.20ms
step:1110/1770 train_time:108027ms step_avg:98.21ms
step:1111/1770 train_time:108128ms step_avg:98.21ms
step:1112/1770 train_time:108230ms step_avg:98.21ms
step:1113/1770 train_time:108332ms step_avg:98.22ms
step:1114/1770 train_time:108434ms step_avg:98.22ms
step:1115/1770 train_time:108537ms step_avg:98.22ms
step:1116/1770 train_time:108639ms step_avg:98.23ms
step:1117/1770 train_time:108743ms step_avg:98.23ms
step:1118/1770 train_time:108842ms step_avg:98.23ms
step:1119/1770 train_time:108943ms step_avg:98.24ms
step:1120/1770 train_time:109044ms step_avg:98.24ms
step:1121/1770 train_time:109145ms step_avg:98.24ms
step:1122/1770 train_time:109246ms step_avg:98.24ms
step:1123/1770 train_time:109347ms step_avg:98.25ms
step:1124/1770 train_time:109449ms step_avg:98.25ms
step:1125/1770 train_time:109553ms step_avg:98.25ms
step:1125/1770 val_loss:3.4759 train_time:109654ms step_avg:98.34ms
step:1126/1770 train_time:109674ms step_avg:98.27ms
step:1127/1770 train_time:109764ms step_avg:98.27ms
step:1128/1770 train_time:109867ms step_avg:98.27ms
step:1129/1770 train_time:109968ms step_avg:98.27ms
step:1130/1770 train_time:110070ms step_avg:98.28ms
step:1131/1770 train_time:110172ms step_avg:98.28ms
step:1132/1770 train_time:110274ms step_avg:98.28ms
step:1133/1770 train_time:110375ms step_avg:98.29ms
step:1134/1770 train_time:110478ms step_avg:98.29ms
step:1135/1770 train_time:110580ms step_avg:98.29ms
step:1136/1770 train_time:110681ms step_avg:98.30ms
step:1137/1770 train_time:110783ms step_avg:98.30ms
step:1138/1770 train_time:110884ms step_avg:98.30ms
step:1139/1770 train_time:110986ms step_avg:98.30ms
step:1140/1770 train_time:111086ms step_avg:98.31ms
step:1141/1770 train_time:111188ms step_avg:98.31ms
step:1142/1770 train_time:111289ms step_avg:98.31ms
step:1143/1770 train_time:111391ms step_avg:98.32ms
step:1144/1770 train_time:111494ms step_avg:98.32ms
step:1145/1770 train_time:111599ms step_avg:98.32ms
step:1146/1770 train_time:111698ms step_avg:98.33ms
step:1147/1770 train_time:111801ms step_avg:98.33ms
step:1148/1770 train_time:111903ms step_avg:98.33ms
step:1149/1770 train_time:112004ms step_avg:98.34ms
step:1150/1770 train_time:112105ms step_avg:98.34ms
step:1151/1770 train_time:112208ms step_avg:98.34ms
step:1152/1770 train_time:112310ms step_avg:98.35ms
step:1153/1770 train_time:112411ms step_avg:98.35ms
step:1154/1770 train_time:112513ms step_avg:98.35ms
step:1155/1770 train_time:112615ms step_avg:98.35ms
step:1156/1770 train_time:112716ms step_avg:98.36ms
step:1157/1770 train_time:112819ms step_avg:98.36ms
step:1158/1770 train_time:112920ms step_avg:98.36ms
step:1159/1770 train_time:113022ms step_avg:98.37ms
step:1160/1770 train_time:113123ms step_avg:98.37ms
step:1161/1770 train_time:113224ms step_avg:98.37ms
step:1162/1770 train_time:113326ms step_avg:98.37ms
step:1163/1770 train_time:113428ms step_avg:98.38ms
step:1164/1770 train_time:113529ms step_avg:98.38ms
step:1165/1770 train_time:113630ms step_avg:98.38ms
step:1166/1770 train_time:113733ms step_avg:98.38ms
step:1167/1770 train_time:113834ms step_avg:98.39ms
step:1168/1770 train_time:113937ms step_avg:98.39ms
step:1169/1770 train_time:114038ms step_avg:98.39ms
step:1170/1770 train_time:114140ms step_avg:98.40ms
step:1171/1770 train_time:114241ms step_avg:98.40ms
step:1172/1770 train_time:114343ms step_avg:98.40ms
step:1173/1770 train_time:114444ms step_avg:98.40ms
step:1174/1770 train_time:114546ms step_avg:98.41ms
step:1175/1770 train_time:114647ms step_avg:98.41ms
step:1176/1770 train_time:114749ms step_avg:98.41ms
step:1177/1770 train_time:114850ms step_avg:98.42ms
step:1178/1770 train_time:114952ms step_avg:98.42ms
step:1179/1770 train_time:115054ms step_avg:98.42ms
step:1180/1770 train_time:115156ms step_avg:98.42ms
step:1181/1770 train_time:115258ms step_avg:98.43ms
step:1182/1770 train_time:115360ms step_avg:98.43ms
step:1183/1770 train_time:115462ms step_avg:98.43ms
step:1184/1770 train_time:115566ms step_avg:98.44ms
step:1185/1770 train_time:115668ms step_avg:98.44ms
step:1186/1770 train_time:115771ms step_avg:98.44ms
step:1187/1770 train_time:115876ms step_avg:98.45ms
step:1188/1770 train_time:115978ms step_avg:98.45ms
step:1189/1770 train_time:116081ms step_avg:98.46ms
step:1190/1770 train_time:116183ms step_avg:98.46ms
step:1191/1770 train_time:116285ms step_avg:98.46ms
step:1192/1770 train_time:116388ms step_avg:98.47ms
step:1193/1770 train_time:116490ms step_avg:98.47ms
step:1194/1770 train_time:116593ms step_avg:98.47ms
step:1195/1770 train_time:116697ms step_avg:98.48ms
step:1196/1770 train_time:116802ms step_avg:98.48ms
step:1197/1770 train_time:116902ms step_avg:98.48ms
step:1198/1770 train_time:117004ms step_avg:98.49ms
step:1199/1770 train_time:117107ms step_avg:98.49ms
step:1200/1770 train_time:117210ms step_avg:98.50ms
step:1201/1770 train_time:117314ms step_avg:98.50ms
step:1202/1770 train_time:117416ms step_avg:98.50ms
step:1203/1770 train_time:117519ms step_avg:98.51ms
step:1204/1770 train_time:117621ms step_avg:98.51ms
step:1205/1770 train_time:117723ms step_avg:98.51ms
step:1206/1770 train_time:117826ms step_avg:98.52ms
step:1207/1770 train_time:117930ms step_avg:98.52ms
step:1208/1770 train_time:118032ms step_avg:98.52ms
step:1209/1770 train_time:118135ms step_avg:98.53ms
step:1210/1770 train_time:118237ms step_avg:98.53ms
step:1211/1770 train_time:118341ms step_avg:98.54ms
step:1212/1770 train_time:118446ms step_avg:98.54ms
step:1213/1770 train_time:118548ms step_avg:98.54ms
step:1214/1770 train_time:118651ms step_avg:98.55ms
step:1215/1770 train_time:118754ms step_avg:98.55ms
step:1216/1770 train_time:118860ms step_avg:98.56ms
step:1217/1770 train_time:118962ms step_avg:98.56ms
step:1218/1770 train_time:119064ms step_avg:98.56ms
step:1219/1770 train_time:119167ms step_avg:98.57ms
step:1220/1770 train_time:119269ms step_avg:98.57ms
step:1221/1770 train_time:119373ms step_avg:98.57ms
step:1222/1770 train_time:119477ms step_avg:98.58ms
step:1223/1770 train_time:119580ms step_avg:98.58ms
step:1224/1770 train_time:119684ms step_avg:98.59ms
step:1225/1770 train_time:119787ms step_avg:98.59ms
step:1226/1770 train_time:119889ms step_avg:98.59ms
step:1227/1770 train_time:119994ms step_avg:98.60ms
step:1228/1770 train_time:120099ms step_avg:98.60ms
step:1229/1770 train_time:120202ms step_avg:98.61ms
step:1230/1770 train_time:120305ms step_avg:98.61ms
step:1231/1770 train_time:120408ms step_avg:98.61ms
step:1232/1770 train_time:120510ms step_avg:98.62ms
step:1233/1770 train_time:120613ms step_avg:98.62ms
step:1234/1770 train_time:120716ms step_avg:98.62ms
step:1235/1770 train_time:120819ms step_avg:98.63ms
step:1236/1770 train_time:120922ms step_avg:98.63ms
step:1237/1770 train_time:121025ms step_avg:98.63ms
step:1238/1770 train_time:121128ms step_avg:98.64ms
step:1239/1770 train_time:121231ms step_avg:98.64ms
step:1240/1770 train_time:121334ms step_avg:98.65ms
step:1241/1770 train_time:121437ms step_avg:98.65ms
step:1242/1770 train_time:121542ms step_avg:98.65ms
step:1243/1770 train_time:121645ms step_avg:98.66ms
step:1244/1770 train_time:121746ms step_avg:98.66ms
step:1245/1770 train_time:121849ms step_avg:98.66ms
step:1246/1770 train_time:121951ms step_avg:98.67ms
step:1247/1770 train_time:122054ms step_avg:98.67ms
step:1248/1770 train_time:122157ms step_avg:98.67ms
step:1249/1770 train_time:122260ms step_avg:98.68ms
step:1250/1770 train_time:122362ms step_avg:98.68ms
step:1250/1770 val_loss:3.4294 train_time:122466ms step_avg:98.76ms
step:1251/1770 train_time:122487ms step_avg:98.70ms
step:1252/1770 train_time:122576ms step_avg:98.69ms
step:1253/1770 train_time:122678ms step_avg:98.69ms
step:1254/1770 train_time:122781ms step_avg:98.70ms
step:1255/1770 train_time:122886ms step_avg:98.70ms
step:1256/1770 train_time:122988ms step_avg:98.71ms
step:1257/1770 train_time:123090ms step_avg:98.71ms
step:1258/1770 train_time:123192ms step_avg:98.71ms
step:1259/1770 train_time:123295ms step_avg:98.72ms
step:1260/1770 train_time:123398ms step_avg:98.72ms
step:1261/1770 train_time:123503ms step_avg:98.72ms
step:1262/1770 train_time:123606ms step_avg:98.73ms
step:1263/1770 train_time:123708ms step_avg:98.73ms
step:1264/1770 train_time:123812ms step_avg:98.73ms
step:1265/1770 train_time:123914ms step_avg:98.74ms
step:1266/1770 train_time:124018ms step_avg:98.74ms
step:1267/1770 train_time:124121ms step_avg:98.74ms
step:1268/1770 train_time:124224ms step_avg:98.75ms
step:1269/1770 train_time:124326ms step_avg:98.75ms
step:1270/1770 train_time:124429ms step_avg:98.75ms
step:1271/1770 train_time:124536ms step_avg:98.76ms
step:1272/1770 train_time:124634ms step_avg:98.76ms
step:1273/1770 train_time:124738ms step_avg:98.76ms
step:1274/1770 train_time:124841ms step_avg:98.77ms
step:1275/1770 train_time:124944ms step_avg:98.77ms
step:1276/1770 train_time:125048ms step_avg:98.77ms
step:1277/1770 train_time:125150ms step_avg:98.78ms
step:1278/1770 train_time:125253ms step_avg:98.78ms
step:1279/1770 train_time:125356ms step_avg:98.78ms
step:1280/1770 train_time:125461ms step_avg:98.79ms
step:1281/1770 train_time:125563ms step_avg:98.79ms
step:1282/1770 train_time:125666ms step_avg:98.79ms
step:1283/1770 train_time:125769ms step_avg:98.80ms
step:1284/1770 train_time:125872ms step_avg:98.80ms
step:1285/1770 train_time:125975ms step_avg:98.80ms
step:1286/1770 train_time:126079ms step_avg:98.81ms
step:1287/1770 train_time:126183ms step_avg:98.81ms
step:1288/1770 train_time:126286ms step_avg:98.81ms
step:1289/1770 train_time:126388ms step_avg:98.82ms
step:1290/1770 train_time:126491ms step_avg:98.82ms
step:1291/1770 train_time:126593ms step_avg:98.82ms
step:1292/1770 train_time:126696ms step_avg:98.83ms
step:1293/1770 train_time:126799ms step_avg:98.83ms
step:1294/1770 train_time:126901ms step_avg:98.83ms
step:1295/1770 train_time:127004ms step_avg:98.84ms
step:1296/1770 train_time:127107ms step_avg:98.84ms
step:1297/1770 train_time:127209ms step_avg:98.84ms
step:1298/1770 train_time:127313ms step_avg:98.85ms
step:1299/1770 train_time:127416ms step_avg:98.85ms
step:1300/1770 train_time:127518ms step_avg:98.85ms
step:1301/1770 train_time:127621ms step_avg:98.85ms
step:1302/1770 train_time:127724ms step_avg:98.86ms
step:1303/1770 train_time:127826ms step_avg:98.86ms
step:1304/1770 train_time:127929ms step_avg:98.86ms
step:1305/1770 train_time:128031ms step_avg:98.87ms
step:1306/1770 train_time:128138ms step_avg:98.87ms
step:1307/1770 train_time:128237ms step_avg:98.87ms
step:1308/1770 train_time:128341ms step_avg:98.88ms
step:1309/1770 train_time:128445ms step_avg:98.88ms
step:1310/1770 train_time:128547ms step_avg:98.88ms
step:1311/1770 train_time:128649ms step_avg:98.88ms
step:1312/1770 train_time:128752ms step_avg:98.89ms
step:1313/1770 train_time:128853ms step_avg:98.89ms
step:1314/1770 train_time:128956ms step_avg:98.89ms
step:1315/1770 train_time:129059ms step_avg:98.90ms
step:1316/1770 train_time:129161ms step_avg:98.90ms
step:1317/1770 train_time:129265ms step_avg:98.90ms
step:1318/1770 train_time:129371ms step_avg:98.91ms
step:1319/1770 train_time:129474ms step_avg:98.91ms
step:1320/1770 train_time:129577ms step_avg:98.91ms
step:1321/1770 train_time:129681ms step_avg:98.92ms
step:1322/1770 train_time:129785ms step_avg:98.92ms
step:1323/1770 train_time:129888ms step_avg:98.92ms
step:1324/1770 train_time:129992ms step_avg:98.93ms
step:1325/1770 train_time:130097ms step_avg:98.93ms
step:1326/1770 train_time:130199ms step_avg:98.94ms
step:1327/1770 train_time:130305ms step_avg:98.94ms
step:1328/1770 train_time:130407ms step_avg:98.94ms
step:1329/1770 train_time:130510ms step_avg:98.95ms
step:1330/1770 train_time:130612ms step_avg:98.95ms
step:1331/1770 train_time:130714ms step_avg:98.95ms
step:1332/1770 train_time:130816ms step_avg:98.95ms
step:1333/1770 train_time:130919ms step_avg:98.96ms
step:1334/1770 train_time:131022ms step_avg:98.96ms
step:1335/1770 train_time:131125ms step_avg:98.96ms
step:1336/1770 train_time:131227ms step_avg:98.96ms
step:1337/1770 train_time:131330ms step_avg:98.97ms
step:1338/1770 train_time:131432ms step_avg:98.97ms
step:1339/1770 train_time:131535ms step_avg:98.97ms
step:1340/1770 train_time:131640ms step_avg:98.98ms
step:1341/1770 train_time:131743ms step_avg:98.98ms
step:1342/1770 train_time:131847ms step_avg:98.98ms
step:1343/1770 train_time:131949ms step_avg:98.99ms
step:1344/1770 train_time:132052ms step_avg:98.99ms
step:1345/1770 train_time:132156ms step_avg:98.99ms
step:1346/1770 train_time:132258ms step_avg:99.00ms
step:1347/1770 train_time:132361ms step_avg:99.00ms
step:1348/1770 train_time:132467ms step_avg:99.00ms
step:1349/1770 train_time:132570ms step_avg:99.01ms
step:1350/1770 train_time:132672ms step_avg:99.01ms
step:1351/1770 train_time:132775ms step_avg:99.01ms
step:1352/1770 train_time:132879ms step_avg:99.02ms
step:1353/1770 train_time:132983ms step_avg:99.02ms
step:1354/1770 train_time:133086ms step_avg:99.02ms
step:1355/1770 train_time:133189ms step_avg:99.03ms
step:1356/1770 train_time:133291ms step_avg:99.03ms
step:1357/1770 train_time:133393ms step_avg:99.03ms
step:1358/1770 train_time:133497ms step_avg:99.03ms
step:1359/1770 train_time:133601ms step_avg:99.04ms
step:1360/1770 train_time:133704ms step_avg:99.04ms
step:1361/1770 train_time:133808ms step_avg:99.04ms
step:1362/1770 train_time:133911ms step_avg:99.05ms
step:1363/1770 train_time:134015ms step_avg:99.05ms
step:1364/1770 train_time:134118ms step_avg:99.05ms
step:1365/1770 train_time:134220ms step_avg:99.06ms
step:1366/1770 train_time:134323ms step_avg:99.06ms
step:1367/1770 train_time:134427ms step_avg:99.06ms
step:1368/1770 train_time:134529ms step_avg:99.06ms
step:1369/1770 train_time:134632ms step_avg:99.07ms
step:1370/1770 train_time:134735ms step_avg:99.07ms
step:1371/1770 train_time:134838ms step_avg:99.07ms
step:1372/1770 train_time:134941ms step_avg:99.08ms
step:1373/1770 train_time:135043ms step_avg:99.08ms
step:1374/1770 train_time:135147ms step_avg:99.08ms
step:1375/1770 train_time:135250ms step_avg:99.08ms
step:1375/1770 val_loss:3.3864 train_time:135352ms step_avg:99.16ms
step:1376/1770 train_time:135372ms step_avg:99.10ms
step:1377/1770 train_time:135463ms step_avg:99.09ms
step:1378/1770 train_time:135567ms step_avg:99.10ms
step:1379/1770 train_time:135669ms step_avg:99.10ms
step:1380/1770 train_time:135771ms step_avg:99.10ms
step:1381/1770 train_time:135875ms step_avg:99.11ms
step:1382/1770 train_time:135977ms step_avg:99.11ms
step:1383/1770 train_time:136081ms step_avg:99.11ms
step:1384/1770 train_time:136184ms step_avg:99.12ms
step:1385/1770 train_time:136287ms step_avg:99.12ms
step:1386/1770 train_time:136390ms step_avg:99.12ms
step:1387/1770 train_time:136494ms step_avg:99.12ms
step:1388/1770 train_time:136597ms step_avg:99.13ms
step:1389/1770 train_time:136702ms step_avg:99.13ms
step:1390/1770 train_time:136803ms step_avg:99.13ms
step:1391/1770 train_time:136906ms step_avg:99.14ms
step:1392/1770 train_time:137008ms step_avg:99.14ms
step:1393/1770 train_time:137110ms step_avg:99.14ms
step:1394/1770 train_time:137213ms step_avg:99.14ms
step:1395/1770 train_time:137316ms step_avg:99.15ms
step:1396/1770 train_time:137420ms step_avg:99.15ms
step:1397/1770 train_time:137523ms step_avg:99.15ms
step:1398/1770 train_time:137626ms step_avg:99.15ms
step:1399/1770 train_time:137729ms step_avg:99.16ms
step:1400/1770 train_time:137832ms step_avg:99.16ms
step:1401/1770 train_time:137935ms step_avg:99.16ms
step:1402/1770 train_time:138038ms step_avg:99.17ms
step:1403/1770 train_time:138142ms step_avg:99.17ms
step:1404/1770 train_time:138245ms step_avg:99.17ms
step:1405/1770 train_time:138347ms step_avg:99.17ms
step:1406/1770 train_time:138449ms step_avg:99.18ms
step:1407/1770 train_time:138551ms step_avg:99.18ms
step:1408/1770 train_time:138653ms step_avg:99.18ms
step:1409/1770 train_time:138757ms step_avg:99.18ms
step:1410/1770 train_time:138859ms step_avg:99.19ms
step:1411/1770 train_time:138963ms step_avg:99.19ms
step:1412/1770 train_time:139065ms step_avg:99.19ms
step:1413/1770 train_time:139168ms step_avg:99.19ms
step:1414/1770 train_time:139272ms step_avg:99.20ms
step:1415/1770 train_time:139376ms step_avg:99.20ms
step:1416/1770 train_time:139480ms step_avg:99.20ms
step:1417/1770 train_time:139583ms step_avg:99.21ms
step:1418/1770 train_time:139686ms step_avg:99.21ms
step:1419/1770 train_time:139789ms step_avg:99.21ms
step:1420/1770 train_time:139891ms step_avg:99.21ms
step:1421/1770 train_time:139994ms step_avg:99.22ms
step:1422/1770 train_time:140098ms step_avg:99.22ms
step:1423/1770 train_time:140203ms step_avg:99.22ms
step:1424/1770 train_time:140305ms step_avg:99.23ms
step:1425/1770 train_time:140407ms step_avg:99.23ms
step:1426/1770 train_time:140511ms step_avg:99.23ms
step:1427/1770 train_time:140613ms step_avg:99.23ms
step:1428/1770 train_time:140717ms step_avg:99.24ms
step:1429/1770 train_time:140821ms step_avg:99.24ms
step:1430/1770 train_time:140923ms step_avg:99.24ms
step:1431/1770 train_time:141027ms step_avg:99.25ms
step:1432/1770 train_time:141129ms step_avg:99.25ms
step:1433/1770 train_time:141232ms step_avg:99.25ms
step:1434/1770 train_time:141334ms step_avg:99.25ms
step:1435/1770 train_time:141437ms step_avg:99.25ms
step:1436/1770 train_time:141541ms step_avg:99.26ms
step:1437/1770 train_time:141644ms step_avg:99.26ms
step:1438/1770 train_time:141746ms step_avg:99.26ms
step:1439/1770 train_time:141848ms step_avg:99.26ms
step:1440/1770 train_time:141952ms step_avg:99.27ms
step:1441/1770 train_time:142057ms step_avg:99.27ms
step:1442/1770 train_time:142160ms step_avg:99.27ms
step:1443/1770 train_time:142264ms step_avg:99.28ms
step:1444/1770 train_time:142367ms step_avg:99.28ms
step:1445/1770 train_time:142470ms step_avg:99.28ms
step:1446/1770 train_time:142574ms step_avg:99.29ms
step:1447/1770 train_time:142679ms step_avg:99.29ms
step:1448/1770 train_time:142782ms step_avg:99.29ms
step:1449/1770 train_time:142887ms step_avg:99.30ms
step:1450/1770 train_time:142990ms step_avg:99.30ms
step:1451/1770 train_time:143094ms step_avg:99.30ms
step:1452/1770 train_time:143199ms step_avg:99.31ms
step:1453/1770 train_time:143303ms step_avg:99.31ms
step:1454/1770 train_time:143407ms step_avg:99.31ms
step:1455/1770 train_time:143513ms step_avg:99.32ms
step:1456/1770 train_time:143618ms step_avg:99.32ms
step:1457/1770 train_time:143722ms step_avg:99.32ms
step:1458/1770 train_time:143826ms step_avg:99.33ms
step:1459/1770 train_time:143931ms step_avg:99.33ms
step:1460/1770 train_time:144035ms step_avg:99.33ms
step:1461/1770 train_time:144139ms step_avg:99.34ms
step:1462/1770 train_time:144242ms step_avg:99.34ms
step:1463/1770 train_time:144346ms step_avg:99.34ms
step:1464/1770 train_time:144452ms step_avg:99.35ms
step:1465/1770 train_time:144556ms step_avg:99.35ms
step:1466/1770 train_time:144661ms step_avg:99.35ms
step:1467/1770 train_time:144766ms step_avg:99.36ms
step:1468/1770 train_time:144870ms step_avg:99.36ms
step:1469/1770 train_time:144973ms step_avg:99.36ms
step:1470/1770 train_time:145076ms step_avg:99.37ms
step:1471/1770 train_time:145181ms step_avg:99.37ms
step:1472/1770 train_time:145285ms step_avg:99.37ms
step:1473/1770 train_time:145389ms step_avg:99.38ms
step:1474/1770 train_time:145495ms step_avg:99.38ms
step:1475/1770 train_time:145598ms step_avg:99.38ms
step:1476/1770 train_time:145702ms step_avg:99.39ms
step:1477/1770 train_time:145808ms step_avg:99.39ms
step:1478/1770 train_time:145912ms step_avg:99.40ms
step:1479/1770 train_time:146017ms step_avg:99.40ms
step:1480/1770 train_time:146121ms step_avg:99.40ms
step:1481/1770 train_time:146228ms step_avg:99.41ms
step:1482/1770 train_time:146331ms step_avg:99.41ms
step:1483/1770 train_time:146436ms step_avg:99.41ms
step:1484/1770 train_time:146540ms step_avg:99.42ms
step:1485/1770 train_time:146644ms step_avg:99.42ms
step:1486/1770 train_time:146747ms step_avg:99.42ms
step:1487/1770 train_time:146851ms step_avg:99.42ms
step:1488/1770 train_time:146955ms step_avg:99.43ms
step:1489/1770 train_time:147060ms step_avg:99.43ms
step:1490/1770 train_time:147164ms step_avg:99.44ms
step:1491/1770 train_time:147268ms step_avg:99.44ms
step:1492/1770 train_time:147372ms step_avg:99.44ms
step:1493/1770 train_time:147480ms step_avg:99.45ms
step:1494/1770 train_time:147587ms step_avg:99.45ms
step:1495/1770 train_time:147690ms step_avg:99.45ms
step:1496/1770 train_time:147794ms step_avg:99.46ms
step:1497/1770 train_time:147898ms step_avg:99.46ms
step:1498/1770 train_time:148002ms step_avg:99.46ms
step:1499/1770 train_time:148105ms step_avg:99.47ms
step:1500/1770 train_time:148209ms step_avg:99.47ms
step:1500/1770 val_loss:3.3513 train_time:148310ms step_avg:99.54ms
step:1501/1770 train_time:148331ms step_avg:99.48ms
step:1502/1770 train_time:148422ms step_avg:99.48ms
step:1503/1770 train_time:148526ms step_avg:99.48ms
step:1504/1770 train_time:148630ms step_avg:99.48ms
step:1505/1770 train_time:148736ms step_avg:99.49ms
step:1506/1770 train_time:148841ms step_avg:99.49ms
step:1507/1770 train_time:148945ms step_avg:99.50ms
step:1508/1770 train_time:149052ms step_avg:99.50ms
step:1509/1770 train_time:149155ms step_avg:99.50ms
step:1510/1770 train_time:149259ms step_avg:99.51ms
step:1511/1770 train_time:149365ms step_avg:99.51ms
step:1512/1770 train_time:149470ms step_avg:99.51ms
step:1513/1770 train_time:149574ms step_avg:99.52ms
step:1514/1770 train_time:149678ms step_avg:99.52ms
step:1515/1770 train_time:149783ms step_avg:99.52ms
step:1516/1770 train_time:149887ms step_avg:99.53ms
step:1517/1770 train_time:149991ms step_avg:99.53ms
step:1518/1770 train_time:150097ms step_avg:99.53ms
step:1519/1770 train_time:150200ms step_avg:99.54ms
step:1520/1770 train_time:150305ms step_avg:99.54ms
step:1521/1770 train_time:150410ms step_avg:99.54ms
step:1522/1770 train_time:150514ms step_avg:99.55ms
step:1523/1770 train_time:150619ms step_avg:99.55ms
step:1524/1770 train_time:150723ms step_avg:99.55ms
step:1525/1770 train_time:150827ms step_avg:99.56ms
step:1526/1770 train_time:150930ms step_avg:99.56ms
step:1527/1770 train_time:151034ms step_avg:99.56ms
step:1528/1770 train_time:151140ms step_avg:99.57ms
step:1529/1770 train_time:151243ms step_avg:99.57ms
step:1530/1770 train_time:151346ms step_avg:99.57ms
step:1531/1770 train_time:151451ms step_avg:99.57ms
step:1532/1770 train_time:151554ms step_avg:99.58ms
step:1533/1770 train_time:151660ms step_avg:99.58ms
step:1534/1770 train_time:151764ms step_avg:99.58ms
step:1535/1770 train_time:151867ms step_avg:99.59ms
step:1536/1770 train_time:151971ms step_avg:99.59ms
step:1537/1770 train_time:152074ms step_avg:99.59ms
step:1538/1770 train_time:152181ms step_avg:99.59ms
step:1539/1770 train_time:152285ms step_avg:99.60ms
step:1540/1770 train_time:152392ms step_avg:99.60ms
step:1541/1770 train_time:152497ms step_avg:99.61ms
step:1542/1770 train_time:152602ms step_avg:99.61ms
step:1543/1770 train_time:152706ms step_avg:99.61ms
step:1544/1770 train_time:152812ms step_avg:99.62ms
step:1545/1770 train_time:152916ms step_avg:99.62ms
step:1546/1770 train_time:153021ms step_avg:99.62ms
step:1547/1770 train_time:153125ms step_avg:99.63ms
step:1548/1770 train_time:153228ms step_avg:99.63ms
step:1549/1770 train_time:153332ms step_avg:99.63ms
step:1550/1770 train_time:153436ms step_avg:99.63ms
step:1551/1770 train_time:153539ms step_avg:99.64ms
step:1552/1770 train_time:153648ms step_avg:99.64ms
step:1553/1770 train_time:153751ms step_avg:99.64ms
step:1554/1770 train_time:153855ms step_avg:99.65ms
step:1555/1770 train_time:153959ms step_avg:99.65ms
step:1556/1770 train_time:154063ms step_avg:99.65ms
step:1557/1770 train_time:154166ms step_avg:99.66ms
step:1558/1770 train_time:154271ms step_avg:99.66ms
step:1559/1770 train_time:154374ms step_avg:99.66ms
step:1560/1770 train_time:154478ms step_avg:99.66ms
step:1561/1770 train_time:154585ms step_avg:99.67ms
step:1562/1770 train_time:154689ms step_avg:99.67ms
step:1563/1770 train_time:154792ms step_avg:99.67ms
step:1564/1770 train_time:154896ms step_avg:99.68ms
step:1565/1770 train_time:154999ms step_avg:99.68ms
step:1566/1770 train_time:155103ms step_avg:99.68ms
step:1567/1770 train_time:155208ms step_avg:99.68ms
step:1568/1770 train_time:155312ms step_avg:99.69ms
step:1569/1770 train_time:155419ms step_avg:99.69ms
step:1570/1770 train_time:155523ms step_avg:99.69ms
step:1571/1770 train_time:155626ms step_avg:99.70ms
step:1572/1770 train_time:155731ms step_avg:99.70ms
step:1573/1770 train_time:155842ms step_avg:99.71ms
step:1574/1770 train_time:155942ms step_avg:99.71ms
step:1575/1770 train_time:156044ms step_avg:99.71ms
step:1576/1770 train_time:156148ms step_avg:99.71ms
step:1577/1770 train_time:156253ms step_avg:99.71ms
step:1578/1770 train_time:156359ms step_avg:99.72ms
step:1579/1770 train_time:156463ms step_avg:99.72ms
step:1580/1770 train_time:156566ms step_avg:99.72ms
step:1581/1770 train_time:156673ms step_avg:99.73ms
step:1582/1770 train_time:156779ms step_avg:99.73ms
step:1583/1770 train_time:156883ms step_avg:99.73ms
step:1584/1770 train_time:156988ms step_avg:99.74ms
step:1585/1770 train_time:157092ms step_avg:99.74ms
step:1586/1770 train_time:157200ms step_avg:99.75ms
step:1587/1770 train_time:157304ms step_avg:99.75ms
step:1588/1770 train_time:157409ms step_avg:99.75ms
step:1589/1770 train_time:157515ms step_avg:99.76ms
step:1590/1770 train_time:157618ms step_avg:99.76ms
step:1591/1770 train_time:157722ms step_avg:99.76ms
step:1592/1770 train_time:157827ms step_avg:99.76ms
step:1593/1770 train_time:157932ms step_avg:99.77ms
step:1594/1770 train_time:158034ms step_avg:99.77ms
step:1595/1770 train_time:158138ms step_avg:99.77ms
step:1596/1770 train_time:158243ms step_avg:99.78ms
step:1597/1770 train_time:158347ms step_avg:99.78ms
step:1598/1770 train_time:158451ms step_avg:99.78ms
step:1599/1770 train_time:158557ms step_avg:99.78ms
step:1600/1770 train_time:158663ms step_avg:99.79ms
step:1601/1770 train_time:158768ms step_avg:99.79ms
step:1602/1770 train_time:158872ms step_avg:99.79ms
step:1603/1770 train_time:158976ms step_avg:99.80ms
step:1604/1770 train_time:159080ms step_avg:99.80ms
step:1605/1770 train_time:159183ms step_avg:99.80ms
step:1606/1770 train_time:159287ms step_avg:99.80ms
step:1607/1770 train_time:159395ms step_avg:99.81ms
step:1608/1770 train_time:159500ms step_avg:99.81ms
step:1609/1770 train_time:159603ms step_avg:99.81ms
step:1610/1770 train_time:159709ms step_avg:99.82ms
step:1611/1770 train_time:159815ms step_avg:99.82ms
step:1612/1770 train_time:159920ms step_avg:99.83ms
step:1613/1770 train_time:160025ms step_avg:99.83ms
step:1614/1770 train_time:160129ms step_avg:99.83ms
step:1615/1770 train_time:160233ms step_avg:99.83ms
step:1616/1770 train_time:160337ms step_avg:99.84ms
step:1617/1770 train_time:160443ms step_avg:99.84ms
step:1618/1770 train_time:160549ms step_avg:99.84ms
step:1619/1770 train_time:160653ms step_avg:99.85ms
step:1620/1770 train_time:160758ms step_avg:99.85ms
step:1621/1770 train_time:160863ms step_avg:99.85ms
step:1622/1770 train_time:160968ms step_avg:99.86ms
step:1623/1770 train_time:161075ms step_avg:99.86ms
step:1624/1770 train_time:161179ms step_avg:99.86ms
step:1625/1770 train_time:161282ms step_avg:99.87ms
step:1625/1770 val_loss:3.3184 train_time:161386ms step_avg:99.93ms
step:1626/1770 train_time:161407ms step_avg:99.88ms
step:1627/1770 train_time:161496ms step_avg:99.87ms
step:1628/1770 train_time:161600ms step_avg:99.88ms
step:1629/1770 train_time:161705ms step_avg:99.88ms
step:1630/1770 train_time:161809ms step_avg:99.88ms
step:1631/1770 train_time:161912ms step_avg:99.88ms
step:1632/1770 train_time:162016ms step_avg:99.89ms
step:1633/1770 train_time:162120ms step_avg:99.89ms
step:1634/1770 train_time:162224ms step_avg:99.89ms
step:1635/1770 train_time:162328ms step_avg:99.89ms
step:1636/1770 train_time:162434ms step_avg:99.90ms
step:1637/1770 train_time:162538ms step_avg:99.90ms
step:1638/1770 train_time:162642ms step_avg:99.90ms
step:1639/1770 train_time:162746ms step_avg:99.91ms
step:1640/1770 train_time:162852ms step_avg:99.91ms
step:1641/1770 train_time:162956ms step_avg:99.91ms
step:1642/1770 train_time:163059ms step_avg:99.91ms
step:1643/1770 train_time:163163ms step_avg:99.92ms
step:1644/1770 train_time:163269ms step_avg:99.92ms
step:1645/1770 train_time:163372ms step_avg:99.92ms
step:1646/1770 train_time:163478ms step_avg:99.93ms
step:1647/1770 train_time:163582ms step_avg:99.93ms
step:1648/1770 train_time:163685ms step_avg:99.93ms
step:1649/1770 train_time:163790ms step_avg:99.93ms
step:1650/1770 train_time:163894ms step_avg:99.94ms
step:1651/1770 train_time:163998ms step_avg:99.94ms
step:1652/1770 train_time:164103ms step_avg:99.94ms
step:1653/1770 train_time:164207ms step_avg:99.94ms
step:1654/1770 train_time:164315ms step_avg:99.95ms
step:1655/1770 train_time:164422ms step_avg:99.95ms
step:1656/1770 train_time:164526ms step_avg:99.95ms
step:1657/1770 train_time:164632ms step_avg:99.96ms
step:1658/1770 train_time:164736ms step_avg:99.96ms
step:1659/1770 train_time:164841ms step_avg:99.96ms
step:1660/1770 train_time:164945ms step_avg:99.97ms
step:1661/1770 train_time:165051ms step_avg:99.97ms
step:1662/1770 train_time:165155ms step_avg:99.97ms
step:1663/1770 train_time:165259ms step_avg:99.97ms
step:1664/1770 train_time:165363ms step_avg:99.98ms
step:1665/1770 train_time:165467ms step_avg:99.98ms
step:1666/1770 train_time:165572ms step_avg:99.98ms
step:1667/1770 train_time:165676ms step_avg:99.99ms
step:1668/1770 train_time:165779ms step_avg:99.99ms
step:1669/1770 train_time:165882ms step_avg:99.99ms
step:1670/1770 train_time:165986ms step_avg:99.99ms
step:1671/1770 train_time:166091ms step_avg:99.99ms
step:1672/1770 train_time:166195ms step_avg:100.00ms
step:1673/1770 train_time:166300ms step_avg:100.00ms
step:1674/1770 train_time:166404ms step_avg:100.00ms
step:1675/1770 train_time:166508ms step_avg:100.00ms
step:1676/1770 train_time:166613ms step_avg:100.01ms
step:1677/1770 train_time:166722ms step_avg:100.01ms
step:1678/1770 train_time:166824ms step_avg:100.01ms
step:1679/1770 train_time:166929ms step_avg:100.02ms
step:1680/1770 train_time:167033ms step_avg:100.02ms
step:1681/1770 train_time:167138ms step_avg:100.02ms
step:1682/1770 train_time:167244ms step_avg:100.03ms
step:1683/1770 train_time:167348ms step_avg:100.03ms
step:1684/1770 train_time:167452ms step_avg:100.03ms
step:1685/1770 train_time:167557ms step_avg:100.03ms
step:1686/1770 train_time:167662ms step_avg:100.04ms
step:1687/1770 train_time:167767ms step_avg:100.04ms
step:1688/1770 train_time:167871ms step_avg:100.04ms
step:1689/1770 train_time:167975ms step_avg:100.04ms
step:1690/1770 train_time:168079ms step_avg:100.05ms
step:1691/1770 train_time:168183ms step_avg:100.05ms
step:1692/1770 train_time:168288ms step_avg:100.05ms
step:1693/1770 train_time:168394ms step_avg:100.06ms
step:1694/1770 train_time:168497ms step_avg:100.06ms
step:1695/1770 train_time:168602ms step_avg:100.06ms
step:1696/1770 train_time:168708ms step_avg:100.06ms
step:1697/1770 train_time:168814ms step_avg:100.07ms
step:1698/1770 train_time:168918ms step_avg:100.07ms
step:1699/1770 train_time:169022ms step_avg:100.07ms
step:1700/1770 train_time:169125ms step_avg:100.07ms
step:1701/1770 train_time:169230ms step_avg:100.08ms
step:1702/1770 train_time:169335ms step_avg:100.08ms
step:1703/1770 train_time:169439ms step_avg:100.08ms
step:1704/1770 train_time:169543ms step_avg:100.08ms
step:1705/1770 train_time:169646ms step_avg:100.09ms
step:1706/1770 train_time:169750ms step_avg:100.09ms
step:1707/1770 train_time:169855ms step_avg:100.09ms
step:1708/1770 train_time:169960ms step_avg:100.09ms
step:1709/1770 train_time:170066ms step_avg:100.10ms
step:1710/1770 train_time:170173ms step_avg:100.10ms
step:1711/1770 train_time:170279ms step_avg:100.11ms
step:1712/1770 train_time:170385ms step_avg:100.11ms
step:1713/1770 train_time:170489ms step_avg:100.11ms
step:1714/1770 train_time:170593ms step_avg:100.11ms
step:1715/1770 train_time:170697ms step_avg:100.12ms
step:1716/1770 train_time:170802ms step_avg:100.12ms
step:1717/1770 train_time:170908ms step_avg:100.12ms
step:1718/1770 train_time:171013ms step_avg:100.12ms
step:1719/1770 train_time:171119ms step_avg:100.13ms
step:1720/1770 train_time:171225ms step_avg:100.13ms
step:1721/1770 train_time:171328ms step_avg:100.13ms
step:1722/1770 train_time:171436ms step_avg:100.14ms
step:1723/1770 train_time:171542ms step_avg:100.14ms
step:1724/1770 train_time:171649ms step_avg:100.15ms
step:1725/1770 train_time:171757ms step_avg:100.15ms
step:1726/1770 train_time:171864ms step_avg:100.15ms
step:1727/1770 train_time:171968ms step_avg:100.16ms
step:1728/1770 train_time:172076ms step_avg:100.16ms
step:1729/1770 train_time:172180ms step_avg:100.16ms
step:1730/1770 train_time:172286ms step_avg:100.17ms
step:1731/1770 train_time:172393ms step_avg:100.17ms
step:1732/1770 train_time:172498ms step_avg:100.17ms
step:1733/1770 train_time:172604ms step_avg:100.18ms
step:1734/1770 train_time:172708ms step_avg:100.18ms
step:1735/1770 train_time:172814ms step_avg:100.18ms
step:1736/1770 train_time:172918ms step_avg:100.18ms
step:1737/1770 train_time:173023ms step_avg:100.19ms
step:1738/1770 train_time:173128ms step_avg:100.19ms
step:1739/1770 train_time:173233ms step_avg:100.19ms
step:1740/1770 train_time:173337ms step_avg:100.19ms
step:1741/1770 train_time:173444ms step_avg:100.20ms
step:1742/1770 train_time:173552ms step_avg:100.20ms
step:1743/1770 train_time:173660ms step_avg:100.21ms
step:1744/1770 train_time:173764ms step_avg:100.21ms
step:1745/1770 train_time:173869ms step_avg:100.21ms
step:1746/1770 train_time:173977ms step_avg:100.22ms
step:1747/1770 train_time:174081ms step_avg:100.22ms
step:1748/1770 train_time:174188ms step_avg:100.22ms
step:1749/1770 train_time:174296ms step_avg:100.23ms
step:1750/1770 train_time:174398ms step_avg:100.23ms
step:1750/1770 val_loss:3.2946 train_time:174501ms step_avg:100.29ms
step:1751/1770 train_time:174521ms step_avg:100.24ms
step:1752/1770 train_time:174611ms step_avg:100.24ms
step:1753/1770 train_time:174715ms step_avg:100.24ms
step:1754/1770 train_time:174821ms step_avg:100.24ms
step:1755/1770 train_time:174927ms step_avg:100.24ms
step:1756/1770 train_time:175032ms step_avg:100.25ms
step:1757/1770 train_time:175137ms step_avg:100.25ms
step:1758/1770 train_time:175242ms step_avg:100.25ms
step:1759/1770 train_time:175347ms step_avg:100.26ms
step:1760/1770 train_time:175453ms step_avg:100.26ms
step:1761/1770 train_time:175561ms step_avg:100.26ms
step:1762/1770 train_time:175669ms step_avg:100.27ms
step:1763/1770 train_time:175773ms step_avg:100.27ms
step:1764/1770 train_time:175879ms step_avg:100.27ms
step:1765/1770 train_time:175983ms step_avg:100.28ms
step:1766/1770 train_time:176093ms step_avg:100.28ms
step:1767/1770 train_time:176196ms step_avg:100.28ms
step:1768/1770 train_time:176301ms step_avg:100.28ms
step:1769/1770 train_time:176406ms step_avg:100.29ms
step:1770/1770 train_time:176510ms step_avg:100.29ms
step:1770/1770 val_loss:3.2916 train_time:176615ms step_avg:100.35ms
peak memory allocated: 29898 MiB reserved: 44552 MiB
